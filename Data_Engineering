{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1m9hXkTyEbG0Ux6myJauzkhf3LEez53q_",
      "authorship_tag": "ABX9TyPOBKFTywks81NWnjpoUjGM"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "ENTREGA 1 - DATA ENGINEERING - MÁSTER EN DATA SCIENCE.  \n",
        "ALUMNA - LAURA LÓPEZ GARRIDO.\n",
        "\n",
        "PROYECTO BMW. Objetivo: Predecir el precio del vehículo."
      ],
      "metadata": {
        "id": "KVcNG6qETagn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comienzo montando drive."
      ],
      "metadata": {
        "id": "IBf_W5v0T7Aw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JcgAOS_Sx6ry",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a75a1581-27f7-4c90-f52a-a70cefd6e500"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Importo librerías.\n"
      ],
      "metadata": {
        "id": "rWGVwS6k4dr8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.preprocessing import LabelEncoder,MinMaxScaler"
      ],
      "metadata": {
        "id": "AOMAc_srykZ-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Leo el fichero de bmw."
      ],
      "metadata": {
        "id": "AkzLIZ9G3TbY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw = pd.read_csv(\"/content/drive/MyDrive/DataScience/Entregas/bmw_pricing_v2.csv\")"
      ],
      "metadata": {
        "id": "nMjVDsIHzQ3D"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Empiezo con un análisis inicial del dataset, para ir viendo columnas y datos."
      ],
      "metadata": {
        "id": "PGTSMPtL3hPe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "XZYoRWoqykXX",
        "outputId": "352b6d82-26ea-44ca-87a9-bb989568ef74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  marca modelo        km  potencia fecha_registro tipo_gasolina   color  \\\n",
              "0   BMW    118  140411.0     100.0     2012-02-01        diesel   black   \n",
              "1   BMW     M4   13929.0     317.0     2016-04-01        petrol    grey   \n",
              "2   BMW    320  183297.0     120.0     2012-04-01        diesel   white   \n",
              "3   BMW    420  128035.0     135.0     2014-07-01        diesel     red   \n",
              "4   BMW    425   97097.0     160.0     2014-12-01        diesel  silver   \n",
              "\n",
              "    tipo_coche volante_regulable aire_acondicionado camara_trasera  \\\n",
              "0  convertible              True               True          False   \n",
              "1  convertible              True               True          False   \n",
              "2  convertible             False              False          False   \n",
              "3  convertible              True               True          False   \n",
              "4  convertible              True               True          False   \n",
              "\n",
              "  asientos_traseros_plegables elevalunas_electrico bluetooth   gps  \\\n",
              "0                       False                 True      True  True   \n",
              "1                       False                False      True  True   \n",
              "2                       False                 True     False  True   \n",
              "3                       False                 True      True  True   \n",
              "4                       False                False      True  True   \n",
              "\n",
              "  alerta_lim_velocidad   precio fecha_venta  \n",
              "0                False  11300.0  2018-01-01  \n",
              "1                 True  69700.0  2018-02-01  \n",
              "2                False  10200.0  2018-02-01  \n",
              "3                 True  25100.0  2018-02-01  \n",
              "4                 True  33400.0  2018-04-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b2c7329-84ea-4785-b2b2-0fd45e934215\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>marca</th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BMW</td>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BMW</td>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>petrol</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BMW</td>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BMW</td>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BMW</td>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b2c7329-84ea-4785-b2b2-0fd45e934215')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3b2c7329-84ea-4785-b2b2-0fd45e934215 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3b2c7329-84ea-4785-b2b2-0fd45e934215');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "CVjC6WiRzc2b",
        "outputId": "3f27f399-9ed6-4c01-8013-812be35358be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     marca             modelo        km  potencia fecha_registro  \\\n",
              "4838   BMW    218 Gran Tourer   39743.0     110.0     2015-10-01   \n",
              "4839   BMW  218 Active Tourer   49832.0     100.0     2015-06-01   \n",
              "4840   BMW    218 Gran Tourer   19633.0     110.0     2015-10-01   \n",
              "4841   BMW  218 Active Tourer   27920.0     110.0     2016-04-01   \n",
              "4842   BMW                525  195840.0     160.0     2013-01-01   \n",
              "\n",
              "     tipo_gasolina  color tipo_coche volante_regulable aire_acondicionado  \\\n",
              "4838        diesel  black        van             False               True   \n",
              "4839        diesel   grey        van             False               True   \n",
              "4840        diesel   grey        van             False               True   \n",
              "4841        diesel  brown        van              True               True   \n",
              "4842        diesel   grey        NaN              True               True   \n",
              "\n",
              "     camara_trasera asientos_traseros_plegables elevalunas_electrico  \\\n",
              "4838          False                       False                False   \n",
              "4839          False                       False                False   \n",
              "4840          False                       False                False   \n",
              "4841          False                       False                False   \n",
              "4842          False                       False                 True   \n",
              "\n",
              "     bluetooth   gps alerta_lim_velocidad   precio fecha_venta  \n",
              "4838     False  True                False  14600.0  2018-08-01  \n",
              "4839     False  True                 True  17500.0  2018-08-01  \n",
              "4840     False  True                 True  17000.0  2018-09-01  \n",
              "4841     False  True                 True  22700.0  2018-09-01  \n",
              "4842     False  True                 True  15500.0  2018-09-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b000f6d3-261d-4cb9-bcd1-b931878126d2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>marca</th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4838</th>\n",
              "      <td>BMW</td>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4839</th>\n",
              "      <td>BMW</td>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4840</th>\n",
              "      <td>BMW</td>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4841</th>\n",
              "      <td>BMW</td>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4842</th>\n",
              "      <td>BMW</td>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>grey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b000f6d3-261d-4cb9-bcd1-b931878126d2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b000f6d3-261d-4cb9-bcd1-b931878126d2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b000f6d3-261d-4cb9-bcd1-b931878126d2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "ynMEcPlpzSQV",
        "outputId": "950db872-842f-47e7-b52d-7ba3c91f66a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 km     potencia         precio\n",
              "count  4.841000e+03  4842.000000    4837.000000\n",
              "mean   1.409593e+05   128.981826   15831.920612\n",
              "std    6.020853e+04    38.994839    9222.630708\n",
              "min   -6.400000e+01     0.000000     100.000000\n",
              "25%    1.028840e+05   100.000000   10800.000000\n",
              "50%    1.410800e+05   120.000000   14200.000000\n",
              "75%    1.752170e+05   135.000000   18600.000000\n",
              "max    1.000376e+06   423.000000  178500.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-50a86d65-6124-4541-8756-42acdfc0f19d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>precio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>4.841000e+03</td>\n",
              "      <td>4842.000000</td>\n",
              "      <td>4837.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.409593e+05</td>\n",
              "      <td>128.981826</td>\n",
              "      <td>15831.920612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.020853e+04</td>\n",
              "      <td>38.994839</td>\n",
              "      <td>9222.630708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-6.400000e+01</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>100.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.028840e+05</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>10800.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.410800e+05</td>\n",
              "      <td>120.000000</td>\n",
              "      <td>14200.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.752170e+05</td>\n",
              "      <td>135.000000</td>\n",
              "      <td>18600.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.000376e+06</td>\n",
              "      <td>423.000000</td>\n",
              "      <td>178500.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50a86d65-6124-4541-8756-42acdfc0f19d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-50a86d65-6124-4541-8756-42acdfc0f19d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-50a86d65-6124-4541-8756-42acdfc0f19d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9i3UDMVJzW47",
        "outputId": "8366886c-664b-4d02-dbcc-8a7e9cb468f4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(4843, 18)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "Ahora voy a ver cuántos duplicados hay.\n"
      ],
      "metadata": {
        "id": "sJw21oWP3ycg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw[bmw.duplicated()]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113
        },
        "id": "bKX1r5eslSqV",
        "outputId": "e2b900c5-bd38-467b-e4c8-369adc324afd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [marca, modelo, km, potencia, fecha_registro, tipo_gasolina, color, tipo_coche, volante_regulable, aire_acondicionado, camara_trasera, asientos_traseros_plegables, elevalunas_electrico, bluetooth, gps, alerta_lim_velocidad, precio, fecha_venta]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1fb7f38f-1cd4-43f7-a361-6ed22d30671e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>marca</th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fb7f38f-1cd4-43f7-a361-6ed22d30671e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1fb7f38f-1cd4-43f7-a361-6ed22d30671e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1fb7f38f-1cd4-43f7-a361-6ed22d30671e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dado que no sale ninguno, utilizo 'len' para estar más segura."
      ],
      "metadata": {
        "id": "Ww9sIZ2K4Buo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "len(bmw[bmw.duplicated()])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uFjQsxXnljDh",
        "outputId": "377dd703-e1d7-44fd-b20e-42da9b30b24f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comienzo el análisis de los datos nulos. Empiezo con un 'bmw.info()' para tener un primer contacto."
      ],
      "metadata": {
        "id": "5pd9704p4wN3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XyXYCOzaykUf",
        "outputId": "57b7cb9f-95a5-416d-c0e8-630d0da13650"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4843 entries, 0 to 4842\n",
            "Data columns (total 18 columns):\n",
            " #   Column                       Non-Null Count  Dtype  \n",
            "---  ------                       --------------  -----  \n",
            " 0   marca                        4841 non-null   object \n",
            " 1   modelo                       4840 non-null   object \n",
            " 2   km                           4841 non-null   float64\n",
            " 3   potencia                     4842 non-null   float64\n",
            " 4   fecha_registro               4842 non-null   object \n",
            " 5   tipo_gasolina                4838 non-null   object \n",
            " 6   color                        4831 non-null   object \n",
            " 7   tipo_coche                   4834 non-null   object \n",
            " 8   volante_regulable            4839 non-null   object \n",
            " 9   aire_acondicionado           4841 non-null   object \n",
            " 10  camara_trasera               4841 non-null   object \n",
            " 11  asientos_traseros_plegables  4839 non-null   object \n",
            " 12  elevalunas_electrico         4841 non-null   object \n",
            " 13  bluetooth                    4839 non-null   object \n",
            " 14  gps                          4843 non-null   bool   \n",
            " 15  alerta_lim_velocidad         4841 non-null   object \n",
            " 16  precio                       4837 non-null   float64\n",
            " 17  fecha_venta                  4842 non-null   object \n",
            "dtypes: bool(1), float64(3), object(14)\n",
            "memory usage: 648.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora detallo con 'isnull().sum()', para contar por columnas cuantos nulos hay."
      ],
      "metadata": {
        "id": "h_aFrrXp5t4Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "epPxoM3xykRX",
        "outputId": "137e5c81-15c9-4b94-86b2-f28c35825d20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "marca                           2\n",
              "modelo                          3\n",
              "km                              2\n",
              "potencia                        1\n",
              "fecha_registro                  1\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          6\n",
              "fecha_venta                     1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Iré viendo columna a columna con detalle, para ver qué hacer con los nulos de cada una. Empiezo por la columna 'precio' ya que es nuestro target. Aquí tenemos 6 nulos."
      ],
      "metadata": {
        "id": "Z2kogJO77V-2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "  bmw['precio'].hist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "XSiOvkZbyqCv",
        "outputId": "5318064c-875a-4b32-f0b1-81b8585e9f04"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Detallo las filas de 'precio' que contienen nulos, para comprobar qué aportan en el resto de datos."
      ],
      "metadata": {
        "id": "XC2GScNO7-qt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw[bmw['precio'].isnull()]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "elgd7Wteyydw",
        "outputId": "3e6fdf7c-a59d-49ae-cec9-8bdcfab52068"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    marca modelo        km  potencia fecha_registro tipo_gasolina  color  \\\n",
              "117   BMW    420  174740.0     135.0     2013-11-01        diesel  white   \n",
              "524   BMW    520  163803.0     135.0     2013-07-01        diesel   grey   \n",
              "539   BMW    316   34489.0      85.0     2013-07-01        diesel  black   \n",
              "549   BMW    318  157129.0     100.0     2013-09-01        diesel   blue   \n",
              "569   BMW    320  166866.0     120.0     2014-05-01        diesel   blue   \n",
              "584   BMW    320  114771.0     135.0     2014-05-01        diesel   blue   \n",
              "\n",
              "    tipo_coche volante_regulable aire_acondicionado camara_trasera  \\\n",
              "117      coupe              True               True           True   \n",
              "524     estate             False               True           True   \n",
              "539     estate              True              False          False   \n",
              "549     estate              True               True           True   \n",
              "569     estate              True               True          False   \n",
              "584     estate             False               True          False   \n",
              "\n",
              "    asientos_traseros_plegables elevalunas_electrico bluetooth   gps  \\\n",
              "117                       False                 True      True  True   \n",
              "524                       False                False     False  True   \n",
              "539                       False                False     False  True   \n",
              "549                       False                 True     False  True   \n",
              "569                       False                 True      True  True   \n",
              "584                       False                False     False  True   \n",
              "\n",
              "    alerta_lim_velocidad  precio fecha_venta  \n",
              "117                 True     NaN  2018-05-01  \n",
              "524                False     NaN  2018-02-01  \n",
              "539                False     NaN  2018-02-01  \n",
              "549                 True     NaN  2018-03-01  \n",
              "569                 True     NaN  2018-03-01  \n",
              "584                False     NaN  2018-03-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41e28c0b-cfb3-4505-ad26-a450ddfabf36\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>marca</th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>BMW</td>\n",
              "      <td>420</td>\n",
              "      <td>174740.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2013-11-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>white</td>\n",
              "      <td>coupe</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-05-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>524</th>\n",
              "      <td>BMW</td>\n",
              "      <td>520</td>\n",
              "      <td>163803.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2013-07-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>grey</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>539</th>\n",
              "      <td>BMW</td>\n",
              "      <td>316</td>\n",
              "      <td>34489.0</td>\n",
              "      <td>85.0</td>\n",
              "      <td>2013-07-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>549</th>\n",
              "      <td>BMW</td>\n",
              "      <td>318</td>\n",
              "      <td>157129.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2013-09-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>blue</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>569</th>\n",
              "      <td>BMW</td>\n",
              "      <td>320</td>\n",
              "      <td>166866.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2014-05-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>blue</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>584</th>\n",
              "      <td>BMW</td>\n",
              "      <td>320</td>\n",
              "      <td>114771.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-05-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>blue</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41e28c0b-cfb3-4505-ad26-a450ddfabf36')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-41e28c0b-cfb3-4505-ad26-a450ddfabf36 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-41e28c0b-cfb3-4505-ad26-a450ddfabf36');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Como 'precio' es el target, en lugar de sustituir los nulos, elimino las filas con 'precio' nulo para no interferir en el modelo."
      ],
      "metadata": {
        "id": "-u6cAMJv-GZV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2 = bmw.dropna(subset=['precio'])"
      ],
      "metadata": {
        "id": "5YoMFV09z2u-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que el dataset se ha actualizado con 6 entradas menos."
      ],
      "metadata": {
        "id": "kTFx4tj6-SeB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y9N1o1iM0l4h",
        "outputId": "5e5f113c-1a09-4226-da3b-1cbba6598ce3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 4837 entries, 0 to 4842\n",
            "Data columns (total 18 columns):\n",
            " #   Column                       Non-Null Count  Dtype  \n",
            "---  ------                       --------------  -----  \n",
            " 0   marca                        4835 non-null   object \n",
            " 1   modelo                       4834 non-null   object \n",
            " 2   km                           4835 non-null   float64\n",
            " 3   potencia                     4836 non-null   float64\n",
            " 4   fecha_registro               4836 non-null   object \n",
            " 5   tipo_gasolina                4832 non-null   object \n",
            " 6   color                        4825 non-null   object \n",
            " 7   tipo_coche                   4828 non-null   object \n",
            " 8   volante_regulable            4833 non-null   object \n",
            " 9   aire_acondicionado           4835 non-null   object \n",
            " 10  camara_trasera               4835 non-null   object \n",
            " 11  asientos_traseros_plegables  4833 non-null   object \n",
            " 12  elevalunas_electrico         4835 non-null   object \n",
            " 13  bluetooth                    4833 non-null   object \n",
            " 14  gps                          4837 non-null   bool   \n",
            " 15  alerta_lim_velocidad         4835 non-null   object \n",
            " 16  precio                       4837 non-null   float64\n",
            " 17  fecha_venta                  4836 non-null   object \n",
            "dtypes: bool(1), float64(3), object(14)\n",
            "memory usage: 684.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continúo la limpieza de datos por la columna 'marca'."
      ],
      "metadata": {
        "id": "0H_lLJu5-Y5u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2['marca'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a_jMoCba1Soj",
        "outputId": "58cf9d5d-02f1-40f6-ee97-8c15f66f5325"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BMW    4835\n",
              "Name: marca, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(bmw[bmw['marca'].isnull()])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lAD1eyzb-n9T",
        "outputId": "3d441a8a-b9d4-4955-ad9e-68ebad6eeb51"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Tengo 2 nulos en la columna 'marca'. Como todo el dataset es de bmw, elimino la columna ya que no aporta información relevante."
      ],
      "metadata": {
        "id": "mR0Q0J1R-sN3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del(bmw2['marca'])"
      ],
      "metadata": {
        "id": "3X3Tt8jGykLp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Reviso las columnas para ver que ya no estê 'marca' y ver con qué columna continuar."
      ],
      "metadata": {
        "id": "XpTwuEiuCKyz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xdliYsODykE5",
        "outputId": "4f77516b-3989-4123-bf9b-b07a2c7c8ad7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          3\n",
              "km                              2\n",
              "potencia                        1\n",
              "fecha_registro                  1\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora entonces es el turno de la columna modelo, con 3 nulos."
      ],
      "metadata": {
        "id": "xWI-3-oFCXtx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2['modelo'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hyt4kRz-yi3k",
        "outputId": "6db68996-9e8b-4aa3-c3bf-78aad1e20efc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "320                750\n",
              "520                632\n",
              "318                567\n",
              "X3                 438\n",
              "116                358\n",
              "                  ... \n",
              "M135                 1\n",
              "225                  1\n",
              "i8                   1\n",
              "630                  1\n",
              "214 Gran Tourer      1\n",
              "Name: modelo, Length: 76, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "En el dataset hay 76 modelos diferentes. Tenemos 3 filas sin modelo especificado.\n"
      ],
      "metadata": {
        "id": "uGZstO22Ceut"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw2[bmw2['modelo'].isnull()]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 207
        },
        "id": "iK1jHU2w8G_1",
        "outputId": "32276a43-fe97-4d6e-91e7-f93b67c28825"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     modelo        km  potencia fecha_registro tipo_gasolina   color  \\\n",
              "173     NaN  146338.0     105.0     2014-01-01        diesel   black   \n",
              "4766    NaN  115566.0     105.0     2014-01-01        diesel  silver   \n",
              "4802    NaN  118640.0     110.0     2014-09-01        diesel   white   \n",
              "\n",
              "     tipo_coche volante_regulable aire_acondicionado camara_trasera  \\\n",
              "173      estate             False               True          False   \n",
              "4766        suv             False               True          False   \n",
              "4802        van             False              False          False   \n",
              "\n",
              "     asientos_traseros_plegables elevalunas_electrico bluetooth    gps  \\\n",
              "173                        False                False     False   True   \n",
              "4766                        True                 True     False   True   \n",
              "4802                       False                False     False  False   \n",
              "\n",
              "     alerta_lim_velocidad   precio fecha_venta  \n",
              "173                  True  13300.0  2018-08-01  \n",
              "4766                False  14900.0  2018-09-01  \n",
              "4802                False    800.0  2018-03-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a366d979-6152-4529-ae9f-9cab3cfef16c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>NaN</td>\n",
              "      <td>146338.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2014-01-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>13300.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4766</th>\n",
              "      <td>NaN</td>\n",
              "      <td>115566.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2014-01-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>silver</td>\n",
              "      <td>suv</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14900.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4802</th>\n",
              "      <td>NaN</td>\n",
              "      <td>118640.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2014-09-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>white</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>800.0</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a366d979-6152-4529-ae9f-9cab3cfef16c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a366d979-6152-4529-ae9f-9cab3cfef16c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a366d979-6152-4529-ae9f-9cab3cfef16c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Guardo una copia primero, y luego sustituyo los nulos de 'modelo' por 'unknown' para poder mantener las filas y los datos del resto de columnas de los 3 nulos."
      ],
      "metadata": {
        "id": "y94ouwPEEmcJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        " bmw3 = bmw2.copy()"
      ],
      "metadata": {
        "id": "Es7yb2KNJjW1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3['modelo'].fillna('unknown', inplace=True)"
      ],
      "metadata": {
        "id": "BakIM3rlJevz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que la columna modelo ya no tiene nulos, y prosigo con la lista de columnas."
      ],
      "metadata": {
        "id": "0gx56T_HFFYj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7ZtNf_xUJ9kK",
        "outputId": "f787f275-fb7c-4569-b06d-81dcbaaf8a74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          0\n",
              "km                              2\n",
              "potencia                        1\n",
              "fecha_registro                  1\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora analizo la columna 'km'. Tenemos 2 nulos."
      ],
      "metadata": {
        "id": "r1CSPgRjFO1L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3['km'].hist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "jluFVa__4xVe",
        "outputId": "685e5382-a4ad-409d-8014-034bb0de87ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 25
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Veo que hay algunos pequeños datos por encima de 0.4e6, por lo que los voy a detallar."
      ],
      "metadata": {
        "id": "AnJtE6itGPC_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3[bmw3['km']>0.4e6]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "GMkG-o5kGXWu",
        "outputId": "ac447d00-8470-426d-8ef5-5ece82b34575"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     modelo         km  potencia fecha_registro tipo_gasolina   color  \\\n",
              "557     520   484615.0     120.0     2011-02-01        diesel    blue   \n",
              "1573    320   400654.0     110.0     2006-12-01        diesel   black   \n",
              "2350    318   477571.0      85.0     2004-09-01        diesel    grey   \n",
              "2829    525   439060.0     105.0     1996-10-01        diesel  silver   \n",
              "3198    320   405816.0     100.0     2000-02-01        diesel    blue   \n",
              "3732    118  1000376.0      90.0     2005-03-01        diesel   black   \n",
              "\n",
              "      tipo_coche volante_regulable aire_acondicionado camara_trasera  \\\n",
              "557       estate              True               True          False   \n",
              "1573      estate             False              False           True   \n",
              "2350   hatchback             False               True          False   \n",
              "2829       sedan             False              False           True   \n",
              "3198       sedan             False              False          False   \n",
              "3732  subcompact              True              False          False   \n",
              "\n",
              "     asientos_traseros_plegables elevalunas_electrico bluetooth    gps  \\\n",
              "557                        False                False     False   True   \n",
              "1573                       False                False     False   True   \n",
              "2350                       False                False      True  False   \n",
              "2829                       False                False     False   True   \n",
              "3198                       False                False     False   True   \n",
              "3732                       False                False     False   True   \n",
              "\n",
              "     alerta_lim_velocidad  precio fecha_venta  \n",
              "557                 False  8300.0  2018-03-01  \n",
              "1573                False  1800.0  2018-07-01  \n",
              "2350                False  1200.0  2018-07-01  \n",
              "2829                False   100.0  2018-03-01  \n",
              "3198                False   500.0  2018-05-01  \n",
              "3732                False  1400.0  2018-06-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d66b6827-e616-4314-967d-9879dac37238\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>557</th>\n",
              "      <td>520</td>\n",
              "      <td>484615.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2011-02-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>blue</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>8300.0</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1573</th>\n",
              "      <td>320</td>\n",
              "      <td>400654.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2006-12-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>1800.0</td>\n",
              "      <td>2018-07-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2350</th>\n",
              "      <td>318</td>\n",
              "      <td>477571.0</td>\n",
              "      <td>85.0</td>\n",
              "      <td>2004-09-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>grey</td>\n",
              "      <td>hatchback</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>1200.0</td>\n",
              "      <td>2018-07-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2829</th>\n",
              "      <td>525</td>\n",
              "      <td>439060.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>1996-10-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>silver</td>\n",
              "      <td>sedan</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3198</th>\n",
              "      <td>320</td>\n",
              "      <td>405816.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2000-02-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>blue</td>\n",
              "      <td>sedan</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>500.0</td>\n",
              "      <td>2018-05-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3732</th>\n",
              "      <td>118</td>\n",
              "      <td>1000376.0</td>\n",
              "      <td>90.0</td>\n",
              "      <td>2005-03-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>black</td>\n",
              "      <td>subcompact</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>1400.0</td>\n",
              "      <td>2018-06-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d66b6827-e616-4314-967d-9879dac37238')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d66b6827-e616-4314-967d-9879dac37238 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d66b6827-e616-4314-967d-9879dac37238');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(bmw3[bmw3['km']>0.4e6])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GyvzAx1-Gah3",
        "outputId": "44c22cb6-3f7a-4a04-98e0-98df532ef76b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Veo que hay 6 registros de 'km' muy extremos. Para tratar los nulos, dado que en el histograma se observa una distribución asimétrica, lo ideal sería sustituirlos por la mediana. De todas maneras, calcularé media y mediana para comprobar que son similares (descartando los valores extremos que están por encima de 0.4e6)"
      ],
      "metadata": {
        "id": "3e2q2aogGguf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "media_km = bmw3[(bmw3['km']>0) & (bmw3['km']<=0.4e6)]['km'].mean()"
      ],
      "metadata": {
        "id": "YmLh1A-mSKfs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "media_km"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R3l_ERnyHHm7",
        "outputId": "f4000769-0028-47b7-9067-9e1f4a0e7ea2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "140506.2918392709"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mediana_km = bmw3[(bmw3['km']>0) & (bmw3['km']<=0.4e6)]['km'].median()"
      ],
      "metadata": {
        "id": "I80bPJvOgVXP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mediana_km"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CcHGPFeTgkZf",
        "outputId": "3144e585-1f6a-4102-85a8-78169247b82c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "140947.5"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "He comprobado que son valores muy parecidos (media y mediana) pero dada la distribución asimétrica que mencioné anteriormente, sustituyo los nulos de 'km' por la mediana."
      ],
      "metadata": {
        "id": "McuS7_hWHL8V"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3['km'].fillna(mediana_km, inplace=True)"
      ],
      "metadata": {
        "id": "4eul3vaae4FP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que la columna 'km' ya no tiene nulos, y prosigo con la lista de columnas."
      ],
      "metadata": {
        "id": "a5T64nxkHkXy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c_va-8BmfNHQ",
        "outputId": "d7275401-4bc3-485c-d844-9fa1c55d2c1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          0\n",
              "km                              0\n",
              "potencia                        1\n",
              "fecha_registro                  1\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continúo con la columna 'potencia', que tiene 1 nulo."
      ],
      "metadata": {
        "id": "gZAhcmsmHogF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3['potencia'].hist()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "OUgaKKIM0QUx",
        "outputId": "51155f9d-bf64-4b76-d02b-6f86c480ffae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hago lo mismo que con 'km'. Empiezo comprobando los valores extremos, en éste caso tanto de los valores máb bajos como de los más altos."
      ],
      "metadata": {
        "id": "eCSLlIgaH4Ee"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3[(bmw3['potencia'] < 50) | (bmw3['potencia'] > 340)]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "GuvsHBHSH-cG",
        "outputId": "dd88f029-7b45-4578-db11-fcd6c7881676"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     modelo        km  potencia fecha_registro  tipo_gasolina  color  \\\n",
              "1796     i3  152328.0      25.0     2014-02-01  hybrid_petrol  black   \n",
              "1925     i3  152470.0      25.0     2014-02-01  hybrid_petrol  black   \n",
              "3601     M5  150187.0     412.0     2012-02-01         petrol  white   \n",
              "3765     X1   81770.0       0.0     2014-10-01         diesel  white   \n",
              "4146   X6 M    2970.0     423.0     2016-04-01         petrol    red   \n",
              "\n",
              "     tipo_coche volante_regulable aire_acondicionado camara_trasera  \\\n",
              "1796  hatchback             False               True          False   \n",
              "1925  hatchback             False               True          False   \n",
              "3601      sedan              True               True           True   \n",
              "3765        suv             False              False          False   \n",
              "4146        suv              True               True           True   \n",
              "\n",
              "     asientos_traseros_plegables elevalunas_electrico bluetooth    gps  \\\n",
              "1796                       False                False     False   True   \n",
              "1925                       False                False     False   True   \n",
              "3601                       False                 True      True   True   \n",
              "3765                       False                False     False  False   \n",
              "4146                       False                False     False   True   \n",
              "\n",
              "     alerta_lim_velocidad   precio fecha_venta  \n",
              "1796                 True  20300.0  2018-04-01  \n",
              "1925                 True  15500.0  2018-03-01  \n",
              "3601                 True  41600.0  2018-09-01  \n",
              "3765                False  11700.0  2018-03-01  \n",
              "4146                 True  82400.0  2018-04-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-08ae9e37-1d0b-4232-8f9f-90b50537ce46\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>tipo_gasolina</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1796</th>\n",
              "      <td>i3</td>\n",
              "      <td>152328.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>2014-02-01</td>\n",
              "      <td>hybrid_petrol</td>\n",
              "      <td>black</td>\n",
              "      <td>hatchback</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>20300.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1925</th>\n",
              "      <td>i3</td>\n",
              "      <td>152470.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>2014-02-01</td>\n",
              "      <td>hybrid_petrol</td>\n",
              "      <td>black</td>\n",
              "      <td>hatchback</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3601</th>\n",
              "      <td>M5</td>\n",
              "      <td>150187.0</td>\n",
              "      <td>412.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>petrol</td>\n",
              "      <td>white</td>\n",
              "      <td>sedan</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>41600.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3765</th>\n",
              "      <td>X1</td>\n",
              "      <td>81770.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2014-10-01</td>\n",
              "      <td>diesel</td>\n",
              "      <td>white</td>\n",
              "      <td>suv</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>11700.0</td>\n",
              "      <td>2018-03-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4146</th>\n",
              "      <td>X6 M</td>\n",
              "      <td>2970.0</td>\n",
              "      <td>423.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>petrol</td>\n",
              "      <td>red</td>\n",
              "      <td>suv</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>82400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08ae9e37-1d0b-4232-8f9f-90b50537ce46')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-08ae9e37-1d0b-4232-8f9f-90b50537ce46 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-08ae9e37-1d0b-4232-8f9f-90b50537ce46');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(bmw3[(bmw3['potencia'] < 50) | (bmw3['potencia'] > 340)])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5YR1YisRJBUz",
        "outputId": "2f78163a-b9e4-4e2c-debc-105a3d9fc0ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora calculo la media y la mediana de 'potencia' sin los extremos mas alejados."
      ],
      "metadata": {
        "id": "Kdja_GQFJGdt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "media_potencia = bmw3[(bmw3['potencia']>40) & (bmw3['potencia']<340)]['potencia'].mean()"
      ],
      "metadata": {
        "id": "qKZT4S47JOW6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "media_potencia"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aq0zXJA7meM0",
        "outputId": "8139ef83-5a47-41ba-a534-74959461e951"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "128.9453529290002"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mediana_potencia = bmw3[(bmw3['potencia']>40) & (bmw3['potencia']<340)]['potencia'].median()"
      ],
      "metadata": {
        "id": "lP3-vovN7wGA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mediana_potencia"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7TdSxdLAmYYw",
        "outputId": "702bfd51-601f-4774-f9d5-9ba9145c2693"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "120.0"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Media y mediana se parecen bastante, sustituyo el nulo de potencia por la mediana, ya que el histograma tiene una distribución anormal."
      ],
      "metadata": {
        "id": "2EnTUT6NJX1H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3['potencia'].fillna(mediana_potencia, inplace=True)"
      ],
      "metadata": {
        "id": "spmj-qKsmiIa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que la columna 'potencia' ya no tiene nulos, y prosigo con la lista de columnas."
      ],
      "metadata": {
        "id": "6fll6yQEJjLq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw3.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DXHsGsfXmv48",
        "outputId": "3100bbba-7c47-42f4-ea6e-681249eb614b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          0\n",
              "km                              0\n",
              "potencia                        0\n",
              "fecha_registro                  1\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hago una nueva copia del dataset."
      ],
      "metadata": {
        "id": "EZ6bBNruJoKb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw4 = bmw3.copy()"
      ],
      "metadata": {
        "id": "d_rA3-FZmzDO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora toca trabajar la columna 'fecha_registro' que tiene 1 nulo."
      ],
      "metadata": {
        "id": "kwLYiQwAJq0v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw4['fecha_registro'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jY3ixQtl0QRG",
        "outputId": "884422bf-592b-4df9-e6c8-4d9271464135"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2013-07-01    171\n",
              "2014-03-01    162\n",
              "2014-05-01    151\n",
              "2013-01-01    148\n",
              "2013-09-01    147\n",
              "             ... \n",
              "2000-01-01      1\n",
              "1990-03-01      1\n",
              "1996-10-01      1\n",
              "2017-03-01      1\n",
              "2007-12-01      1\n",
              "Name: fecha_registro, Length: 199, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Veo que el dataset hay otra fecha, 'fecha_venta', que también voy a detallar."
      ],
      "metadata": {
        "id": "DgIVrrn1Khn-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw4['fecha_venta'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KcKaCIxb4C1L",
        "outputId": "e5e94f07-c687-44c1-d2fe-19b5a8a8dbc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2018-05-01    808\n",
              "2018-03-01    735\n",
              "2018-04-01    691\n",
              "2018-06-01    603\n",
              "2018-07-01    537\n",
              "2018-08-01    527\n",
              "2018-02-01    500\n",
              "2018-09-01    223\n",
              "2018-01-01    208\n",
              "2007-08-01      1\n",
              "2010-04-01      1\n",
              "2009-04-01      1\n",
              "2008-06-01      1\n",
              "Name: fecha_venta, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Convierto las dos columnas con fechas, a datetime, para más adelante poder hacer operaciones con ellas."
      ],
      "metadata": {
        "id": "YYHNZlo1Kvd6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw4['fecha_registro'] = pd.to_datetime(bmw4['fecha_registro'])\n",
        "bmw4['fecha_venta'] = pd.to_datetime(bmw4['fecha_venta'])"
      ],
      "metadata": {
        "id": "pTX4Mr_K5VFa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que el Dtype de las fechas es 'datetime' ahora."
      ],
      "metadata": {
        "id": "tcXuPtt4K1CJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw4.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NNjkiJPy4aFT",
        "outputId": "751a363a-9deb-41c5-db75-7ae6203ef410"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 4837 entries, 0 to 4842\n",
            "Data columns (total 17 columns):\n",
            " #   Column                       Non-Null Count  Dtype         \n",
            "---  ------                       --------------  -----         \n",
            " 0   modelo                       4837 non-null   object        \n",
            " 1   km                           4837 non-null   float64       \n",
            " 2   potencia                     4837 non-null   float64       \n",
            " 3   fecha_registro               4836 non-null   datetime64[ns]\n",
            " 4   tipo_gasolina                4832 non-null   object        \n",
            " 5   color                        4825 non-null   object        \n",
            " 6   tipo_coche                   4828 non-null   object        \n",
            " 7   volante_regulable            4833 non-null   object        \n",
            " 8   aire_acondicionado           4835 non-null   object        \n",
            " 9   camara_trasera               4835 non-null   object        \n",
            " 10  asientos_traseros_plegables  4833 non-null   object        \n",
            " 11  elevalunas_electrico         4835 non-null   object        \n",
            " 12  bluetooth                    4833 non-null   object        \n",
            " 13  gps                          4837 non-null   bool          \n",
            " 14  alerta_lim_velocidad         4835 non-null   object        \n",
            " 15  precio                       4837 non-null   float64       \n",
            " 16  fecha_venta                  4836 non-null   datetime64[ns]\n",
            "dtypes: bool(1), datetime64[ns](2), float64(3), object(11)\n",
            "memory usage: 647.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "En cada una de las fechas hay 1 nulo, por lo que elimino la fila con dato nulo de ambas fechas.\n",
        "Antes de todo esto, hago una copia."
      ],
      "metadata": {
        "id": "DjiC17dyMUBO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5 = bmw4.copy()"
      ],
      "metadata": {
        "id": "16bTTeSQ6ufV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5 = bmw4.dropna(subset=['fecha_venta' , 'fecha_registro'])"
      ],
      "metadata": {
        "id": "50KQB96z7CJ5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que las columnas 'fecha_registro' y 'fecha_venta' ya no tienen nulos, y prosigo con la lista de columnas."
      ],
      "metadata": {
        "id": "UYQms5c8NVM6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a65yU2xA8W_N",
        "outputId": "6fdde841-8cf8-43d2-a38f-84e122a7fbc4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          0\n",
              "km                              0\n",
              "potencia                        0\n",
              "fecha_registro                  0\n",
              "tipo_gasolina                   5\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora toca analizar la columna 'tipo_gasolina', de la que tenemos 5 nulos."
      ],
      "metadata": {
        "id": "3CLuDnpfNcn4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5['tipo_gasolina'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "leYb7O6o5bii",
        "outputId": "d1ae1f8d-0c33-42a4-e8e7-ca700db1187a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "diesel           4623\n",
              "petrol            191\n",
              "hybrid_petrol       8\n",
              "Diesel              5\n",
              "electro             3\n",
              "Name: tipo_gasolina, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Empezaré llamando a los nulos, 'no_info'. Después, juntaré 'diesel' y 'Diesel', para que se llamen 'diesel'. Además, el resto de gasolinas (incluido 'no_info') pasarán a llamarse 'no_diesel'. Por último, cambiaré el nombre de la columna por 'gas_diesel', y en caso de que la respuesta esté dentro de 'diesel', se reflejará True, en caso contrario, False."
      ],
      "metadata": {
        "id": "BnFGwhevSBJy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5['tipo_gasolina'].fillna('no_info', inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nLjF_0f7Sl-P",
        "outputId": "48d89f33-1d82-4c87-eeda-abeaba43d335"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-52-8bee6c90ebe8>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  bmw5['tipo_gasolina'].fillna('no_info', inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in ['petrol', 'hybrid_petrol', 'electro', 'no_info']:\n",
        "    bmw5['tipo_gasolina'] = bmw5['tipo_gasolina'].replace(i, 'no_diesel')\n",
        "\n",
        "for i in ['Diesel', 'diesel']:\n",
        "    bmw5['tipo_gasolina'] = bmw5['tipo_gasolina'].replace(i, 'diesel')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CsGUG1QJam2t",
        "outputId": "838e429b-7f31-41b1-abac-cea95ae75b98"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-53-be7205292f85>:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  bmw5['tipo_gasolina'] = bmw5['tipo_gasolina'].replace(i, 'no_diesel')\n",
            "<ipython-input-53-be7205292f85>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  bmw5['tipo_gasolina'] = bmw5['tipo_gasolina'].replace(i, 'diesel')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5['tipo_gasolina'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CxcP5A6Famyz",
        "outputId": "cafde3ac-8120-4abb-9e85-4d3bfcefb996"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "diesel       4628\n",
              "no_diesel     207\n",
              "Name: tipo_gasolina, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5.rename(columns={'tipo_gasolina': 'gas_diesel'}, inplace=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kR0HvYfBS5Lr",
        "outputId": "d1a22dd4-274d-470a-9e4e-32044d199a16"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-55-c88f0d30c093>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  bmw5.rename(columns={'tipo_gasolina': 'gas_diesel'}, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5['gas_diesel'] = bmw5['gas_diesel'].apply(lambda x: True if x == 'diesel' else False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zlYDtaL0S49E",
        "outputId": "bdba83f3-2c79-45e1-b546-4295a7c60012"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-56-24d6abf8f10d>:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  bmw5['gas_diesel'] = bmw5['gas_diesel'].apply(lambda x: True if x == 'diesel' else False)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw5.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "o4F_shAuTKfD",
        "outputId": "8588d9f1-6ade-4b6e-cdea-35cde9016a85"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia fecha_registro  gas_diesel   color   tipo_coche  \\\n",
              "0    118  140411.0     100.0     2012-02-01        True   black  convertible   \n",
              "1     M4   13929.0     317.0     2016-04-01       False    grey  convertible   \n",
              "2    320  183297.0     120.0     2012-04-01        True   white  convertible   \n",
              "3    420  128035.0     135.0     2014-07-01        True     red  convertible   \n",
              "4    425   97097.0     160.0     2014-12-01        True  silver  convertible   \n",
              "\n",
              "  volante_regulable aire_acondicionado camara_trasera  \\\n",
              "0              True               True          False   \n",
              "1              True               True          False   \n",
              "2             False              False          False   \n",
              "3              True               True          False   \n",
              "4              True               True          False   \n",
              "\n",
              "  asientos_traseros_plegables elevalunas_electrico bluetooth   gps  \\\n",
              "0                       False                 True      True  True   \n",
              "1                       False                False      True  True   \n",
              "2                       False                 True     False  True   \n",
              "3                       False                 True      True  True   \n",
              "4                       False                False      True  True   \n",
              "\n",
              "  alerta_lim_velocidad   precio fecha_venta  \n",
              "0                False  11300.0  2018-01-01  \n",
              "1                 True  69700.0  2018-02-01  \n",
              "2                False  10200.0  2018-02-01  \n",
              "3                 True  25100.0  2018-02-01  \n",
              "4                 True  33400.0  2018-04-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1a8438f8-1659-4018-8dbd-e9d7360853f2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a8438f8-1659-4018-8dbd-e9d7360853f2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1a8438f8-1659-4018-8dbd-e9d7360853f2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1a8438f8-1659-4018-8dbd-e9d7360853f2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continúo con la lista de nulos para comprobar que 'gas_diesel' ya no tiene nulos, y ver con cual columna tengo que seguir. Antes guardo copia.  "
      ],
      "metadata": {
        "id": "F1hs1OO1iUNo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6 = bmw5.copy()"
      ],
      "metadata": {
        "id": "4YTSPVZiT2IK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "51iXeTwFiGcS",
        "outputId": "0ff48690-f3f7-497a-da64-b7b68af2a99b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                          0\n",
              "km                              0\n",
              "potencia                        0\n",
              "fecha_registro                  0\n",
              "gas_diesel                      0\n",
              "color                          12\n",
              "tipo_coche                      9\n",
              "volante_regulable               4\n",
              "aire_acondicionado              2\n",
              "camara_trasera                  2\n",
              "asientos_traseros_plegables     4\n",
              "elevalunas_electrico            2\n",
              "bluetooth                       4\n",
              "gps                             0\n",
              "alerta_lim_velocidad            2\n",
              "precio                          0\n",
              "fecha_venta                     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora hay que tratar la columna 'color' que tiene 12 nulos."
      ],
      "metadata": {
        "id": "Ia2LuDShiWff"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['color'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P-7i7CJy6ppp",
        "outputId": "2233893c-a9e8-47c9-831a-6277a9d0d036"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "black     1630\n",
              "grey      1170\n",
              "blue       704\n",
              "white      536\n",
              "brown      341\n",
              "silver     326\n",
              "red         51\n",
              "beige       41\n",
              "green       18\n",
              "orange       6\n",
              "Name: color, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Detallo las 12 filas de valor nulo en 'color'."
      ],
      "metadata": {
        "id": "8pLBoSaYikD_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6[bmw6['color'].isnull()]"
      ],
      "metadata": {
        "id": "xa0O1Hhz8NaR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "outputId": "5f4d3d53-8a63-4374-adbf-dbebf751e252"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     modelo        km  potencia fecha_registro  gas_diesel color tipo_coche  \\\n",
              "239     318  132731.0     100.0     2013-09-01        True   NaN     estate   \n",
              "834     318  148429.0     100.0     2013-06-01        True   NaN     estate   \n",
              "855     318  139736.0     100.0     2009-02-01        True   NaN     estate   \n",
              "864     318  157661.0     100.0     2013-06-01        True   NaN     estate   \n",
              "884     320  145981.0     122.0     2013-07-01        True   NaN     estate   \n",
              "904     320  126425.0     120.0     2013-07-01        True   NaN     estate   \n",
              "939     520  153102.0     140.0     2015-04-01        True   NaN     estate   \n",
              "1569    318  191804.0     100.0     2013-10-01        True   NaN     estate   \n",
              "1591    320  130624.0     120.0     2013-07-01        True   NaN     estate   \n",
              "1612    330   23811.0     190.0     2015-12-01        True   NaN     estate   \n",
              "1618    318  205603.0     105.0     2013-02-01        True   NaN     estate   \n",
              "1638    320  187454.0     120.0     2013-01-01        True   NaN     estate   \n",
              "\n",
              "     volante_regulable aire_acondicionado camara_trasera  \\\n",
              "239               True               True          False   \n",
              "834              False               True          False   \n",
              "855              False              False          False   \n",
              "864              False               True          False   \n",
              "884               True               True          False   \n",
              "904              False               True          False   \n",
              "939               True               True           True   \n",
              "1569             False               True          False   \n",
              "1591              True               True          False   \n",
              "1612              True               True           True   \n",
              "1618             False               True          False   \n",
              "1638             False               True          False   \n",
              "\n",
              "     asientos_traseros_plegables elevalunas_electrico bluetooth   gps  \\\n",
              "239                        False                False     False  True   \n",
              "834                        False                False      True  True   \n",
              "855                        False                False     False  True   \n",
              "864                        False                False     False  True   \n",
              "884                        False                 True      True  True   \n",
              "904                        False                False     False  True   \n",
              "939                        False                 True     False  True   \n",
              "1569                       False                 True      True  True   \n",
              "1591                       False                False     False  True   \n",
              "1612                       False                False     False  True   \n",
              "1618                       False                 True     False  True   \n",
              "1638                       False                 True      True  True   \n",
              "\n",
              "     alerta_lim_velocidad   precio fecha_venta  \n",
              "239                  True  12500.0  2018-01-01  \n",
              "834                 False  10500.0  2018-04-01  \n",
              "855                 False   5800.0  2018-04-01  \n",
              "864                 False   7700.0  2018-04-01  \n",
              "884                 False  15800.0  2018-04-01  \n",
              "904                 False  13000.0  2018-04-01  \n",
              "939                 False  19800.0  2018-04-01  \n",
              "1569                False   3800.0  2018-07-01  \n",
              "1591                 True  10700.0  2018-07-01  \n",
              "1612                 True  28900.0  2018-08-01  \n",
              "1618                False  11200.0  2018-08-01  \n",
              "1638                False  14500.0  2018-08-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bb9b0b5b-fdcf-4fbb-9300-67d144130d63\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>239</th>\n",
              "      <td>318</td>\n",
              "      <td>132731.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2013-09-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>12500.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>834</th>\n",
              "      <td>318</td>\n",
              "      <td>148429.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2013-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10500.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>855</th>\n",
              "      <td>318</td>\n",
              "      <td>139736.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2009-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>5800.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>864</th>\n",
              "      <td>318</td>\n",
              "      <td>157661.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2013-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>7700.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>884</th>\n",
              "      <td>320</td>\n",
              "      <td>145981.0</td>\n",
              "      <td>122.0</td>\n",
              "      <td>2013-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>15800.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>904</th>\n",
              "      <td>320</td>\n",
              "      <td>126425.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2013-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>13000.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>939</th>\n",
              "      <td>520</td>\n",
              "      <td>153102.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>2015-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>19800.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1569</th>\n",
              "      <td>318</td>\n",
              "      <td>191804.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2013-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>3800.0</td>\n",
              "      <td>2018-07-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1591</th>\n",
              "      <td>320</td>\n",
              "      <td>130624.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2013-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>10700.0</td>\n",
              "      <td>2018-07-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1612</th>\n",
              "      <td>330</td>\n",
              "      <td>23811.0</td>\n",
              "      <td>190.0</td>\n",
              "      <td>2015-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>28900.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1618</th>\n",
              "      <td>318</td>\n",
              "      <td>205603.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>2013-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11200.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1638</th>\n",
              "      <td>320</td>\n",
              "      <td>187454.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb9b0b5b-fdcf-4fbb-9300-67d144130d63')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb9b0b5b-fdcf-4fbb-9300-67d144130d63 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb9b0b5b-fdcf-4fbb-9300-67d144130d63');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El precio de ciertos colores determina en ocasiones el precio del coche.\n",
        "Primero voy a sustituir los nulos por 'unknown'. Más adelante, dividiré los colores por columnas.  "
      ],
      "metadata": {
        "id": "-e7lUhIJjciP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['color'].fillna('unknown', inplace=True)"
      ],
      "metadata": {
        "id": "ZU4uvF2ejcI9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Compruebo que ya no hay nulos en color y veo con qué columna me toca seguir."
      ],
      "metadata": {
        "id": "RRqaR10TUAhS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D2lI5Bif0f5W",
        "outputId": "09f109f7-363d-4390-f21a-b30f8f3594ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                         0\n",
              "km                             0\n",
              "potencia                       0\n",
              "fecha_registro                 0\n",
              "gas_diesel                     0\n",
              "color                          0\n",
              "tipo_coche                     9\n",
              "volante_regulable              4\n",
              "aire_acondicionado             2\n",
              "camara_trasera                 2\n",
              "asientos_traseros_plegables    4\n",
              "elevalunas_electrico           2\n",
              "bluetooth                      4\n",
              "gps                            0\n",
              "alerta_lim_velocidad           2\n",
              "precio                         0\n",
              "fecha_venta                    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora voy a tratar los 9 nulos de 'tipo_coche'"
      ],
      "metadata": {
        "id": "h0o8Y7pqrSPF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['tipo_coche'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2K48FBVf6-to",
        "outputId": "f3a1c237-d8e4-4440-afaa-57d42ae5baf3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "estate         1597\n",
              "sedan          1167\n",
              "suv            1057\n",
              "hatchback       699\n",
              "subcompact      113\n",
              "coupe           103\n",
              "convertible      47\n",
              "van              43\n",
              "Name: tipo_coche, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sustutuiré los nulos por 'unknown' y más adelante dividiré los tipos de coche.  "
      ],
      "metadata": {
        "id": "N8OVQYSwraDl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['tipo_coche'].fillna('unknown', inplace=True)"
      ],
      "metadata": {
        "id": "OYwr7ZQB8Zpk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continuo con los 4 nulos de 'volante_regulable'"
      ],
      "metadata": {
        "id": "qX2ra9nUrs5G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['volante_regulable'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RjJDBriq8UGO",
        "outputId": "382b2949-a81b-4ec6-e8e1-7b1f00b7517d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True     2656\n",
              "False    2175\n",
              "Name: volante_regulable, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Como se trata de un bool y son pocos nulos, los sustituyo por la moda, el resultado más frecuente."
      ],
      "metadata": {
        "id": "E-QmsUx1r2pA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "moda = bmw6['volante_regulable'].mode()[0]\n",
        "bmw6['volante_regulable'].fillna(value=moda, inplace=True)"
      ],
      "metadata": {
        "id": "YjyIQ82gC77E"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lo mismo con los 2 nulos de 'aire_acondicionado', serán sustituidos por la moda."
      ],
      "metadata": {
        "id": "D4VLuQWpsAmQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['aire_acondicionado'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5s_GXpQl81FW",
        "outputId": "da66714d-b0d1-4a77-afcf-655cdc539584"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True     3832\n",
              "False    1001\n",
              "Name: aire_acondicionado, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda = bmw6['aire_acondicionado'].mode()[0]\n",
        "bmw6['aire_acondicionado'].fillna(value=moda, inplace=True)"
      ],
      "metadata": {
        "id": "VlBtjeDn9E51"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continúo con los 2 nulos de 'camara_trasera' y hago lo mismo."
      ],
      "metadata": {
        "id": "yWCxrBNjsOaX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['camara_trasera'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cKL66UmQ9Hgi",
        "outputId": "28db5e42-6bc4-4664-f57c-e0ea8b79f1db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    3860\n",
              "True      973\n",
              "Name: camara_trasera, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda2 = bmw6['camara_trasera'].mode()[0]\n",
        "bmw6['camara_trasera'].fillna(value=moda2, inplace=True)"
      ],
      "metadata": {
        "id": "AW2BhckD9Mtl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora los 4 nulos de 'asientos_traseros_plegables', los sustituyo también por la moda."
      ],
      "metadata": {
        "id": "Y_GHsVR3sblE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['asientos_traseros_plegables'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j6Gqf3sv911k",
        "outputId": "c893d1aa-fbb6-4827-9359-a2cea6e4c5d8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    3869\n",
              "True      962\n",
              "Name: asientos_traseros_plegables, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda3 = bmw6['asientos_traseros_plegables'].mode()[0]\n",
        "bmw6['asientos_traseros_plegables'].fillna(value=moda3, inplace=True)"
      ],
      "metadata": {
        "id": "1Og4o7Na4oc8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "'elevalunas_electrico tiene 2 nulos, continúo tratándolos con la moda."
      ],
      "metadata": {
        "id": "HJPFUDy-skLv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['elevalunas_electrico'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lsBk6qAO9RTE",
        "outputId": "924b7acf-301b-458d-c653-4908d11a1b5f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    2607\n",
              "True     2226\n",
              "Name: elevalunas_electrico, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda4 = bmw6['elevalunas_electrico'].mode()[0]\n",
        "bmw6['elevalunas_electrico'].fillna(value=moda4, inplace=True)"
      ],
      "metadata": {
        "id": "TC7vR2_q4xQ-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "'Bluetooth' tiene 4 nulos, sigo con moda.  "
      ],
      "metadata": {
        "id": "Fx8W_0AistQE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['bluetooth'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SIzZL1wQ-COQ",
        "outputId": "f811bca1-fd05-4f0a-8ec8-bda455d3fc41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    3664\n",
              "True     1167\n",
              "Name: bluetooth, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda5 = bmw6['bluetooth'].mode()[0]\n",
        "bmw6['bluetooth'].fillna(value=moda5, inplace=True)"
      ],
      "metadata": {
        "id": "HWq5X-GK42z_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "'alerta_lim_velocidad', hago lo mismo para los 2 nulos."
      ],
      "metadata": {
        "id": "b-gUILZ9s07Q"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6['alerta_lim_velocidad'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CdBzLhLi-Hqt",
        "outputId": "4f497ae5-7ba9-49d4-c933-83c359bd1f60"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True     2614\n",
              "False    2219\n",
              "Name: alerta_lim_velocidad, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moda6 = bmw6['alerta_lim_velocidad'].mode()[0]\n",
        "bmw6['alerta_lim_velocidad'].fillna(value=moda6, inplace=True)"
      ],
      "metadata": {
        "id": "BUqnnXQG5beH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Una vez analizadas todas las columnas y tratado sus nulos, compruebo que ya no tenemos nulos y renombro el dataset."
      ],
      "metadata": {
        "id": "vbTTwBMEtAju"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw6.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HLYN13aB5bbf",
        "outputId": "c897b30b-bb4e-4cf9-cd8a-1bc9a2ae4398"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "modelo                         0\n",
              "km                             0\n",
              "potencia                       0\n",
              "fecha_registro                 0\n",
              "gas_diesel                     0\n",
              "color                          0\n",
              "tipo_coche                     0\n",
              "volante_regulable              0\n",
              "aire_acondicionado             0\n",
              "camara_trasera                 0\n",
              "asientos_traseros_plegables    0\n",
              "elevalunas_electrico           0\n",
              "bluetooth                      0\n",
              "gps                            0\n",
              "alerta_lim_velocidad           0\n",
              "precio                         0\n",
              "fecha_venta                    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean = bmw6.copy()"
      ],
      "metadata": {
        "id": "qpvN9FJD5bY6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uotrQSA86kcC",
        "outputId": "75af9b72-8afb-4864-9bbe-160be6a389a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 4835 entries, 0 to 4842\n",
            "Data columns (total 17 columns):\n",
            " #   Column                       Non-Null Count  Dtype         \n",
            "---  ------                       --------------  -----         \n",
            " 0   modelo                       4835 non-null   object        \n",
            " 1   km                           4835 non-null   float64       \n",
            " 2   potencia                     4835 non-null   float64       \n",
            " 3   fecha_registro               4835 non-null   datetime64[ns]\n",
            " 4   gas_diesel                   4835 non-null   bool          \n",
            " 5   color                        4835 non-null   object        \n",
            " 6   tipo_coche                   4835 non-null   object        \n",
            " 7   volante_regulable            4835 non-null   bool          \n",
            " 8   aire_acondicionado           4835 non-null   bool          \n",
            " 9   camara_trasera               4835 non-null   bool          \n",
            " 10  asientos_traseros_plegables  4835 non-null   bool          \n",
            " 11  elevalunas_electrico         4835 non-null   bool          \n",
            " 12  bluetooth                    4835 non-null   bool          \n",
            " 13  gps                          4835 non-null   bool          \n",
            " 14  alerta_lim_velocidad         4835 non-null   bool          \n",
            " 15  precio                       4835 non-null   float64       \n",
            " 16  fecha_venta                  4835 non-null   datetime64[ns]\n",
            "dtypes: bool(9), datetime64[ns](2), float64(3), object(3)\n",
            "memory usage: 382.5+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(bmw_clean[bmw_clean.duplicated()])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NXjKdKCl7Dfu",
        "outputId": "8e8c78d4-806d-444f-8028-e1b1915d36e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.tail()"
      ],
      "metadata": {
        "id": "9BY-I3pM7Zhl",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "outputId": "419cb762-826f-4473-b67f-f3c6e92d1c82"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 modelo        km  potencia fecha_registro  gas_diesel  color  \\\n",
              "4838    218 Gran Tourer   39743.0     110.0     2015-10-01        True  black   \n",
              "4839  218 Active Tourer   49832.0     100.0     2015-06-01        True   grey   \n",
              "4840    218 Gran Tourer   19633.0     110.0     2015-10-01        True   grey   \n",
              "4841  218 Active Tourer   27920.0     110.0     2016-04-01        True  brown   \n",
              "4842                525  195840.0     160.0     2013-01-01        True   grey   \n",
              "\n",
              "     tipo_coche  volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "4838        van              False                True           False   \n",
              "4839        van              False                True           False   \n",
              "4840        van              False                True           False   \n",
              "4841        van               True                True           False   \n",
              "4842    unknown               True                True           False   \n",
              "\n",
              "      asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "4838                        False                 False      False  True   \n",
              "4839                        False                 False      False  True   \n",
              "4840                        False                 False      False  True   \n",
              "4841                        False                 False      False  True   \n",
              "4842                        False                  True      False  True   \n",
              "\n",
              "      alerta_lim_velocidad   precio fecha_venta  \n",
              "4838                 False  14600.0  2018-08-01  \n",
              "4839                  True  17500.0  2018-08-01  \n",
              "4840                  True  17000.0  2018-09-01  \n",
              "4841                  True  22700.0  2018-09-01  \n",
              "4842                  True  15500.0  2018-09-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5b545d12-a07e-453f-be87-5f15395a57d3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4838</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4839</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4840</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4841</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4842</th>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>unknown</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b545d12-a07e-453f-be87-5f15395a57d3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5b545d12-a07e-453f-be87-5f15395a57d3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5b545d12-a07e-453f-be87-5f15395a57d3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dado que he eliminado filas, hay que resetear los índices. Poner nuevos indices y quitar los obsoletos. Primero hago la vista previa, y si está correcto lo guardo con 'inplace=True'."
      ],
      "metadata": {
        "id": "eYXGMtHvtxm_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.reset_index()"
      ],
      "metadata": {
        "id": "1DgZXqN47WU4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 626
        },
        "outputId": "3520e7c0-9dbc-4fd9-937a-cd2777cda269"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      index             modelo        km  potencia fecha_registro  gas_diesel  \\\n",
              "0         0                118  140411.0     100.0     2012-02-01        True   \n",
              "1         1                 M4   13929.0     317.0     2016-04-01       False   \n",
              "2         2                320  183297.0     120.0     2012-04-01        True   \n",
              "3         3                420  128035.0     135.0     2014-07-01        True   \n",
              "4         4                425   97097.0     160.0     2014-12-01        True   \n",
              "...     ...                ...       ...       ...            ...         ...   \n",
              "4830   4838    218 Gran Tourer   39743.0     110.0     2015-10-01        True   \n",
              "4831   4839  218 Active Tourer   49832.0     100.0     2015-06-01        True   \n",
              "4832   4840    218 Gran Tourer   19633.0     110.0     2015-10-01        True   \n",
              "4833   4841  218 Active Tourer   27920.0     110.0     2016-04-01        True   \n",
              "4834   4842                525  195840.0     160.0     2013-01-01        True   \n",
              "\n",
              "       color   tipo_coche  volante_regulable  aire_acondicionado  \\\n",
              "0      black  convertible               True                True   \n",
              "1       grey  convertible               True                True   \n",
              "2      white  convertible              False               False   \n",
              "3        red  convertible               True                True   \n",
              "4     silver  convertible               True                True   \n",
              "...      ...          ...                ...                 ...   \n",
              "4830   black          van              False                True   \n",
              "4831    grey          van              False                True   \n",
              "4832    grey          van              False                True   \n",
              "4833   brown          van               True                True   \n",
              "4834    grey      unknown               True                True   \n",
              "\n",
              "      camara_trasera  asientos_traseros_plegables  elevalunas_electrico  \\\n",
              "0              False                        False                  True   \n",
              "1              False                        False                 False   \n",
              "2              False                        False                  True   \n",
              "3              False                        False                  True   \n",
              "4              False                        False                 False   \n",
              "...              ...                          ...                   ...   \n",
              "4830           False                        False                 False   \n",
              "4831           False                        False                 False   \n",
              "4832           False                        False                 False   \n",
              "4833           False                        False                 False   \n",
              "4834           False                        False                  True   \n",
              "\n",
              "      bluetooth   gps  alerta_lim_velocidad   precio fecha_venta  \n",
              "0          True  True                 False  11300.0  2018-01-01  \n",
              "1          True  True                  True  69700.0  2018-02-01  \n",
              "2         False  True                 False  10200.0  2018-02-01  \n",
              "3          True  True                  True  25100.0  2018-02-01  \n",
              "4          True  True                  True  33400.0  2018-04-01  \n",
              "...         ...   ...                   ...      ...         ...  \n",
              "4830      False  True                 False  14600.0  2018-08-01  \n",
              "4831      False  True                  True  17500.0  2018-08-01  \n",
              "4832      False  True                  True  17000.0  2018-09-01  \n",
              "4833      False  True                  True  22700.0  2018-09-01  \n",
              "4834      False  True                  True  15500.0  2018-09-01  \n",
              "\n",
              "[4835 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6b227652-cf12-49e5-baef-1e075c5594b0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4830</th>\n",
              "      <td>4838</td>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4831</th>\n",
              "      <td>4839</td>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4832</th>\n",
              "      <td>4840</td>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4833</th>\n",
              "      <td>4841</td>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4834</th>\n",
              "      <td>4842</td>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>unknown</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4835 rows × 18 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b227652-cf12-49e5-baef-1e075c5594b0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6b227652-cf12-49e5-baef-1e075c5594b0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6b227652-cf12-49e5-baef-1e075c5594b0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.reset_index(drop=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 626
        },
        "id": "aKIKTUocuajj",
        "outputId": "91a94d75-c049-4a73-b524-cfa97c6e6bf7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 modelo        km  potencia fecha_registro  gas_diesel  \\\n",
              "0                   118  140411.0     100.0     2012-02-01        True   \n",
              "1                    M4   13929.0     317.0     2016-04-01       False   \n",
              "2                   320  183297.0     120.0     2012-04-01        True   \n",
              "3                   420  128035.0     135.0     2014-07-01        True   \n",
              "4                   425   97097.0     160.0     2014-12-01        True   \n",
              "...                 ...       ...       ...            ...         ...   \n",
              "4830    218 Gran Tourer   39743.0     110.0     2015-10-01        True   \n",
              "4831  218 Active Tourer   49832.0     100.0     2015-06-01        True   \n",
              "4832    218 Gran Tourer   19633.0     110.0     2015-10-01        True   \n",
              "4833  218 Active Tourer   27920.0     110.0     2016-04-01        True   \n",
              "4834                525  195840.0     160.0     2013-01-01        True   \n",
              "\n",
              "       color   tipo_coche  volante_regulable  aire_acondicionado  \\\n",
              "0      black  convertible               True                True   \n",
              "1       grey  convertible               True                True   \n",
              "2      white  convertible              False               False   \n",
              "3        red  convertible               True                True   \n",
              "4     silver  convertible               True                True   \n",
              "...      ...          ...                ...                 ...   \n",
              "4830   black          van              False                True   \n",
              "4831    grey          van              False                True   \n",
              "4832    grey          van              False                True   \n",
              "4833   brown          van               True                True   \n",
              "4834    grey      unknown               True                True   \n",
              "\n",
              "      camara_trasera  asientos_traseros_plegables  elevalunas_electrico  \\\n",
              "0              False                        False                  True   \n",
              "1              False                        False                 False   \n",
              "2              False                        False                  True   \n",
              "3              False                        False                  True   \n",
              "4              False                        False                 False   \n",
              "...              ...                          ...                   ...   \n",
              "4830           False                        False                 False   \n",
              "4831           False                        False                 False   \n",
              "4832           False                        False                 False   \n",
              "4833           False                        False                 False   \n",
              "4834           False                        False                  True   \n",
              "\n",
              "      bluetooth   gps  alerta_lim_velocidad   precio fecha_venta  \n",
              "0          True  True                 False  11300.0  2018-01-01  \n",
              "1          True  True                  True  69700.0  2018-02-01  \n",
              "2         False  True                 False  10200.0  2018-02-01  \n",
              "3          True  True                  True  25100.0  2018-02-01  \n",
              "4          True  True                  True  33400.0  2018-04-01  \n",
              "...         ...   ...                   ...      ...         ...  \n",
              "4830      False  True                 False  14600.0  2018-08-01  \n",
              "4831      False  True                  True  17500.0  2018-08-01  \n",
              "4832      False  True                  True  17000.0  2018-09-01  \n",
              "4833      False  True                  True  22700.0  2018-09-01  \n",
              "4834      False  True                  True  15500.0  2018-09-01  \n",
              "\n",
              "[4835 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8546ee57-d880-41dd-a878-b6c83e2466d4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4830</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4831</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4832</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4833</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4834</th>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>unknown</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4835 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8546ee57-d880-41dd-a878-b6c83e2466d4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8546ee57-d880-41dd-a878-b6c83e2466d4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8546ee57-d880-41dd-a878-b6c83e2466d4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.reset_index(drop=True, inplace=True)"
      ],
      "metadata": {
        "id": "bHW0a0Iq7zyd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "PZWfyloquBKk",
        "outputId": "ef4fe97f-edae-4521-d2c5-8945311e6393"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 modelo        km  potencia fecha_registro  gas_diesel  color  \\\n",
              "4830    218 Gran Tourer   39743.0     110.0     2015-10-01        True  black   \n",
              "4831  218 Active Tourer   49832.0     100.0     2015-06-01        True   grey   \n",
              "4832    218 Gran Tourer   19633.0     110.0     2015-10-01        True   grey   \n",
              "4833  218 Active Tourer   27920.0     110.0     2016-04-01        True  brown   \n",
              "4834                525  195840.0     160.0     2013-01-01        True   grey   \n",
              "\n",
              "     tipo_coche  volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "4830        van              False                True           False   \n",
              "4831        van              False                True           False   \n",
              "4832        van              False                True           False   \n",
              "4833        van               True                True           False   \n",
              "4834    unknown               True                True           False   \n",
              "\n",
              "      asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "4830                        False                 False      False  True   \n",
              "4831                        False                 False      False  True   \n",
              "4832                        False                 False      False  True   \n",
              "4833                        False                 False      False  True   \n",
              "4834                        False                  True      False  True   \n",
              "\n",
              "      alerta_lim_velocidad   precio fecha_venta  \n",
              "4830                 False  14600.0  2018-08-01  \n",
              "4831                  True  17500.0  2018-08-01  \n",
              "4832                  True  17000.0  2018-09-01  \n",
              "4833                  True  22700.0  2018-09-01  \n",
              "4834                  True  15500.0  2018-09-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eba3418e-0996-48cc-ad07-5057634afc7c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4830</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4831</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4832</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4833</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4834</th>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>unknown</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eba3418e-0996-48cc-ad07-5057634afc7c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-eba3418e-0996-48cc-ad07-5057634afc7c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-eba3418e-0996-48cc-ad07-5057634afc7c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Empiezo el preprocesamiento - comienzo viendo la correlación entre variables."
      ],
      "metadata": {
        "id": "1ZH7saTKX3pr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "corr = bmw_clean.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rNYNBxIOX7r6",
        "outputId": "6412f5a0-959c-457d-b563-c78e55e838bf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-89-c9354d93950b>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  corr = bmw_clean.corr()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "corr.style.background_gradient(cmap='coolwarm')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 445
        },
        "id": "_ASJ-9UKYB2-",
        "outputId": "3c823eee-eb18-4211-b7d3-6f70849f7f99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f1c686abcd0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_8fd98_row0_col0, #T_8fd98_row1_col1, #T_8fd98_row2_col2, #T_8fd98_row3_col3, #T_8fd98_row4_col4, #T_8fd98_row5_col5, #T_8fd98_row6_col6, #T_8fd98_row7_col7, #T_8fd98_row8_col8, #T_8fd98_row9_col9, #T_8fd98_row10_col10, #T_8fd98_row11_col11 {\n",
              "  background-color: #b40426;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col1 {\n",
              "  background-color: #4c66d6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col2, #T_8fd98_row10_col8 {\n",
              "  background-color: #688aef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col3, #T_8fd98_row2_col10, #T_8fd98_row11_col9 {\n",
              "  background-color: #4b64d5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col4, #T_8fd98_row0_col6, #T_8fd98_row0_col8, #T_8fd98_row0_col11, #T_8fd98_row1_col2, #T_8fd98_row2_col1, #T_8fd98_row2_col3, #T_8fd98_row2_col5, #T_8fd98_row2_col7, #T_8fd98_row9_col10, #T_8fd98_row10_col9, #T_8fd98_row11_col0 {\n",
              "  background-color: #3b4cc0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col5, #T_8fd98_row2_col8 {\n",
              "  background-color: #3d50c3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col7 {\n",
              "  background-color: #485fd1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col9, #T_8fd98_row7_col5 {\n",
              "  background-color: #7da0f9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row0_col10 {\n",
              "  background-color: #4055c8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row1_col0, #T_8fd98_row1_col8 {\n",
              "  background-color: #8fb1fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col3, #T_8fd98_row6_col10, #T_8fd98_row7_col0 {\n",
              "  background-color: #a6c4fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col4, #T_8fd98_row4_col6 {\n",
              "  background-color: #799cf8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row1_col5 {\n",
              "  background-color: #a5c3fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col6, #T_8fd98_row7_col11 {\n",
              "  background-color: #d6dce4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col7, #T_8fd98_row3_col0 {\n",
              "  background-color: #abc8fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col9, #T_8fd98_row9_col5 {\n",
              "  background-color: #4f69d9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row1_col10 {\n",
              "  background-color: #e2dad5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row1_col11 {\n",
              "  background-color: #f59c7d;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row2_col0 {\n",
              "  background-color: #a7c5fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row2_col4, #T_8fd98_row8_col2 {\n",
              "  background-color: #5470de;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row2_col6 {\n",
              "  background-color: #6180e9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row2_col9, #T_8fd98_row11_col2 {\n",
              "  background-color: #5e7de7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row2_col11, #T_8fd98_row3_col4, #T_8fd98_row4_col0, #T_8fd98_row4_col3 {\n",
              "  background-color: #9ebeff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col1 {\n",
              "  background-color: #bfd3f6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col2, #T_8fd98_row9_col1 {\n",
              "  background-color: #5d7ce6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row3_col5, #T_8fd98_row10_col0, #T_8fd98_row11_col3, #T_8fd98_row11_col5, #T_8fd98_row11_col7 {\n",
              "  background-color: #90b2fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col6, #T_8fd98_row3_col10, #T_8fd98_row4_col10, #T_8fd98_row7_col3 {\n",
              "  background-color: #94b6ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col7, #T_8fd98_row7_col8 {\n",
              "  background-color: #96b7ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col8, #T_8fd98_row4_col5 {\n",
              "  background-color: #6c8ff1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row3_col9, #T_8fd98_row5_col0 {\n",
              "  background-color: #9bbcff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row3_col11 {\n",
              "  background-color: #d8dce2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row4_col1, #T_8fd98_row4_col7 {\n",
              "  background-color: #98b9ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row4_col2 {\n",
              "  background-color: #779af7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row4_col8 {\n",
              "  background-color: #6e90f2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row4_col9, #T_8fd98_row7_col1 {\n",
              "  background-color: #c3d5f4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row4_col11 {\n",
              "  background-color: #d4dbe6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row5_col1 {\n",
              "  background-color: #bbd1f8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row5_col2 {\n",
              "  background-color: #5875e1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row5_col3, #T_8fd98_row5_col10, #T_8fd98_row6_col7 {\n",
              "  background-color: #8caffe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row5_col4, #T_8fd98_row6_col4 {\n",
              "  background-color: #6788ee;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row5_col6, #T_8fd98_row11_col4 {\n",
              "  background-color: #89acfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row5_col7, #T_8fd98_row8_col6 {\n",
              "  background-color: #7a9df8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row5_col8, #T_8fd98_row6_col2, #T_8fd98_row9_col6 {\n",
              "  background-color: #7093f3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row5_col9 {\n",
              "  background-color: #5f7fe8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row5_col11 {\n",
              "  background-color: #d5dbe5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row6_col0, #T_8fd98_row7_col9, #T_8fd98_row8_col7 {\n",
              "  background-color: #8db0fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row6_col1 {\n",
              "  background-color: #dedcdb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row6_col3 {\n",
              "  background-color: #84a7fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row6_col5, #T_8fd98_row10_col5 {\n",
              "  background-color: #7ea1fa;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row6_col8, #T_8fd98_row6_col9 {\n",
              "  background-color: #7396f5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row6_col11 {\n",
              "  background-color: #efcebd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row7_col2 {\n",
              "  background-color: #5b7ae5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row7_col4 {\n",
              "  background-color: #97b8ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row7_col6, #T_8fd98_row9_col11 {\n",
              "  background-color: #9abbff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row7_col10 {\n",
              "  background-color: #b7cff9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row8_col0 {\n",
              "  background-color: #93b5fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row8_col1 {\n",
              "  background-color: #a2c1ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row8_col3, #T_8fd98_row8_col4 {\n",
              "  background-color: #6282ea;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row8_col5 {\n",
              "  background-color: #6a8bef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row8_col9 {\n",
              "  background-color: #7597f6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row8_col10 {\n",
              "  background-color: #7295f4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row8_col11 {\n",
              "  background-color: #ccd9ed;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row9_col0 {\n",
              "  background-color: #c0d4f5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row9_col2, #T_8fd98_row9_col8 {\n",
              "  background-color: #6b8df0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row9_col3 {\n",
              "  background-color: #88abfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row9_col4 {\n",
              "  background-color: #b5cdfa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row9_col7 {\n",
              "  background-color: #7b9ff9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row10_col1 {\n",
              "  background-color: #e7d7ce;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row10_col2 {\n",
              "  background-color: #5a78e4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row10_col3, #T_8fd98_row10_col4 {\n",
              "  background-color: #81a4fb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row10_col6 {\n",
              "  background-color: #a3c2fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row10_col7 {\n",
              "  background-color: #a9c6fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row10_col11 {\n",
              "  background-color: #f2cab5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row11_col1 {\n",
              "  background-color: #f7b497;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row11_col6 {\n",
              "  background-color: #cdd9ec;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_8fd98_row11_col8 {\n",
              "  background-color: #86a9fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_8fd98_row11_col10 {\n",
              "  background-color: #d7dce3;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_8fd98\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_8fd98_level0_col0\" class=\"col_heading level0 col0\" >km</th>\n",
              "      <th id=\"T_8fd98_level0_col1\" class=\"col_heading level0 col1\" >potencia</th>\n",
              "      <th id=\"T_8fd98_level0_col2\" class=\"col_heading level0 col2\" >gas_diesel</th>\n",
              "      <th id=\"T_8fd98_level0_col3\" class=\"col_heading level0 col3\" >volante_regulable</th>\n",
              "      <th id=\"T_8fd98_level0_col4\" class=\"col_heading level0 col4\" >aire_acondicionado</th>\n",
              "      <th id=\"T_8fd98_level0_col5\" class=\"col_heading level0 col5\" >camara_trasera</th>\n",
              "      <th id=\"T_8fd98_level0_col6\" class=\"col_heading level0 col6\" >asientos_traseros_plegables</th>\n",
              "      <th id=\"T_8fd98_level0_col7\" class=\"col_heading level0 col7\" >elevalunas_electrico</th>\n",
              "      <th id=\"T_8fd98_level0_col8\" class=\"col_heading level0 col8\" >bluetooth</th>\n",
              "      <th id=\"T_8fd98_level0_col9\" class=\"col_heading level0 col9\" >gps</th>\n",
              "      <th id=\"T_8fd98_level0_col10\" class=\"col_heading level0 col10\" >alerta_lim_velocidad</th>\n",
              "      <th id=\"T_8fd98_level0_col11\" class=\"col_heading level0 col11\" >precio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row0\" class=\"row_heading level0 row0\" >km</th>\n",
              "      <td id=\"T_8fd98_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row0_col1\" class=\"data row0 col1\" >-0.050376</td>\n",
              "      <td id=\"T_8fd98_row0_col2\" class=\"data row0 col2\" >0.047539</td>\n",
              "      <td id=\"T_8fd98_row0_col3\" class=\"data row0 col3\" >0.066015</td>\n",
              "      <td id=\"T_8fd98_row0_col4\" class=\"data row0 col4\" >0.009828</td>\n",
              "      <td id=\"T_8fd98_row0_col5\" class=\"data row0 col5\" >0.001793</td>\n",
              "      <td id=\"T_8fd98_row0_col6\" class=\"data row0 col6\" >-0.052860</td>\n",
              "      <td id=\"T_8fd98_row0_col7\" class=\"data row0 col7\" >0.047050</td>\n",
              "      <td id=\"T_8fd98_row0_col8\" class=\"data row0 col8\" >-0.029888</td>\n",
              "      <td id=\"T_8fd98_row0_col9\" class=\"data row0 col9\" >0.154857</td>\n",
              "      <td id=\"T_8fd98_row0_col10\" class=\"data row0 col10\" >-0.041968</td>\n",
              "      <td id=\"T_8fd98_row0_col11\" class=\"data row0 col11\" >-0.409859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row1\" class=\"row_heading level0 row1\" >potencia</th>\n",
              "      <td id=\"T_8fd98_row1_col0\" class=\"data row1 col0\" >-0.050376</td>\n",
              "      <td id=\"T_8fd98_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row1_col2\" class=\"data row1 col2\" >-0.116152</td>\n",
              "      <td id=\"T_8fd98_row1_col3\" class=\"data row1 col3\" >0.328037</td>\n",
              "      <td id=\"T_8fd98_row1_col4\" class=\"data row1 col4\" >0.200628</td>\n",
              "      <td id=\"T_8fd98_row1_col5\" class=\"data row1 col5\" >0.313654</td>\n",
              "      <td id=\"T_8fd98_row1_col6\" class=\"data row1 col6\" >0.447842</td>\n",
              "      <td id=\"T_8fd98_row1_col7\" class=\"data row1 col7\" >0.340362</td>\n",
              "      <td id=\"T_8fd98_row1_col8\" class=\"data row1 col8\" >0.232181</td>\n",
              "      <td id=\"T_8fd98_row1_col9\" class=\"data row1 col9\" >0.008997</td>\n",
              "      <td id=\"T_8fd98_row1_col10\" class=\"data row1 col10\" >0.488801</td>\n",
              "      <td id=\"T_8fd98_row1_col11\" class=\"data row1 col11\" >0.639251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row2\" class=\"row_heading level0 row2\" >gas_diesel</th>\n",
              "      <td id=\"T_8fd98_row2_col0\" class=\"data row2 col0\" >0.047539</td>\n",
              "      <td id=\"T_8fd98_row2_col1\" class=\"data row2 col1\" >-0.116152</td>\n",
              "      <td id=\"T_8fd98_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row2_col3\" class=\"data row2 col3\" >0.010027</td>\n",
              "      <td id=\"T_8fd98_row2_col4\" class=\"data row2 col4\" >0.093662</td>\n",
              "      <td id=\"T_8fd98_row2_col5\" class=\"data row2 col5\" >-0.008519</td>\n",
              "      <td id=\"T_8fd98_row2_col6\" class=\"data row2 col6\" >0.074692</td>\n",
              "      <td id=\"T_8fd98_row2_col7\" class=\"data row2 col7\" >0.002668</td>\n",
              "      <td id=\"T_8fd98_row2_col8\" class=\"data row2 col8\" >-0.021578</td>\n",
              "      <td id=\"T_8fd98_row2_col9\" class=\"data row2 col9\" >0.056454</td>\n",
              "      <td id=\"T_8fd98_row2_col10\" class=\"data row2 col10\" >-0.002054</td>\n",
              "      <td id=\"T_8fd98_row2_col11\" class=\"data row2 col11\" >0.013053</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row3\" class=\"row_heading level0 row3\" >volante_regulable</th>\n",
              "      <td id=\"T_8fd98_row3_col0\" class=\"data row3 col0\" >0.066015</td>\n",
              "      <td id=\"T_8fd98_row3_col1\" class=\"data row3 col1\" >0.328037</td>\n",
              "      <td id=\"T_8fd98_row3_col2\" class=\"data row3 col2\" >0.010027</td>\n",
              "      <td id=\"T_8fd98_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row3_col4\" class=\"data row3 col4\" >0.306497</td>\n",
              "      <td id=\"T_8fd98_row3_col5\" class=\"data row3 col5\" >0.253744</td>\n",
              "      <td id=\"T_8fd98_row3_col6\" class=\"data row3 col6\" >0.230930</td>\n",
              "      <td id=\"T_8fd98_row3_col7\" class=\"data row3 col7\" >0.278056</td>\n",
              "      <td id=\"T_8fd98_row3_col8\" class=\"data row3 col8\" >0.134047</td>\n",
              "      <td id=\"T_8fd98_row3_col9\" class=\"data row3 col9\" >0.244342</td>\n",
              "      <td id=\"T_8fd98_row3_col10\" class=\"data row3 col10\" >0.224258</td>\n",
              "      <td id=\"T_8fd98_row3_col11\" class=\"data row3 col11\" >0.268537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row4\" class=\"row_heading level0 row4\" >aire_acondicionado</th>\n",
              "      <td id=\"T_8fd98_row4_col0\" class=\"data row4 col0\" >0.009828</td>\n",
              "      <td id=\"T_8fd98_row4_col1\" class=\"data row4 col1\" >0.200628</td>\n",
              "      <td id=\"T_8fd98_row4_col2\" class=\"data row4 col2\" >0.093662</td>\n",
              "      <td id=\"T_8fd98_row4_col3\" class=\"data row4 col3\" >0.306497</td>\n",
              "      <td id=\"T_8fd98_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row4_col5\" class=\"data row4 col5\" >0.150799</td>\n",
              "      <td id=\"T_8fd98_row4_col6\" class=\"data row4 col6\" >0.149810</td>\n",
              "      <td id=\"T_8fd98_row4_col7\" class=\"data row4 col7\" >0.284557</td>\n",
              "      <td id=\"T_8fd98_row4_col8\" class=\"data row4 col8\" >0.135521</td>\n",
              "      <td id=\"T_8fd98_row4_col9\" class=\"data row4 col9\" >0.370716</td>\n",
              "      <td id=\"T_8fd98_row4_col10\" class=\"data row4 col10\" >0.223923</td>\n",
              "      <td id=\"T_8fd98_row4_col11\" class=\"data row4 col11\" >0.246636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row5\" class=\"row_heading level0 row5\" >camara_trasera</th>\n",
              "      <td id=\"T_8fd98_row5_col0\" class=\"data row5 col0\" >0.001793</td>\n",
              "      <td id=\"T_8fd98_row5_col1\" class=\"data row5 col1\" >0.313654</td>\n",
              "      <td id=\"T_8fd98_row5_col2\" class=\"data row5 col2\" >-0.008519</td>\n",
              "      <td id=\"T_8fd98_row5_col3\" class=\"data row5 col3\" >0.253744</td>\n",
              "      <td id=\"T_8fd98_row5_col4\" class=\"data row5 col4\" >0.150799</td>\n",
              "      <td id=\"T_8fd98_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row5_col6\" class=\"data row5 col6\" >0.200813</td>\n",
              "      <td id=\"T_8fd98_row5_col7\" class=\"data row5 col7\" >0.198756</td>\n",
              "      <td id=\"T_8fd98_row5_col8\" class=\"data row5 col8\" >0.144849</td>\n",
              "      <td id=\"T_8fd98_row5_col9\" class=\"data row5 col9\" >0.061882</td>\n",
              "      <td id=\"T_8fd98_row5_col10\" class=\"data row5 col10\" >0.201408</td>\n",
              "      <td id=\"T_8fd98_row5_col11\" class=\"data row5 col11\" >0.252284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row6\" class=\"row_heading level0 row6\" >asientos_traseros_plegables</th>\n",
              "      <td id=\"T_8fd98_row6_col0\" class=\"data row6 col0\" >-0.052860</td>\n",
              "      <td id=\"T_8fd98_row6_col1\" class=\"data row6 col1\" >0.447842</td>\n",
              "      <td id=\"T_8fd98_row6_col2\" class=\"data row6 col2\" >0.074692</td>\n",
              "      <td id=\"T_8fd98_row6_col3\" class=\"data row6 col3\" >0.230930</td>\n",
              "      <td id=\"T_8fd98_row6_col4\" class=\"data row6 col4\" >0.149810</td>\n",
              "      <td id=\"T_8fd98_row6_col5\" class=\"data row6 col5\" >0.200813</td>\n",
              "      <td id=\"T_8fd98_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row6_col7\" class=\"data row6 col7\" >0.250603</td>\n",
              "      <td id=\"T_8fd98_row6_col8\" class=\"data row6 col8\" >0.153525</td>\n",
              "      <td id=\"T_8fd98_row6_col9\" class=\"data row6 col9\" >0.126439</td>\n",
              "      <td id=\"T_8fd98_row6_col10\" class=\"data row6 col10\" >0.277073</td>\n",
              "      <td id=\"T_8fd98_row6_col11\" class=\"data row6 col11\" >0.414314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row7\" class=\"row_heading level0 row7\" >elevalunas_electrico</th>\n",
              "      <td id=\"T_8fd98_row7_col0\" class=\"data row7 col0\" >0.047050</td>\n",
              "      <td id=\"T_8fd98_row7_col1\" class=\"data row7 col1\" >0.340362</td>\n",
              "      <td id=\"T_8fd98_row7_col2\" class=\"data row7 col2\" >0.002668</td>\n",
              "      <td id=\"T_8fd98_row7_col3\" class=\"data row7 col3\" >0.278056</td>\n",
              "      <td id=\"T_8fd98_row7_col4\" class=\"data row7 col4\" >0.284557</td>\n",
              "      <td id=\"T_8fd98_row7_col5\" class=\"data row7 col5\" >0.198756</td>\n",
              "      <td id=\"T_8fd98_row7_col6\" class=\"data row7 col6\" >0.250603</td>\n",
              "      <td id=\"T_8fd98_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row7_col8\" class=\"data row7 col8\" >0.255736</td>\n",
              "      <td id=\"T_8fd98_row7_col9\" class=\"data row7 col9\" >0.203452</td>\n",
              "      <td id=\"T_8fd98_row7_col10\" class=\"data row7 col10\" >0.331100</td>\n",
              "      <td id=\"T_8fd98_row7_col11\" class=\"data row7 col11\" >0.260422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row8\" class=\"row_heading level0 row8\" >bluetooth</th>\n",
              "      <td id=\"T_8fd98_row8_col0\" class=\"data row8 col0\" >-0.029888</td>\n",
              "      <td id=\"T_8fd98_row8_col1\" class=\"data row8 col1\" >0.232181</td>\n",
              "      <td id=\"T_8fd98_row8_col2\" class=\"data row8 col2\" >-0.021578</td>\n",
              "      <td id=\"T_8fd98_row8_col3\" class=\"data row8 col3\" >0.134047</td>\n",
              "      <td id=\"T_8fd98_row8_col4\" class=\"data row8 col4\" >0.135521</td>\n",
              "      <td id=\"T_8fd98_row8_col5\" class=\"data row8 col5\" >0.144849</td>\n",
              "      <td id=\"T_8fd98_row8_col6\" class=\"data row8 col6\" >0.153525</td>\n",
              "      <td id=\"T_8fd98_row8_col7\" class=\"data row8 col7\" >0.255736</td>\n",
              "      <td id=\"T_8fd98_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row8_col9\" class=\"data row8 col9\" >0.129381</td>\n",
              "      <td id=\"T_8fd98_row8_col10\" class=\"data row8 col10\" >0.119875</td>\n",
              "      <td id=\"T_8fd98_row8_col11\" class=\"data row8 col11\" >0.210517</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row9\" class=\"row_heading level0 row9\" >gps</th>\n",
              "      <td id=\"T_8fd98_row9_col0\" class=\"data row9 col0\" >0.154857</td>\n",
              "      <td id=\"T_8fd98_row9_col1\" class=\"data row9 col1\" >0.008997</td>\n",
              "      <td id=\"T_8fd98_row9_col2\" class=\"data row9 col2\" >0.056454</td>\n",
              "      <td id=\"T_8fd98_row9_col3\" class=\"data row9 col3\" >0.244342</td>\n",
              "      <td id=\"T_8fd98_row9_col4\" class=\"data row9 col4\" >0.370716</td>\n",
              "      <td id=\"T_8fd98_row9_col5\" class=\"data row9 col5\" >0.061882</td>\n",
              "      <td id=\"T_8fd98_row9_col6\" class=\"data row9 col6\" >0.126439</td>\n",
              "      <td id=\"T_8fd98_row9_col7\" class=\"data row9 col7\" >0.203452</td>\n",
              "      <td id=\"T_8fd98_row9_col8\" class=\"data row9 col8\" >0.129381</td>\n",
              "      <td id=\"T_8fd98_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row9_col10\" class=\"data row9 col10\" >-0.064268</td>\n",
              "      <td id=\"T_8fd98_row9_col11\" class=\"data row9 col11\" >-0.005127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row10\" class=\"row_heading level0 row10\" >alerta_lim_velocidad</th>\n",
              "      <td id=\"T_8fd98_row10_col0\" class=\"data row10 col0\" >-0.041968</td>\n",
              "      <td id=\"T_8fd98_row10_col1\" class=\"data row10 col1\" >0.488801</td>\n",
              "      <td id=\"T_8fd98_row10_col2\" class=\"data row10 col2\" >-0.002054</td>\n",
              "      <td id=\"T_8fd98_row10_col3\" class=\"data row10 col3\" >0.224258</td>\n",
              "      <td id=\"T_8fd98_row10_col4\" class=\"data row10 col4\" >0.223923</td>\n",
              "      <td id=\"T_8fd98_row10_col5\" class=\"data row10 col5\" >0.201408</td>\n",
              "      <td id=\"T_8fd98_row10_col6\" class=\"data row10 col6\" >0.277073</td>\n",
              "      <td id=\"T_8fd98_row10_col7\" class=\"data row10 col7\" >0.331100</td>\n",
              "      <td id=\"T_8fd98_row10_col8\" class=\"data row10 col8\" >0.119875</td>\n",
              "      <td id=\"T_8fd98_row10_col9\" class=\"data row10 col9\" >-0.064268</td>\n",
              "      <td id=\"T_8fd98_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
              "      <td id=\"T_8fd98_row10_col11\" class=\"data row10 col11\" >0.443346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_8fd98_level0_row11\" class=\"row_heading level0 row11\" >precio</th>\n",
              "      <td id=\"T_8fd98_row11_col0\" class=\"data row11 col0\" >-0.409859</td>\n",
              "      <td id=\"T_8fd98_row11_col1\" class=\"data row11 col1\" >0.639251</td>\n",
              "      <td id=\"T_8fd98_row11_col2\" class=\"data row11 col2\" >0.013053</td>\n",
              "      <td id=\"T_8fd98_row11_col3\" class=\"data row11 col3\" >0.268537</td>\n",
              "      <td id=\"T_8fd98_row11_col4\" class=\"data row11 col4\" >0.246636</td>\n",
              "      <td id=\"T_8fd98_row11_col5\" class=\"data row11 col5\" >0.252284</td>\n",
              "      <td id=\"T_8fd98_row11_col6\" class=\"data row11 col6\" >0.414314</td>\n",
              "      <td id=\"T_8fd98_row11_col7\" class=\"data row11 col7\" >0.260422</td>\n",
              "      <td id=\"T_8fd98_row11_col8\" class=\"data row11 col8\" >0.210517</td>\n",
              "      <td id=\"T_8fd98_row11_col9\" class=\"data row11 col9\" >-0.005127</td>\n",
              "      <td id=\"T_8fd98_row11_col10\" class=\"data row11 col10\" >0.443346</td>\n",
              "      <td id=\"T_8fd98_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora es el momento de ver si hay alguna en la que se vea fuerte correlación y haya que eliminar directamente. En principio, no hay ninguna correlacion tan fuerte como para eliminar alguna."
      ],
      "metadata": {
        "id": "gXhnu3jFYHT_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Empiezo con un análisis inicial del target = precio."
      ],
      "metadata": {
        "id": "_U_7wydLYMDE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.hist(column='precio')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "EfQgPR4bYOs2",
        "outputId": "2d64c2e3-06cc-426a-b198-1e6cdbeee6c6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<Axes: title={'center': 'precio'}>]], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 91
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjAAAAGzCAYAAAAxPS2EAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA6KklEQVR4nO3de3QU9f3/8VcSkg0RNsgltxJiBAWC3K1hv1VECQmYIlbOUYQKVsSCwa8YizT9IgRoG4pVtIqoRxF7hCrUWwsILCAgGkQikZtyhGKxlSQqJss1LMnn90dP5uc24RLcJHzY5+OcnJOZee9nPu+ZGF7O7GTDjDFGAAAAFglv6gkAAADUFwEGAABYhwADAACsQ4ABAADWIcAAAADrEGAAAIB1CDAAAMA6BBgAAGAdAgwAALAOAQZASAgLC1N+fn5TTwNAkBBgAACAdZo19QQAoDEcP35czZrxKw+4WITxYY4ALiTV1dU6efKkoqOjm3oqAC5g3EIC0CDy8/MVFhamzz77TLfddpvcbrfatGmjBx54QCdOnHDqwsLCNHHiRC1atEjdunWTy+XSypUrJUn//ve/dffddys+Pl4ul0vdunXTggULau3rxIkTys/P15VXXqno6GglJibq1ltv1b59+wL289/vgdm2bZuGDBkit9utFi1aaODAgdq8eXPDHBAAQcX1VAAN6rbbbtNll12mgoICbd68WX/605/03Xff6c9//rNTs27dOi1ZskQTJ05U27Ztddlll6m0tFT9+vVzAk67du30zjvvaOzYsfL5fJo0aZIkqaqqSj/96U+1du1ajRgxQg888IAOHz4sr9ernTt3qmPHjnXOa9euXbruuuvkdrv18MMPKzIyUs8995wGDBigDRs2KD09vTEOD4DzZQCgAUyfPt1IMjfffHPA+vvuu89IMp988okxxhhJJjw83OzatSugbuzYsSYxMdF88803AetHjBhhYmNjzbFjx4wxxixYsMBIMo8//nitOVRXVzvfSzLTp093lm+55RYTFRVl9u3b56z76quvTMuWLU3//v3Pr2kAjYZbSAAaVE5OTsDy/fffL0lasWKFs+76669XWlqas2yM0euvv66hQ4fKGKNvvvnG+crKylJFRYU+/vhjSdLrr7+utm3bOuN+X1hYWJ1zqqqq0urVq3XLLbfo8ssvd9YnJiZq5MiR2rRpk3w+3/k3DaDBcQsJQIO64oorApY7duyo8PBwffHFF8661NTUgJqvv/5a5eXlev755/X888/XOW5ZWZkkad++fercuXO9njD6+uuvdezYMXXu3LnWtq5du6q6ulpffvmlunXrds5jAmhcBBgAjaquqyLNmzcPWK6urpYk/fznP9eYMWPqHKdHjx7BnxwAaxBgADSozz//POAKy969e1VdXa3LLrvstK9p166dWrZsqaqqKmVkZJxx/I4dO+rDDz+U3+9XZGTkOc2pXbt2iomJ0Z49e2pt++yzzxQeHq7k5ORzGgtA0+A9MAAa1Lx58wKWn3rqKUnSkCFDTvuaiIgIDR8+XK+//rp27txZa/vXX3/tfD98+HB98803evrpp2vVmdP8mauIiAhlZmbq7bffDriVVVpaqsWLF+vaa6+V2+0+Y18AmhZXYAA0qP379+vmm2/W4MGDVVhYqFdeeUUjR45Uz549z/i62bNn691331V6errGjRuntLQ0HTp0SB9//LHWrFmjQ4cOSZJGjx6tP//5z8rNzdWWLVt03XXX6ejRo1qzZo3uu+8+DRs2rM7xf/vb38rr9eraa6/Vfffdp2bNmum5555TZWWl5syZE/TjACC4CDAAGtRrr72madOm6de//rWaNWumiRMn6tFHHz3r6+Lj47VlyxbNnDlTb7zxhp555hm1adNG3bp10x/+8AenLiIiQitWrNDvfvc7LV68WK+//rratGmja6+9Vt27dz/t+N26ddN7772nvLw8FRQUqLq6Wunp6XrllVf4GzCABfgoAQANIj8/XzNmzNDXX3+ttm3bNvV0AFxkeA8MAACwDgEGAABYhwADAACsw3tgAACAdbgCAwAArEOAAQAA1rlo/w5MdXW1vvrqK7Vs2fK0n0gLAAAuLMYYHT58WElJSQoPP/11los2wHz11Vd8lgkAAJb68ssv1b59+9Nuv2gDTMuWLSX95wAE8zNN/H6/Vq9erczMzHP+4LiLRSj3LoV2//RO7/QeOpq6d5/Pp+TkZOff8dO5aANMzW0jt9sd9AATExMjt9sdkj/Uodq7FNr90zu903vouFB6P9vbP3gTLwAAsA4BBgAAWIcAAwAArEOAAQAA1iHAAAAA6xBgAACAdQgwAADAOgQYAABgHQIMAACwDgEGAABYhwADAACsU68AM3/+fPXo0cP5fCGPx6N3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vu/evbsSExM1cOBA7du3Tx07dmzsaQbVkCFDnO979Oih9PR0paSkaMmSJWrevHkTzqxxvfjiixoyZIiSkpKcdRfzeUdtfr9ft912m4wxmj9/fsC23Nxc5/sePXooKipKv/zlL1VQUHDBfxbO2YwYMcL5vnv37urRo4c6duyo9evXa+DAgU04s8a1YMECjRo1StHR0QHrbT/33EI6R23btlVEREStp1RKS0uVkJDQRLM6NxMnTtSyZcv07rvvqn379mesTU9PlyTt3btXkpSQkFBnzzXbzlTjdrvVvHnzC+bYtWrVSldeeaX27t2rhIQEnTx5UuXl5aed08XQ+z//+U+tWbNG99xzzxnrLtbzXrOfM80hISFBZWVlAdtPnTqlQ4cOBeVn4fvbzzaXhlATXv75z3/K6/UGXH2pS3p6uk6dOqUvvvhCkt29/7fLL79cbdu2Dfg5v5jPvSS999572rNnz1l/B0j2nXsCzDmKiopS3759tXbtWmdddXW11q5dK4/H04QzOz1jjCZOnKg333xT69atq3UpsC7FxcWSpMTEREmSx+PRjh07Av4jr/klmJaW5tR8/7jU1NQclwvl2B05ckT79u1TYmKi+vbtq8jIyIA57dmzRwcOHHDmdDH0/tJLLykuLk7Z2dlnrLtYz3tqaqoSEhIC5uDz+fThhx8GnOfy8nIVFRU5NevWrVN1dbUT7DwejzZu3Ci/3+/UeL1ede7cWZdeeqlTc6bjcS5zCbaa8PL5559rzZo1atOmzVlfU1xcrPDwcOfWiq291+Vf//qXvv3224Cf84v13Nd48cUX1bdvX/Xs2fOstdad+x/0FuAQ8+qrrxqXy2UWLlxodu/ebe69917TqlWrgCc1LiQTJkwwsbGxZv369QGPyR07dswYY8zevXvNzJkzzdatW83+/fvN22+/bS6//HLTv39/Z4yax2kzMzNNcXGxWblypWnXrl2dj9NOnjzZfPrpp2bevHl1Pk7b2MfuoYceMuvXrzf79+8377//vsnIyDBt27Y1ZWVlxpj/PEbdoUMHs27dOrN161bj8XiMx+O5KHo35j9P/HTo0MFMmTIlYP3Fdt4PHz5stm3bZrZt22Ykmccff9xs27bNedJm9uzZplWrVubtt98227dvN8OGDavzMerevXubDz/80GzatMlcccUVAY/SlpeXm/j4eHPnnXeanTt3mldffdXExMTUepy0WbNm5o9//KP59NNPzfTp0+t8nPRscwlW7ydPnjQ333yzad++vSkuLg74HVDzVMkHH3xg5s6da4qLi82+ffvMK6+8Ytq1a2dGjx59wfd+tv4PHz5sfvWrX5nCwkKzf/9+s2bNGtOnTx9zxRVXmBMnTjhjXIznvkZFRYWJiYkx8+fPr/V628+9MTxGXW9PPfWU6dChg4mKijLXXHON2bx5c1NP6bQk1fn10ksvGWOMOXDggOnfv79p3bq1cblcplOnTmby5MkBfw/EGGO++OILM2TIENO8eXPTtm1b89BDDxm/3x9Q8+6775pevXqZqKgoc/nllzv7+L7GPna33367SUxMNFFRUeZHP/qRuf32283evXud7cePHzf33XefufTSS01MTIz52c9+Zg4ePBgwhq29G2PMqlWrjCSzZ8+egPUX23l/99136/w5HzNmjDHmP49xPvLIIyY+Pt64XC4zcODAWsfk22+/NXfccYdp0aKFcbvd5he/+IU5fPhwQM0nn3xirr32WuNyucyPfvQjM3v27FpzWbJkibnyyitNVFSU6datm1m+fHnA9nOZS7B6379//2l/B9T8PaCioiKTnp5uYmNjTXR0tOnatav5/e9/H/AP/IXa+9n6P3bsmMnMzDTt2rUzkZGRJiUlxYwbN65WeL4Yz32N5557zjRv3tyUl5fXer3t594YY8KMMeaHXcMBAABoXLwHBgAAWIcAAwAArEOAAQAA1iHAAAAA6xBgAACAdQgwAADAOgQYAABgHQIMAACwDgEGAABYhwADAACsQ4ABAADW+X9DjvvZmWeA8AAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Detallo los outliers del target, ya que se observa que hay algunas pequeñas cantidades muy desmarcadas del histograma y tengo una distribución asimétrica."
      ],
      "metadata": {
        "id": "kY1v6XDDYegi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "out_precio = sns.boxplot(x=bmw_clean['precio'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "CfNvN1FHYe6I",
        "outputId": "8378e06d-e95f-485a-e632-1d58f6688e09"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El precio esta afectado por la distribucion de sweked, hago logaritmo para transformar la distribución de los datos y acercarnos a representar una distribución normal."
      ],
      "metadata": {
        "id": "L27RSKq_Ypnf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean['log_precio']=np.log10(bmw_clean['precio'])"
      ],
      "metadata": {
        "id": "SbqdL3PqYwwP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.hist(column='log_precio')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "qHbtiNOfY_hF",
        "outputId": "cd5958ec-8dc2-4bdb-91b2-74420075508e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<Axes: title={'center': 'log_precio'}>]], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 94
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Miro de nuevo el impacto de los outliers tras hacer el logaritmo, para ver si se han atenuado respecto a los datos originales."
      ],
      "metadata": {
        "id": "FYOh58ATZFg6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "out_precio2 = sns.boxplot(x=bmw_clean['log_precio'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 450
        },
        "id": "SGJfrlAwZHqE",
        "outputId": "52647aab-e692-456b-9d76-7e6f0c823412"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se puede ver que los outliers se han 'suavizado'."
      ],
      "metadata": {
        "id": "W8UXdscStb2m"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Voy a ver mediante un par de gráficos la relacion entre el target 'precio' y otras variables."
      ],
      "metadata": {
        "id": "R-o1IHoOZ0MA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "C18RLPjOZ-Xo",
        "outputId": "2bee762e-2218-46be-e53f-cade625c0ea4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia fecha_registro  gas_diesel   color   tipo_coche  \\\n",
              "0    118  140411.0     100.0     2012-02-01        True   black  convertible   \n",
              "1     M4   13929.0     317.0     2016-04-01       False    grey  convertible   \n",
              "2    320  183297.0     120.0     2012-04-01        True   white  convertible   \n",
              "3    420  128035.0     135.0     2014-07-01        True     red  convertible   \n",
              "4    425   97097.0     160.0     2014-12-01        True  silver  convertible   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio fecha_venta  log_precio  \n",
              "0                 False  11300.0  2018-01-01    4.053078  \n",
              "1                  True  69700.0  2018-02-01    4.843233  \n",
              "2                 False  10200.0  2018-02-01    4.008600  \n",
              "3                  True  25100.0  2018-02-01    4.399674  \n",
              "4                  True  33400.0  2018-04-01    4.523746  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ce3f1d7c-bff5-4660-acfe-2af4ba46aa94\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "      <th>log_precio</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "      <td>4.053078</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.843233</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.008600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.399674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "      <td>4.523746</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce3f1d7c-bff5-4660-acfe-2af4ba46aa94')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ce3f1d7c-bff5-4660-acfe-2af4ba46aa94 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ce3f1d7c-bff5-4660-acfe-2af4ba46aa94');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Relación entre gas_diesel y precio. Empiezo con grafico de violin ya que es bastante adecuado para las variables categóricas."
      ],
      "metadata": {
        "id": "vwrDE3LtclJu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.violinplot(x='gas_diesel',y='precio', data=bmw_clean, palette='Blues')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "FfEuB-hNcEEx",
        "outputId": "155d5f58-5ff8-424d-be6b-9556d354cad9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='gas_diesel', ylabel='precio'>"
            ]
          },
          "metadata": {},
          "execution_count": 97
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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0bBhQ+zevRs9evQwY2UVExUVhffee8/cZRAREVE1sPjhv9IaNGgAb29vnD9/HgDg7++P69evm7QpLi5GRkYG/P395TbXrl0zaVPy+EFtSu8vfVx5bcozffp0ZGVlybfLly8/1PslIiIi62FVoeqvv/7CzZs3ERAQAAAIDw9HZmYm4uLi5DY7d+6EwWBAWFiY3Gbv3r0oKiqS20RHR6Np06bw8PCQ2+zYscPktaKjoxEeHg4ACAkJgb+/v0kbnU6HgwcPym3Ko1arodFoTG5ERERUM5k1VGVnZyM+Ph7x8fEAjBPC4+PjkZqaiuzsbLz99ts4cOAALl68iB07duD5559Ho0aNEBkZCQBo3rw5evXqhddffx2HDh3C/v37MWHCBLz00ksIDAwEAAwdOhT29vYYPXo0EhISsGbNGixatAhTpkyR63jrrbewdetWfPjhhzhz5gxmz56NI0eOYMKECQAASZIwadIk/Oc//8Fvv/2GkydPYsSIEQgMDET//v2r9WdGREREFqqazkYs165duwSAMreRI0eK3Nxc0bNnT+Hj4yPs7OxEcHCweP3114VWqzV5jps3b4ohQ4YIFxcXodFoxKhRo8Tt27dN2hw/flx06tRJqNVqUadOHTFv3rwytaxdu1Y0adJE2Nvbi9DQULFp0yaT/QaDQcycOVP4+fkJtVotevToIZKSkh7q/XJJBSKimqFkSYURI0aYuxSqBhX9/paEEMKMma5W0el0cHNzQ1ZWFocCiYisWN++fQEA3t7eWLlypZmroapW0e9vq5pTRUREZEnYL0GlMVQRERFVkiRJ5i6BLAhDFREREZECGKqIiIgqicN/VBpDFRERUSVx+I9KY6giIiIiUgBDFREREZECGKqIiIgqiXOqqDSGKiIiokrinCoqjaGKiIiISAEMVURERJXE4T8qjaGKiIiokjj8R6UxVBEREREpgKGKiIiokjj8R6UxVBEREVUSh/+oNIYqIiIiIgUwVBEREREpgKGKiIiokjinikpjqCIiIiJSAEMVERERkQIYqoiIiIgUwFBFREREpACGKiIiIiIFMFQRERERKYChioiIiEgBDFVERERECmCoIiIiIlIAQxURERGRAhiqiIiIiBTAUEVERESkAIYqIiIiIgUwVBEREREpgKGKiIiISAFmDVV79+7Fs88+i8DAQEiShA0bNsj7ioqK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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "El hecho de que el coche sea diesel representa una relación positiva en cuanto a los datos de precio que destacan en el gráfico True. Sin embargo el grueso del gráfico se distribuye de manera bastante equilibrada entre ser o no ser diesel."
      ],
      "metadata": {
        "id": "7AYVMK25Ktwx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Y ahora un gráfico de violin entre a/c y precio."
      ],
      "metadata": {
        "id": "8hKskoBwcDyi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.violinplot(x='aire_acondicionado',y='precio', data=bmw_clean, palette='Blues')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "KpE_but1cE1g",
        "outputId": "ebb635ac-8cda-49c6-e792-93c26040d806"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='aire_acondicionado', ylabel='precio'>"
            ]
          },
          "metadata": {},
          "execution_count": 98
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se puede ver que tener a/c no determina el precio del coche, ya que el grueso de la distribución del gráfico es muy similar."
      ],
      "metadata": {
        "id": "qGEQ0WNcdWQ4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora, para ver la relación entre datos numéricos, usaré un gráfico de puntos. Primero para ver la relación entre potencia y precio, y después entre potencia, gas_diesel y precio.  "
      ],
      "metadata": {
        "id": "G1LTcOhQdf61"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(x='potencia', y='precio', data=bmw_clean)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "WwbPPmSXdgQc",
        "outputId": "a4de2a9d-d7d9-4559-a8bf-5256f1f92a8d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='potencia', ylabel='precio'>"
            ]
          },
          "metadata": {},
          "execution_count": 99
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(x='potencia', hue='gas_diesel', y='precio', data=bmw_clean)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "1jVeByzIeuHD",
        "outputId": "0e8592a5-5411-416e-e27e-2873eb5aa848"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='potencia', ylabel='precio'>"
            ]
          },
          "metadata": {},
          "execution_count": 100
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se puede ver relación positiva entre potencia y precio, ya que, aunque hay algunos puntos extremos, la tendencia general del gráfico es ascendente.  "
      ],
      "metadata": {
        "id": "Xh9tANH2egaq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comienzo el análisis de columna a columna para comprobar la información que tiene cada una de ellas. Empiezo imprimiendo un listado de categorías."
      ],
      "metadata": {
        "id": "8YXsJApvuhHX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in bmw_clean:\n",
        "  print (i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tVWQYb1mumus",
        "outputId": "b8d16968-3541-40b1-ad90-849f35d5ab0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "modelo\n",
            "km\n",
            "potencia\n",
            "fecha_registro\n",
            "gas_diesel\n",
            "color\n",
            "tipo_coche\n",
            "volante_regulable\n",
            "aire_acondicionado\n",
            "camara_trasera\n",
            "asientos_traseros_plegables\n",
            "elevalunas_electrico\n",
            "bluetooth\n",
            "gps\n",
            "alerta_lim_velocidad\n",
            "precio\n",
            "fecha_venta\n",
            "log_precio\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in bmw_clean:\n",
        "  print (bmw_clean[i].value_counts())"
      ],
      "metadata": {
        "id": "b7XtK9lm7zu1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f57ffb0f-7423-4807-92fa-bfa4e635c1c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "320                  750\n",
            "520                  632\n",
            "318                  566\n",
            "X3                   438\n",
            "116                  358\n",
            "                    ... \n",
            "635                    1\n",
            "M135                   1\n",
            " Active Tourer         1\n",
            "225 Active Tourer      1\n",
            "214 Gran Tourer        1\n",
            "Name: modelo, Length: 77, dtype: int64\n",
            "71857.0     2\n",
            "179630.0    2\n",
            "94829.0     2\n",
            "101223.0    2\n",
            "167205.0    2\n",
            "           ..\n",
            "321301.0    1\n",
            "87542.0     1\n",
            "166108.0    1\n",
            "155538.0    1\n",
            "195840.0    1\n",
            "Name: km, Length: 4777, dtype: int64\n",
            "135.0    879\n",
            "120.0    784\n",
            "85.0     630\n",
            "100.0    568\n",
            "105.0    451\n",
            "        ... \n",
            "224.0      1\n",
            "121.0      1\n",
            "239.0      1\n",
            "236.0      1\n",
            "261.0      1\n",
            "Name: potencia, Length: 61, dtype: int64\n",
            "2013-07-01    171\n",
            "2014-03-01    162\n",
            "2014-05-01    151\n",
            "2013-01-01    148\n",
            "2013-09-01    147\n",
            "             ... \n",
            "2017-11-01      1\n",
            "2002-09-01      1\n",
            "2004-12-01      1\n",
            "1996-08-01      1\n",
            "2007-12-01      1\n",
            "Name: fecha_registro, Length: 199, dtype: int64\n",
            "True     4628\n",
            "False     207\n",
            "Name: gas_diesel, dtype: int64\n",
            "black      1630\n",
            "grey       1170\n",
            "blue        704\n",
            "white       536\n",
            "brown       341\n",
            "silver      326\n",
            "red          51\n",
            "beige        41\n",
            "green        18\n",
            "unknown      12\n",
            "orange        6\n",
            "Name: color, dtype: int64\n",
            "estate         1597\n",
            "sedan          1167\n",
            "suv            1057\n",
            "hatchback       699\n",
            "subcompact      113\n",
            "coupe           103\n",
            "convertible      47\n",
            "van              43\n",
            "unknown           9\n",
            "Name: tipo_coche, dtype: int64\n",
            "True     2660\n",
            "False    2175\n",
            "Name: volante_regulable, dtype: int64\n",
            "True     3834\n",
            "False    1001\n",
            "Name: aire_acondicionado, dtype: int64\n",
            "False    3862\n",
            "True      973\n",
            "Name: camara_trasera, dtype: int64\n",
            "False    3873\n",
            "True      962\n",
            "Name: asientos_traseros_plegables, dtype: int64\n",
            "False    2609\n",
            "True     2226\n",
            "Name: elevalunas_electrico, dtype: int64\n",
            "False    3668\n",
            "True     1167\n",
            "Name: bluetooth, dtype: int64\n",
            "True     4506\n",
            "False     329\n",
            "Name: gps, dtype: int64\n",
            "True     2616\n",
            "False    2219\n",
            "Name: alerta_lim_velocidad, dtype: int64\n",
            "13100.0    68\n",
            "14900.0    65\n",
            "11900.0    61\n",
            "14300.0    60\n",
            "13400.0    57\n",
            "           ..\n",
            "48200.0     1\n",
            "41900.0     1\n",
            "38800.0     1\n",
            "28400.0     1\n",
            "45100.0     1\n",
            "Name: precio, Length: 437, dtype: int64\n",
            "2018-05-01    808\n",
            "2018-03-01    735\n",
            "2018-04-01    691\n",
            "2018-06-01    602\n",
            "2018-07-01    537\n",
            "2018-08-01    527\n",
            "2018-02-01    500\n",
            "2018-09-01    223\n",
            "2018-01-01    208\n",
            "2007-08-01      1\n",
            "2010-04-01      1\n",
            "2009-04-01      1\n",
            "2008-06-01      1\n",
            "Name: fecha_venta, dtype: int64\n",
            "4.117271    68\n",
            "4.173186    65\n",
            "4.075547    61\n",
            "4.155336    60\n",
            "4.127105    57\n",
            "            ..\n",
            "4.683047     1\n",
            "4.622214     1\n",
            "4.588832     1\n",
            "4.453318     1\n",
            "4.654177     1\n",
            "Name: log_precio, Length: 437, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dado que hay diferentes tipos de datos, los voy a separar en: target, var.categóricas, var. numéricas y booleanos. Comienzo definiendo el target."
      ],
      "metadata": {
        "id": "vjIp7r5pu9zx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "target = ['precio']"
      ],
      "metadata": {
        "id": "KtmDW3KzuzdA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora hay que obtener las listas que contienen los datos categóricos, numéricos y booleanos."
      ],
      "metadata": {
        "id": "y_L22SdIzL0M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def obtener_lista_variables(dataset):\n",
        "    lista_numericas=[]\n",
        "    lista_boolean=[]\n",
        "    lista_categoricas=[]\n",
        "    for i in dataset:\n",
        "        if dataset[i].dtype == bool and i not in target:\n",
        "            lista_boolean.append(i)\n",
        "        elif dataset[i].dtype.kind in [\"i\",\"f\"] and i not in target:\n",
        "            lista_numericas.append(i)\n",
        "        else:\n",
        "            lista_categoricas.append(i)\n",
        "\n",
        "    return lista_numericas, lista_boolean, lista_categoricas"
      ],
      "metadata": {
        "id": "S_0ZeikfIBNE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "l_num, l_bool, l_cat = obtener_lista_variables(bmw_clean)"
      ],
      "metadata": {
        "id": "vJiTs6Y3vZ9Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(f'Numericas: {l_num}')\n",
        "print(f'Boolean: {l_bool}')\n",
        "print(f'Categóricas: {l_cat}')"
      ],
      "metadata": {
        "id": "WYL5GCIF8WUN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0e65cac0-6de0-4fc7-9436-a1ac096e3acb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Numericas: ['km', 'potencia', 'log_precio']\n",
            "Boolean: ['gas_diesel', 'volante_regulable', 'aire_acondicionado', 'camara_trasera', 'asientos_traseros_plegables', 'elevalunas_electrico', 'bluetooth', 'gps', 'alerta_lim_velocidad']\n",
            "Categóricas: ['modelo', 'fecha_registro', 'color', 'tipo_coche', 'precio', 'fecha_venta']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Empiezo por las variables numéricas extrayendo los histogramas."
      ],
      "metadata": {
        "id": "fBxaHGHnz8Bz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in l_num:\n",
        " bmw_clean.hist(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "_-cSJg691TcX",
        "outputId": "ac6bff74-79d2-457c-8bfc-4e09c4ea531b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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q7R//349+uij8ng8mjZtWijaNk5d5jx8+HB98803uvXWW2VZls6fP69HHnlEf/zjH0PR8lXjYn8XVlRU6Pvvv1fjxo0D/pqcgYGRnnnmGS1ZskTLly9XdHR0fbdzxTh16pRGjBihv/71r2revHl9t3NFq66uVmJiol599VV1795d99xzj5544gnNnz+/vlu7omzYsEFPP/20Xn75Zf3tb3/Te++9p5UrV2rWrFn13Rr+RZyB+ZHmzZsrIiJC5eXlPtvLy8uVnJx8weckJyf7VY8f1GXWNebMmaNnnnlGa9euVefOnYPZpvH8nfOBAwf05ZdfasiQId5t1dXVkqRGjRpp3759at26dXCbNlBd3s8pKSmKjIxURESEd1tGRoZcLpcqKysVFRUV1J5NVJc5/+lPf9KIESP00EMPSZI6deqkM2fOaMyYMXriiScUHs7/xwfCxf4utNvtQTn7InEGxkdUVJS6d++udevWebdVV1dr3bp1cjgcF3yOw+HwqZckp9N50Xr8oC6zlqSCggLNmjVLq1evVo8ePULRqtH8nXP79u21a9culZWVeX9uv/129e3bV2VlZUpLSwtl+8aoy/v5lltu0f79+70BUZL+/ve/KyUlhfByEXWZ89mzZ2uFlJrQaPFdxgFTL38XBu3jwYZasmSJZbPZrKKiImvPnj3WmDFjrPj4eMvlclmWZVkjRoyw/vCHP3jrt2zZYjVq1MiaM2eOtXfvXmvatGncRn2Z/J31M888Y0VFRVnvvvuudfToUe/PqVOn6usQjODvnH+Ku5Auj79zPnz4sBUbG2uNGzfO2rdvn7VixQorMTHRevLJJ+vrEIzg75ynTZtmxcbGWm+//bZ18OBBq7i42GrdurV1991319chGOHUqVPWjh07rB07dliSrOeff97asWOH9dVXX1mWZVl/+MMfrBEjRnjra26jnjhxorV3716rsLCQ26jrw0svvWS1bNnSioqKsm6++WZr27Zt3n233XabNWrUKJ/6d955x2rbtq0VFRVl3XDDDdbKlStD3LG5/Jl1q1atLEm1fqZNmxb6xg3j73v6xwgwl8/fOW/dutXKzMy0bDabdf3111tPPfWUdf78+RB3bR5/5uzxeKzp06dbrVu3tqKjo620tDTr0Ucftb777rvQN26Q//mf/7ngf29rZjtq1Cjrtttuq/Wcrl27WlFRUdb1119vLVy4MKg9hlkW59AAAIBZ+AwMAAAwDgEGAAAYhwADAACMQ4ABAADGIcAAAADjEGAAAIBxCDAAAMA4BBgAAHDZNm3apCFDhig1NVVhYWF6//33/V7DsizNmTNHbdu2lc1m07XXXqunnnrKrzX4MkcAAHDZzpw5oy5duujBBx/UXXfdVac1/uM//kPFxcWaM2eOOnXqpOPHj+v48eN+rcG/xAsAAOokLCxMy5cv15133und5na79cQTT+jtt9/WiRMn1LFjRz377LPq06ePJGnv3r3q3LmzPvvsM7Vr167Or80lJAAAEDDjxo1TSUmJlixZop07d+rf/u3fNHDgQH3xxReSpA8//FDXX3+9VqxYofT0dF133XV66KGH/D4DQ4ABAAABcfjwYS1cuFDLli1Tr1691Lp1a/3+97/XrbfeqoULF0qSDh48qK+++krLli3Tm2++qaKiIpWWluo3v/mNX6/FZ2AAAEBA7Nq1S1VVVWrbtq3PdrfbrWbNmkmSqqur5Xa79eabb3rrFixYoO7du2vfvn2XfVmJAAMAAALi9OnTioiIUGlpqSIiInz2NWnSRJKUkpKiRo0a+YScjIwMST+cwSHAAACAkOrWrZuqqqp07Ngx9erV64I1t9xyi86fP68DBw6odevWkqS///3vkqRWrVpd9mtxFxIAALhsp0+f1v79+yX9EFief/559e3bVwkJCWrZsqXuv/9+bdmyRXPnzlW3bt30z3/+U+vWrVPnzp2Vm5ur6upq3XTTTWrSpIleeOEFVVdXKy8vT3a7XcXFxZfdBwEGAABctg0bNqhv3761to8aNUpFRUXyeDx68skn9eabb+r//b//p+bNm6tnz56aMWOGOnXqJEk6cuSIHnvsMRUXF+uaa67RoEGDNHfuXCUkJFx2HwQYAABgHG6jBgAAxiHAAAAA4xBgAACAcQgwAADAOAQYAABgHAIMAAAwDgEGAAAYhwADAACMQ4ABAADGIcAAAADjEGAAAIBx/j9Pg/7Ytip2NwAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjAAAAGzCAYAAAAxPS2EAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAxvklEQVR4nO3df1iUdb7/8RcgM0g5ICYgRyTK4w9S1DR1NjVTBI1ts7wqy9TdzE4udi3R6YffU4a6Zy3LXCuzdlOps3r6sac6m1oy6qplWEpxVCxPtpp16UCbCf4cR7i/f+zFHMdBZGgQP8zzcV1cOvf9ns987jcf5OU998xEWJZlCQAAwCCRLT0BAACAYBFgAACAcQgwAADAOAQYAABgHAIMAAAwDgEGAAAYhwADAACMQ4ABAADGIcAAAADjEGAABCgqKlJERIT27dvX0lO5aNAT4OJCgAEAAMYhwABAI0ycOFEnTpxQWlpaS08FgAgwAFqhY8eOhXzMqKgoxcTEKCIiIuRjAwgeAQZAo7z44ou66qqrZLfblZKSory8PB0+fDigbtGiRbriiivUtm1bDRw4UB9++KGGDx+u4cOHB/V4l19+uX7+85+ruLhYffv2VUxMjDIyMvT222/71dVdm7Jx40b9+te/VmJiojp37uzb//7772vo0KG65JJL1K5dO+Xm5qq8vDzg8b788kvddttt6tixo9q2bavu3bvr3/7t3wIe5+xrYBrbFwChRYABcF6FhYXKy8tTSkqK5s+fr3Hjxunll19Wdna2vF6vr27x4sWaPn26OnfurHnz5mno0KEaO3asvvvuuyY97ldffaXbb79dY8aM0dy5c9WmTRvdeuutcrlcAbW//vWvtWvXLs2cOVOPPvqoJOk//uM/lJubq0svvVRPPfWUHn/8ce3atUtDhgzxCyLbt2/XoEGDtH79ek2dOlULFy7U2LFj9d5774WkLwCagQUAZ1m2bJklydq7d69VWVlp2Ww2Kzs726qpqfHVvPDCC5Yka+nSpZZlWZbH47E6dOhgXXPNNZbX6/XVFRUVWZKs6667Lqg5pKWlWZKs//qv//Jtq6qqsjp16mT169cvYK5DhgyxTp8+7dt+5MgRKz4+3po6darfuG6324qLi/PbPmzYMKtdu3bWN99841dbW1tbb08sy2p0XwA0D87AAGjQ2rVrderUKeXn5ysy8v/+yZg6daocDodWrVolSdq2bZt++OEHTZ06VW3atPHVTZgwQe3bt2/SY6ekpOjmm2/23XY4HJo0aZI+//xzud1uv9qpU6cqKirKd9vlcunw4cO644479Pe//933FRUVpUGDBumvf/2rJOn777/Xpk2bdPfdd6tLly5+YzZ0vUtj+wKgebQ5fwmAcPbNN99Ikrp37+633Waz6YorrvDtr/uza9eufnVt2rTR5Zdf3qTH7tq1a0CI6NatmyRp3759Sk5O9m1PT0/3q/vqq68kSSNGjKh3bIfDIUn629/+Jknq1atXUHNrbF8ANA8CDIBWoW3btn63a2trJf3jOpgzg06dM88SATAPP8EAGlT3vie7d+/WFVdc4dt+6tQp7d27V1lZWX51e/bs0fXXX++rO336tPbt26fMzMygH3vPnj2yLMvvLMz//u//StJ5z+pceeWVkqTExETfHOtTd0w7d+4Mam6N7QuA5sE1MAAalJWVJZvNpueee06WZfm2L1myRFVVVcrNzZUkDRgwQB06dNAf//hHnT592le3fPly/fjjj0167AMHDuidd97x3a6urtZrr72mvn371ntW5Uw5OTlyOBz63e9+V+8rgr7//ntJUseOHTVs2DAtXbpU+/fv96s583jP1ti+AGgenIEB0KCOHTtqxowZmjVrlkaPHq1f/OIX2r17t1588UVdc801uuuuuyT949qPwsJC3X///RoxYoRuu+027du3T0VFRbryyiub9AZw3bp105QpU7R161YlJSVp6dKlqqio0LJly857X4fDocWLF2vixIm6+uqrNX78eHXs2FH79+/XqlWrdO211+qFF16QJD333HMaMmSIrr76at17771KT0/Xvn37tGrVKpWVlf2kvgBoJi37IigAF6OzXzJsWf94eXCPHj2s6OhoKykpyZo2bZr1448/Btz3ueees9LS0iy73W4NHDjQ2rx5s9W/f39r9OjRQc0hLS3Nys3NtdasWWNlZmZadrvd6tGjh/XWW2/VO9etW7fWO85f//pXKycnx4qLi7NiYmKsK6+80vrlL39pbdu2za9u586d1s0332zFx8dbMTExVvfu3a3HH3+8wZ4E0xcAoRVhWQ2cIwWAn6i2tlYdO3bULbfcoj/+8Y+Nvt/ll1+uXr16aeXKlc04OwCm4hoYACFz8uTJgOtGXnvtNR06dCjo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5ppr1K5dOyUmJmrs2LHavXu3X83w4cMVERHh93Xffff51ezfv1+5ubmKjY1VYmKiHnroIZ0+fdqvZsOGDbr66qtlt9vVtWtXFRUVNe0IAQBAqxNUgNm4caPy8vK0ZcsWuVwueb1eZWdn69ixY351U6dO1cGDB31f8+bN8+2rqalRbm6uTp06pY8//livvvqqioqKNHPmTF/N3r17lZubq+uvv15lZWXKz8/XPffcozVr1vzEwwUAAK1Bm2CKP/jgA7/bRUVFSkxMVGlpqYYNG+bbHhsbq+Tk5HrHKC4u1q5du7R27VolJSWpb9++mjNnjh555BEVFhbKZrPppZdeUnp6uubPny9J6tmzpz766CMtWLBAOTk5wR4jAABoZYIKMGerqqqSJCUkJPhtX758uf70pz8pOTlZN954ox5//HHFxsZKkkpKStS7d28lJSX56nNycjRt2jSVl5erX79+KikpUVZWlt+YOTk5ys/PP+dcPB6PPB6P73Z1dbUkyev1yuv1/pTD9FM3VijHbA3oSyB6Eijce2KPsurfHmn5/XkxaanvVbivlfqES08ae3xNDjC1tbXKz8/Xtddeq169evm233nnnUpLS1NKSoq2b9+uRx55RLt379bbb78tSXK73X7hRZLvttvtbrCmurpaJ06cUNu2bQPmM3fuXM2aNStge3FxsS88hZLL5Qr5mK0BfQlETwKFa0/mDWx4/5wBtRdmIkFYvXp1iz5+uK6VhrT2nhw/frxRdU0OMHl5edq5c6c++ugjv+333nuv7++9e/dWp06dNHLkSH399de68sorm/pw5zVjxgwVFBT4bldXVys1NVXZ2dlyOBwhexyv1yuXy6VRo0YpOjo6ZOOajr4EoieBwr0nvQrrv47PHmlpzoBaPb4tUp7aiAs8q4btLGyZp+3Dfa3UJ1x6UvcMyvk0KcBMnz5dK1eu1KZNm9S5c+cGawcNGiRJ2rNnj6688kolJyfr008/9aupqKiQJN91M8nJyb5tZ9Y4HI56z75Ikt1ul91uD9geHR3dLN/o5hrXdPQlED0JFK498dQ0HE48tRHnrbnQWvr7FK5rpSGtvSeNPbagXoVkWZamT5+ud955R+vXr1d6evp571NWViZJ6tSpkyTJ6XRqx44dqqys9NW4XC45HA5lZGT4atatW+c3jsvlktPpDGa6AACglQoqwOTl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zlkbTmslmL6Ew1p54oknrD59+jS6PpzWSn04A9OAqqoqSVJCQsI5a0pKSpSVleW3LScnRyUlJc06t5bUmL5I0tGjR5WWlqbU1NTz/i/cZDU1NXr99dd17Nixc35WVziuk8b0RQqPdZKXl6fc3NyANVCfcForwfRFCo+18tVXXyklJUVXXHGFJkyYoP3795+zNpzWSn0u2o8SaGm1tbXKz8/Xtddeq169ep2zzu12B3y8QVJSktxud3NPsUU0ti/du3fX0qVLlZmZqaqqKj3zzDP62c9+pvLycnXu3PkCzrj57NixQ06nUydPntSll16qd955RxkZGfXWhtM6CaYv4bBOXn/9dX322WfaunVro+rDZa0E25dwWCuDBg1SUVGRunfvroMHD2rWrFkaOnSodu7cqXbt2gXUh8taORcCzDnk5eVp586dDT7/GI4a2xen0+n3v+6f/exn6tmzp15++WXNmTOnuad5QXTv3l1lZWWqqqrSn//8Z02ePFkbN2485y/rcBFMX1r7Ovn222/1m9/8Ri6Xq9VdcPpTNKUvrX2tSNKYMWN8f8/MzNSgQYOUlpamN998U1OmTGnBmV2cCDD1mD59ulauXKlNmzadN9knJyeroqLCb1tFRYWSk5Obc4otIpi+nC06Olr9+vXTnj17mml2F57NZlPXrl0lSf3799fWrVu1cOFCvfzyywG14bROgunL2VrbOiktLVVlZaWuvvpq37aamhpt2rRJL7zwgjwej6KiovzuEw5rpSl9OVtrWyv1iY+PV7du3c55jOGwVhrCNTBnsCxL06dP1zvvvKP169crPT39vPdxOp1at26d3zaXy9Xgc/6maUpfzlZTU6MdO3aoU6dOzTDDi0Ntba08Hk+9+8JhnZxLQ305W2tbJyNHjtSOHTtUVlbm+xowYIAmTJigsrKyen9Jh8NaaUpfztba1kp9jh49qq+//vqcxxgOa6VBLX0V8cVk2rRpVlxcnLVhwwbr4MGDvq/jx4/7aiZOnGg9+uijvtubN2+22rRpYz3zzDPWF198YT3xxBNWdHS0tWPHjpY4hGbRlL7MmjXLWrNmjfX1119bpaWl1vjx462YmBirvLy8JQ4h5B599FFr48aN1t69e63t27dbjz76qBUREWEVFxdblhWe68Sygu9La18n9Tn71TbhulbOdr6+hMNaefDBB60NGzZYe/futTZv3mxlZWVZl112mVVZWWlZFmvlbASYM0iq92vZsmW+muuuu86aPHmy3/3efPNNq1u3bpbNZrOuuuoqa9WqVRd24s2sKX3Jz8+3unTpYtlsNispKcm64YYbrM8+++zCT76Z3H333VZaWppls9msjh07WiNHjvT9kras8FwnlhV8X1r7OqnP2b+ow3WtnO18fQmHtXL77bdbnTp1smw2m/VP//RP1u23327t2bPHt5+14i/CsiyrZc79AAAANA3XwAAAAOMQYAAAgHEIMAAAwDgEGAAAYBwCDAAAMA4BBgAAGIcAAwAAjEOAAQAAxiHAAAAA4xBgAACAcQgwAADAOP8fce1u4TxhaHMAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Estos datos numéricos parecen correctos, por lo que continúo ahora con las categóricas."
      ],
      "metadata": {
        "id": "E-1e2qYzUyox"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in l_cat:\n",
        " print(bmw_clean[i].value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yWdZhlrEU4pJ",
        "outputId": "eb6e35e1-d8ef-46eb-fe50-b93f312a172a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "320                  750\n",
            "520                  632\n",
            "318                  566\n",
            "X3                   438\n",
            "116                  358\n",
            "                    ... \n",
            "635                    1\n",
            "M135                   1\n",
            " Active Tourer         1\n",
            "225 Active Tourer      1\n",
            "214 Gran Tourer        1\n",
            "Name: modelo, Length: 77, dtype: int64\n",
            "2013-07-01    171\n",
            "2014-03-01    162\n",
            "2014-05-01    151\n",
            "2013-01-01    148\n",
            "2013-09-01    147\n",
            "             ... \n",
            "2017-11-01      1\n",
            "2002-09-01      1\n",
            "2004-12-01      1\n",
            "1996-08-01      1\n",
            "2007-12-01      1\n",
            "Name: fecha_registro, Length: 199, dtype: int64\n",
            "black      1630\n",
            "grey       1170\n",
            "blue        704\n",
            "white       536\n",
            "brown       341\n",
            "silver      326\n",
            "red          51\n",
            "beige        41\n",
            "green        18\n",
            "unknown      12\n",
            "orange        6\n",
            "Name: color, dtype: int64\n",
            "estate         1597\n",
            "sedan          1167\n",
            "suv            1057\n",
            "hatchback       699\n",
            "subcompact      113\n",
            "coupe           103\n",
            "convertible      47\n",
            "van              43\n",
            "unknown           9\n",
            "Name: tipo_coche, dtype: int64\n",
            "13100.0    68\n",
            "14900.0    65\n",
            "11900.0    61\n",
            "14300.0    60\n",
            "13400.0    57\n",
            "           ..\n",
            "48200.0     1\n",
            "41900.0     1\n",
            "38800.0     1\n",
            "28400.0     1\n",
            "45100.0     1\n",
            "Name: precio, Length: 437, dtype: int64\n",
            "2018-05-01    808\n",
            "2018-03-01    735\n",
            "2018-04-01    691\n",
            "2018-06-01    602\n",
            "2018-07-01    537\n",
            "2018-08-01    527\n",
            "2018-02-01    500\n",
            "2018-09-01    223\n",
            "2018-01-01    208\n",
            "2007-08-01      1\n",
            "2010-04-01      1\n",
            "2009-04-01      1\n",
            "2008-06-01      1\n",
            "Name: fecha_venta, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Veo que tengo 2 columnas de fechas, 'fecha_venta' y 'fecha_registro', por lo que podría crear una nueva columna llamada 'antiguedad_años', restando 'fecha_venta' a 'fecha_registro'. Muestro el resultado en año (enteros)."
      ],
      "metadata": {
        "id": "ruQR36DU_xfK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean[\"antiguedad_años\"] = ((bmw_clean[\"fecha_venta\"] - bmw_clean[\"fecha_registro\"]).dt.days/365).astype(int)"
      ],
      "metadata": {
        "id": "V6ZFfzkw_wju"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "bFTAEi23AMvT",
        "outputId": "0255f634-16fd-4fba-a708-4d4b3e8bcbba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia fecha_registro  gas_diesel   color   tipo_coche  \\\n",
              "0    118  140411.0     100.0     2012-02-01        True   black  convertible   \n",
              "1     M4   13929.0     317.0     2016-04-01       False    grey  convertible   \n",
              "2    320  183297.0     120.0     2012-04-01        True   white  convertible   \n",
              "3    420  128035.0     135.0     2014-07-01        True     red  convertible   \n",
              "4    425   97097.0     160.0     2014-12-01        True  silver  convertible   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio fecha_venta  log_precio  antiguedad_años  \n",
              "0                 False  11300.0  2018-01-01    4.053078                5  \n",
              "1                  True  69700.0  2018-02-01    4.843233                1  \n",
              "2                 False  10200.0  2018-02-01    4.008600                5  \n",
              "3                  True  25100.0  2018-02-01    4.399674                3  \n",
              "4                  True  33400.0  2018-04-01    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e54a218-d3bc-497f-9564-fce551d04709\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2012-02-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>2018-01-01</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2012-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2014-07-01</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>2018-02-01</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>2018-04-01</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e54a218-d3bc-497f-9564-fce551d04709')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e54a218-d3bc-497f-9564-fce551d04709 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e54a218-d3bc-497f-9564-fce551d04709');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Voy a ver si no hay alguna resta de las fechas que dé negativo lo que indicaría que son datos erróneos."
      ],
      "metadata": {
        "id": "0Au-K_-Q0QMZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean[bmw_clean['antiguedad_años']<0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 239
        },
        "id": "KOoBIaTdAw6s",
        "outputId": "cd6fe030-a313-4104-af80-2edcc7e2b647"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    modelo        km  potencia fecha_registro  gas_diesel  color   tipo_coche  \\\n",
              "42     330  142483.0     180.0     2012-01-01        True   blue  convertible   \n",
              "100    320  342768.0     135.0     2011-12-01        True  black        coupe   \n",
              "179    320  181052.0     120.0     2014-10-01        True  black       estate   \n",
              "254    316  201102.0      85.0     2013-12-01        True  black       estate   \n",
              "\n",
              "     volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "42                True                True           False   \n",
              "100              False                True           False   \n",
              "179              False                True           False   \n",
              "254               True               False           False   \n",
              "\n",
              "     asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "42                         False                  True      False  True   \n",
              "100                        False                  True      False  True   \n",
              "179                        False                 False      False  True   \n",
              "254                        False                 False      False  True   \n",
              "\n",
              "     alerta_lim_velocidad   precio fecha_venta  log_precio  antiguedad_años  \n",
              "42                   True  15800.0  2007-08-01    4.198657               -4  \n",
              "100                 False   8200.0  2010-04-01    3.913814               -1  \n",
              "179                  True  11500.0  2009-04-01    4.060698               -5  \n",
              "254                 False   8800.0  2008-06-01    3.944483               -5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-120d2460-e7ed-4e6c-963a-e5a6825478c3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>330</td>\n",
              "      <td>142483.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>2012-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>blue</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15800.0</td>\n",
              "      <td>2007-08-01</td>\n",
              "      <td>4.198657</td>\n",
              "      <td>-4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>320</td>\n",
              "      <td>342768.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>2011-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>coupe</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>8200.0</td>\n",
              "      <td>2010-04-01</td>\n",
              "      <td>3.913814</td>\n",
              "      <td>-1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>320</td>\n",
              "      <td>181052.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>2014-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>estate</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>11500.0</td>\n",
              "      <td>2009-04-01</td>\n",
              "      <td>4.060698</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>254</th>\n",
              "      <td>316</td>\n",
              "      <td>201102.0</td>\n",
              "      <td>85.0</td>\n",
              "      <td>2013-12-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>estate</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>8800.0</td>\n",
              "      <td>2008-06-01</td>\n",
              "      <td>3.944483</td>\n",
              "      <td>-5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-120d2460-e7ed-4e6c-963a-e5a6825478c3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-120d2460-e7ed-4e6c-963a-e5a6825478c3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-120d2460-e7ed-4e6c-963a-e5a6825478c3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Como hay 4 filas donde la 'antiguedad_años' es negativa, las elimino ya que debe ser una errata en el registro de las fechas."
      ],
      "metadata": {
        "id": "PEaQ5-yLA1VP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean.drop(bmw_clean[bmw_clean['antiguedad_años'] < 0].index, inplace=True)"
      ],
      "metadata": {
        "id": "M-WvFEJ3AyaB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Hago una copia y de nuevo reseteo los índices."
      ],
      "metadata": {
        "id": "e20GfjLpOgRK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1 = bmw_clean.copy()"
      ],
      "metadata": {
        "id": "kJ6apP3DO7l2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.reset_index(drop=True, inplace=True)"
      ],
      "metadata": {
        "id": "Czr1aTKVOgmy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 409
        },
        "id": "mWdCGOx3O-gz",
        "outputId": "bf3fad22-52e0-4022-8187-c0fb277893bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 modelo        km  potencia fecha_registro  gas_diesel  color  \\\n",
              "4826    218 Gran Tourer   39743.0     110.0     2015-10-01        True  black   \n",
              "4827  218 Active Tourer   49832.0     100.0     2015-06-01        True   grey   \n",
              "4828    218 Gran Tourer   19633.0     110.0     2015-10-01        True   grey   \n",
              "4829  218 Active Tourer   27920.0     110.0     2016-04-01        True  brown   \n",
              "4830                525  195840.0     160.0     2013-01-01        True   grey   \n",
              "\n",
              "     tipo_coche  volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "4826        van              False                True           False   \n",
              "4827        van              False                True           False   \n",
              "4828        van              False                True           False   \n",
              "4829        van               True                True           False   \n",
              "4830    unknown               True                True           False   \n",
              "\n",
              "      asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "4826                        False                 False      False  True   \n",
              "4827                        False                 False      False  True   \n",
              "4828                        False                 False      False  True   \n",
              "4829                        False                 False      False  True   \n",
              "4830                        False                  True      False  True   \n",
              "\n",
              "      alerta_lim_velocidad   precio fecha_venta  log_precio  antiguedad_años  \n",
              "4826                 False  14600.0  2018-08-01    4.164353                2  \n",
              "4827                  True  17500.0  2018-08-01    4.243038                3  \n",
              "4828                  True  17000.0  2018-09-01    4.230449                2  \n",
              "4829                  True  22700.0  2018-09-01    4.356026                2  \n",
              "4830                  True  15500.0  2018-09-01    4.190332                5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fdf14de8-42da-4d96-a706-e7ebd84dce6c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>fecha_registro</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>fecha_venta</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4826</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>39743.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>14600.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "      <td>4.164353</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4827</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>49832.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17500.0</td>\n",
              "      <td>2018-08-01</td>\n",
              "      <td>4.243038</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4828</th>\n",
              "      <td>218 Gran Tourer</td>\n",
              "      <td>19633.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2015-10-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>van</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>17000.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "      <td>4.230449</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4829</th>\n",
              "      <td>218 Active Tourer</td>\n",
              "      <td>27920.0</td>\n",
              "      <td>110.0</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>True</td>\n",
              "      <td>brown</td>\n",
              "      <td>van</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>22700.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "      <td>4.356026</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4830</th>\n",
              "      <td>525</td>\n",
              "      <td>195840.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>2013-01-01</td>\n",
              "      <td>True</td>\n",
              "      <td>grey</td>\n",
              "      <td>unknown</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>15500.0</td>\n",
              "      <td>2018-09-01</td>\n",
              "      <td>4.190332</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdf14de8-42da-4d96-a706-e7ebd84dce6c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fdf14de8-42da-4d96-a706-e7ebd84dce6c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fdf14de8-42da-4d96-a706-e7ebd84dce6c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora elimino las columnas 'fecha_venta' y 'fecha_registro'."
      ],
      "metadata": {
        "id": "nICz87AqAgOM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1 = bmw_clean1.drop(['fecha_venta', 'fecha_registro'], axis=1)"
      ],
      "metadata": {
        "id": "895g8YeA_wZ4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "1puCmWsu_wXR",
        "outputId": "e107f3de-8212-4b8e-f5c8-871fd7543af5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia  gas_diesel   color   tipo_coche  \\\n",
              "0    118  140411.0     100.0        True   black  convertible   \n",
              "1     M4   13929.0     317.0       False    grey  convertible   \n",
              "2    320  183297.0     120.0        True   white  convertible   \n",
              "3    420  128035.0     135.0        True     red  convertible   \n",
              "4    425   97097.0     160.0        True  silver  convertible   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio  log_precio  antiguedad_años  \n",
              "0                 False  11300.0    4.053078                5  \n",
              "1                  True  69700.0    4.843233                1  \n",
              "2                 False  10200.0    4.008600                5  \n",
              "3                  True  25100.0    4.399674                3  \n",
              "4                  True  33400.0    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-686c83b4-58a4-4624-8715-ad792a76c8e3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>True</td>\n",
              "      <td>red</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>True</td>\n",
              "      <td>silver</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-686c83b4-58a4-4624-8715-ad792a76c8e3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-686c83b4-58a4-4624-8715-ad792a76c8e3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-686c83b4-58a4-4624-8715-ad792a76c8e3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Con la columna 'color', voy a dejar los datos de color 'black', 'grey', 'blue' y 'white', que son los colores en un mayor número de filas. El resto de colores, incluído 'unknown', se llamarán 'otro_color'."
      ],
      "metadata": {
        "id": "UYUB4t5mEU7C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "colores = ['brown', 'silver', 'red', 'beige', 'green', 'unknown', 'orange']\n",
        "bmw_clean1['color'] = np.where(bmw_clean1['color'].isin(colores), 'otro_color', bmw_clean1['color'])"
      ],
      "metadata": {
        "id": "VWkTNe-c_wUK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "aNOEnrmROBCk",
        "outputId": "df426d50-90b5-41a3-e443-9584c9fcbbc5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia  gas_diesel       color   tipo_coche  \\\n",
              "0    118  140411.0     100.0        True       black  convertible   \n",
              "1     M4   13929.0     317.0       False        grey  convertible   \n",
              "2    320  183297.0     120.0        True       white  convertible   \n",
              "3    420  128035.0     135.0        True  otro_color  convertible   \n",
              "4    425   97097.0     160.0        True  otro_color  convertible   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio  log_precio  antiguedad_años  \n",
              "0                 False  11300.0    4.053078                5  \n",
              "1                  True  69700.0    4.843233                1  \n",
              "2                 False  10200.0    4.008600                5  \n",
              "3                  True  25100.0    4.399674                3  \n",
              "4                  True  33400.0    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5733ca19-0eb3-4586-9c26-e87fac1b0cbb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>convertible</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>convertible</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5733ca19-0eb3-4586-9c26-e87fac1b0cbb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5733ca19-0eb3-4586-9c26-e87fac1b0cbb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5733ca19-0eb3-4586-9c26-e87fac1b0cbb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora haré los lo mismo con la columna 'tipo_coche'. Voy a dejar el dato 'estate', 'sedan', 'suv' y 'hatchback' que son los tipos de coche en un mayor número de filas. El resto de tipos, incluído 'unknown', serán 'otro_tipo'."
      ],
      "metadata": {
        "id": "J1cewhBGP1u9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "tipos = ['subcompact', 'coupe', 'convertible', 'van', 'unknown']\n",
        "bmw_clean1['tipo_coche'] = np.where(bmw_clean1['tipo_coche'].isin(tipos), 'otro_tipo', bmw_clean1['tipo_coche'])"
      ],
      "metadata": {
        "id": "2AmNW07vSaNV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "dZuvJZ8hTQxs",
        "outputId": "902795fc-965f-493c-abfd-5d226b282c03"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  modelo        km  potencia  gas_diesel       color tipo_coche  \\\n",
              "0    118  140411.0     100.0        True       black  otro_tipo   \n",
              "1     M4   13929.0     317.0       False        grey  otro_tipo   \n",
              "2    320  183297.0     120.0        True       white  otro_tipo   \n",
              "3    420  128035.0     135.0        True  otro_color  otro_tipo   \n",
              "4    425   97097.0     160.0        True  otro_color  otro_tipo   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio  log_precio  antiguedad_años  \n",
              "0                 False  11300.0    4.053078                5  \n",
              "1                  True  69700.0    4.843233                1  \n",
              "2                 False  10200.0    4.008600                5  \n",
              "3                  True  25100.0    4.399674                3  \n",
              "4                  True  33400.0    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5a80930-b56b-4a43-b4c3-7c050b055459\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>118</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M4</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>420</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>425</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a80930-b56b-4a43-b4c3-7c050b055459')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e5a80930-b56b-4a43-b4c3-7c050b055459 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e5a80930-b56b-4a43-b4c3-7c050b055459');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora iré con la columna 'modelo'. Dado que hay 77 modelos diferentes, me quedaré con los 5 primeros 320, 520, 318, X3 y 116 que son los que se repiten más. Y los otros 72 modelos pasarán a llamarse 'otro_modelo'. Para hacerlo, agruparé los modelos que se repitan menos de 358 veces en esa categoría 'otro_modelo', ya que el modelo 116 (el último de los 5 primeros) es el número de veces que se repite."
      ],
      "metadata": {
        "id": "NPMOLcR1rFGO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1['modelo'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ae3mnEs9Mbs_",
        "outputId": "e7c9eb90-2c3d-4415-aea3-f0ce905d98c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "320                  748\n",
              "520                  632\n",
              "318                  566\n",
              "X3                   438\n",
              "116                  358\n",
              "                    ... \n",
              "635                    1\n",
              "M135                   1\n",
              " Active Tourer         1\n",
              "225 Active Tourer      1\n",
              "214 Gran Tourer        1\n",
              "Name: modelo, Length: 77, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "modelo_count = bmw_clean1['modelo'].value_counts()"
      ],
      "metadata": {
        "id": "n_co7HkvTRMx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "otros_modelos = list(modelo_count[modelo_count < 358].index)"
      ],
      "metadata": {
        "id": "kS3WvI6XsEvB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1['modelo'] = np.where(bmw_clean1['modelo'].isin(otros_modelos), 'otro_modelo', bmw_clean1['modelo'])"
      ],
      "metadata": {
        "id": "K5zbvHG9sY-r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "rKx5PyI1ueNH",
        "outputId": "b8d8513d-4c04-49b1-fa8f-30c6d74c56f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        modelo        km  potencia  gas_diesel       color tipo_coche  \\\n",
              "0  otro_modelo  140411.0     100.0        True       black  otro_tipo   \n",
              "1  otro_modelo   13929.0     317.0       False        grey  otro_tipo   \n",
              "2          320  183297.0     120.0        True       white  otro_tipo   \n",
              "3  otro_modelo  128035.0     135.0        True  otro_color  otro_tipo   \n",
              "4  otro_modelo   97097.0     160.0        True  otro_color  otro_tipo   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0               True                True           False   \n",
              "1               True                True           False   \n",
              "2              False               False           False   \n",
              "3               True                True           False   \n",
              "4               True                True           False   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth   gps  \\\n",
              "0                        False                  True       True  True   \n",
              "1                        False                 False       True  True   \n",
              "2                        False                  True      False  True   \n",
              "3                        False                  True       True  True   \n",
              "4                        False                 False       True  True   \n",
              "\n",
              "   alerta_lim_velocidad   precio  log_precio  antiguedad_años  \n",
              "0                 False  11300.0    4.053078                5  \n",
              "1                  True  69700.0    4.843233                1  \n",
              "2                 False  10200.0    4.008600                5  \n",
              "3                  True  25100.0    4.399674                3  \n",
              "4                  True  33400.0    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c6b57b69-f541-4b09-9f0e-f0df322d29f5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>True</td>\n",
              "      <td>black</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>False</td>\n",
              "      <td>grey</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>True</td>\n",
              "      <td>white</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>True</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6b57b69-f541-4b09-9f0e-f0df322d29f5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c6b57b69-f541-4b09-9f0e-f0df322d29f5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c6b57b69-f541-4b09-9f0e-f0df322d29f5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continúo ahora con los datos booleans."
      ],
      "metadata": {
        "id": "Z_peniQJEZth"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in l_bool:\n",
        " print(bmw_clean1[i].value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wZSPU09LNxYN",
        "outputId": "2aaa19ea-9d98-41c8-e475-b874c3dc3b6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True     4624\n",
            "False     207\n",
            "Name: gas_diesel, dtype: int64\n",
            "True     2658\n",
            "False    2173\n",
            "Name: volante_regulable, dtype: int64\n",
            "True     3831\n",
            "False    1000\n",
            "Name: aire_acondicionado, dtype: int64\n",
            "False    3858\n",
            "True      973\n",
            "Name: camara_trasera, dtype: int64\n",
            "False    3869\n",
            "True      962\n",
            "Name: asientos_traseros_plegables, dtype: int64\n",
            "False    2607\n",
            "True     2224\n",
            "Name: elevalunas_electrico, dtype: int64\n",
            "False    3664\n",
            "True     1167\n",
            "Name: bluetooth, dtype: int64\n",
            "True     4502\n",
            "False     329\n",
            "Name: gps, dtype: int64\n",
            "True     2614\n",
            "False    2217\n",
            "Name: alerta_lim_velocidad, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Voy a agrupar las columnas de datos boolean para luego codificarlos a binario, 0 y 1, lo que permite preparar el modelo."
      ],
      "metadata": {
        "id": "SBfBOvLZGoKm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "booleans = ['gas_diesel', 'volante_regulable', 'aire_acondicionado', 'camara_trasera', 'asientos_traseros_plegables', 'elevalunas_electrico', 'bluetooth', 'gps', 'alerta_lim_velocidad']\n",
        "bmw_clean1[booleans] = bmw_clean1[booleans].astype(int)\n"
      ],
      "metadata": {
        "id": "bHUbIa7nN3gx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "KxeFpsQxN5Nx",
        "outputId": "22d3d137-481b-42f3-b9d5-070a779ce068"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        modelo        km  potencia  gas_diesel       color tipo_coche  \\\n",
              "0  otro_modelo  140411.0     100.0           1       black  otro_tipo   \n",
              "1  otro_modelo   13929.0     317.0           0        grey  otro_tipo   \n",
              "2          320  183297.0     120.0           1       white  otro_tipo   \n",
              "3  otro_modelo  128035.0     135.0           1  otro_color  otro_tipo   \n",
              "4  otro_modelo   97097.0     160.0           1  otro_color  otro_tipo   \n",
              "\n",
              "   volante_regulable  aire_acondicionado  camara_trasera  \\\n",
              "0                  1                   1               0   \n",
              "1                  1                   1               0   \n",
              "2                  0                   0               0   \n",
              "3                  1                   1               0   \n",
              "4                  1                   1               0   \n",
              "\n",
              "   asientos_traseros_plegables  elevalunas_electrico  bluetooth  gps  \\\n",
              "0                            0                     1          1    1   \n",
              "1                            0                     0          1    1   \n",
              "2                            0                     1          0    1   \n",
              "3                            0                     1          1    1   \n",
              "4                            0                     0          1    1   \n",
              "\n",
              "   alerta_lim_velocidad   precio  log_precio  antiguedad_años  \n",
              "0                     0  11300.0    4.053078                5  \n",
              "1                     1  69700.0    4.843233                1  \n",
              "2                     0  10200.0    4.008600                5  \n",
              "3                     1  25100.0    4.399674                3  \n",
              "4                     1  33400.0    4.523746                3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d84c3e9a-a638-4b55-a7fe-58f19e2f58d4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>modelo</th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>color</th>\n",
              "      <th>tipo_coche</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>alerta_lim_velocidad</th>\n",
              "      <th>precio</th>\n",
              "      <th>log_precio</th>\n",
              "      <th>antiguedad_años</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>1</td>\n",
              "      <td>black</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>11300.0</td>\n",
              "      <td>4.053078</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>0</td>\n",
              "      <td>grey</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>69700.0</td>\n",
              "      <td>4.843233</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>320</td>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>1</td>\n",
              "      <td>white</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>10200.0</td>\n",
              "      <td>4.008600</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>1</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>25100.0</td>\n",
              "      <td>4.399674</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>otro_modelo</td>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>1</td>\n",
              "      <td>otro_color</td>\n",
              "      <td>otro_tipo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>33400.0</td>\n",
              "      <td>4.523746</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d84c3e9a-a638-4b55-a7fe-58f19e2f58d4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d84c3e9a-a638-4b55-a7fe-58f19e2f58d4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d84c3e9a-a638-4b55-a7fe-58f19e2f58d4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora voy a aplicar one-hot encoding para convertir a dato numérico las variables categóricas de: 'color', 'tipo_coche' y 'modelo'. Antes de eso hago una copia."
      ],
      "metadata": {
        "id": "k-t6RfbTUIXt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean2 = bmw_clean1.copy()"
      ],
      "metadata": {
        "id": "PhPZ-CETTzFP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "col_one_hot = ['color', 'tipo_coche', 'modelo']\n",
        "bmw_clean2 = pd.get_dummies(bmw_clean1, columns=col_one_hot)"
      ],
      "metadata": {
        "id": "PrxQZiKVU9fc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "K5D9pnGRN5LK",
        "outputId": "e323aaa7-8275-4876-e0e4-34c2387379a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         km  potencia  gas_diesel  volante_regulable  aire_acondicionado  \\\n",
              "0  140411.0     100.0           1                  1                   1   \n",
              "1   13929.0     317.0           0                  1                   1   \n",
              "2  183297.0     120.0           1                  0                   0   \n",
              "3  128035.0     135.0           1                  1                   1   \n",
              "4   97097.0     160.0           1                  1                   1   \n",
              "\n",
              "   camara_trasera  asientos_traseros_plegables  elevalunas_electrico  \\\n",
              "0               0                            0                     1   \n",
              "1               0                            0                     0   \n",
              "2               0                            0                     1   \n",
              "3               0                            0                     1   \n",
              "4               0                            0                     0   \n",
              "\n",
              "   bluetooth  gps  ...  tipo_coche_hatchback  tipo_coche_otro_tipo  \\\n",
              "0          1    1  ...                     0                     1   \n",
              "1          1    1  ...                     0                     1   \n",
              "2          0    1  ...                     0                     1   \n",
              "3          1    1  ...                     0                     1   \n",
              "4          1    1  ...                     0                     1   \n",
              "\n",
              "   tipo_coche_sedan  tipo_coche_suv  modelo_116  modelo_318  modelo_320  \\\n",
              "0                 0               0           0           0           0   \n",
              "1                 0               0           0           0           0   \n",
              "2                 0               0           0           0           1   \n",
              "3                 0               0           0           0           0   \n",
              "4                 0               0           0           0           0   \n",
              "\n",
              "   modelo_520  modelo_X3  modelo_otro_modelo  \n",
              "0           0          0                   1  \n",
              "1           0          0                   1  \n",
              "2           0          0                   0  \n",
              "3           0          0                   1  \n",
              "4           0          0                   1  \n",
              "\n",
              "[5 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-496dbb1c-f222-4393-9b37-e5a68845e52d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>...</th>\n",
              "      <th>tipo_coche_hatchback</th>\n",
              "      <th>tipo_coche_otro_tipo</th>\n",
              "      <th>tipo_coche_sedan</th>\n",
              "      <th>tipo_coche_suv</th>\n",
              "      <th>modelo_116</th>\n",
              "      <th>modelo_318</th>\n",
              "      <th>modelo_320</th>\n",
              "      <th>modelo_520</th>\n",
              "      <th>modelo_X3</th>\n",
              "      <th>modelo_otro_modelo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>140411.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>13929.0</td>\n",
              "      <td>317.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>183297.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>128035.0</td>\n",
              "      <td>135.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>97097.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-496dbb1c-f222-4393-9b37-e5a68845e52d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-496dbb1c-f222-4393-9b37-e5a68845e52d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-496dbb1c-f222-4393-9b37-e5a68845e52d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean2.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y2aUvaOPVSkI",
        "outputId": "9246c513-14a4-439c-b17f-6241d3483952"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4831 entries, 0 to 4830\n",
            "Data columns (total 30 columns):\n",
            " #   Column                       Non-Null Count  Dtype  \n",
            "---  ------                       --------------  -----  \n",
            " 0   km                           4831 non-null   float64\n",
            " 1   potencia                     4831 non-null   float64\n",
            " 2   gas_diesel                   4831 non-null   int64  \n",
            " 3   volante_regulable            4831 non-null   int64  \n",
            " 4   aire_acondicionado           4831 non-null   int64  \n",
            " 5   camara_trasera               4831 non-null   int64  \n",
            " 6   asientos_traseros_plegables  4831 non-null   int64  \n",
            " 7   elevalunas_electrico         4831 non-null   int64  \n",
            " 8   bluetooth                    4831 non-null   int64  \n",
            " 9   gps                          4831 non-null   int64  \n",
            " 10  alerta_lim_velocidad         4831 non-null   int64  \n",
            " 11  precio                       4831 non-null   float64\n",
            " 12  log_precio                   4831 non-null   float64\n",
            " 13  antiguedad_años              4831 non-null   int64  \n",
            " 14  color_black                  4831 non-null   uint8  \n",
            " 15  color_blue                   4831 non-null   uint8  \n",
            " 16  color_grey                   4831 non-null   uint8  \n",
            " 17  color_otro_color             4831 non-null   uint8  \n",
            " 18  color_white                  4831 non-null   uint8  \n",
            " 19  tipo_coche_estate            4831 non-null   uint8  \n",
            " 20  tipo_coche_hatchback         4831 non-null   uint8  \n",
            " 21  tipo_coche_otro_tipo         4831 non-null   uint8  \n",
            " 22  tipo_coche_sedan             4831 non-null   uint8  \n",
            " 23  tipo_coche_suv               4831 non-null   uint8  \n",
            " 24  modelo_116                   4831 non-null   uint8  \n",
            " 25  modelo_318                   4831 non-null   uint8  \n",
            " 26  modelo_320                   4831 non-null   uint8  \n",
            " 27  modelo_520                   4831 non-null   uint8  \n",
            " 28  modelo_X3                    4831 non-null   uint8  \n",
            " 29  modelo_otro_modelo           4831 non-null   uint8  \n",
            "dtypes: float64(4), int64(10), uint8(16)\n",
            "memory usage: 604.0 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ahora habría que normalizar los datos numéricos que no están entre 0 y 1 ('km' y 'potencia'), para que sí lo estén. Utilizo MinMaxScaler de Scikit-learn para esto."
      ],
      "metadata": {
        "id": "lTfWtlFnV963"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "MMscaler = MinMaxScaler()\n",
        "bmw_clean2[['km', 'potencia']] = MMscaler.fit_transform(bmw_clean2[['km', 'potencia']])"
      ],
      "metadata": {
        "id": "tBi-8rNXVb6X"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "corr2 = bmw_clean2.corr()"
      ],
      "metadata": {
        "id": "UlH19w3oN5Iy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "corr2.style.background_gradient(cmap='coolwarm')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Z3-LYVvQN5GP",
        "outputId": "485b27f6-774e-4bdd-b3a6-851604caf2a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f1c65d82650>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_b3c21_row0_col0, #T_b3c21_row1_col1, #T_b3c21_row2_col2, #T_b3c21_row3_col3, #T_b3c21_row4_col4, #T_b3c21_row5_col5, #T_b3c21_row6_col6, #T_b3c21_row7_col7, #T_b3c21_row8_col8, #T_b3c21_row9_col9, #T_b3c21_row10_col10, #T_b3c21_row11_col11, #T_b3c21_row12_col12, #T_b3c21_row13_col13, #T_b3c21_row14_col14, #T_b3c21_row15_col15, #T_b3c21_row16_col16, #T_b3c21_row17_col17, #T_b3c21_row18_col18, #T_b3c21_row19_col19, #T_b3c21_row20_col20, #T_b3c21_row21_col21, #T_b3c21_row22_col22, #T_b3c21_row23_col23, #T_b3c21_row24_col24, #T_b3c21_row25_col25, #T_b3c21_row26_col26, #T_b3c21_row27_col27, #T_b3c21_row28_col28, #T_b3c21_row29_col29 {\n",
              "  background-color: #b40426;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col1, #T_b3c21_row0_col29, #T_b3c21_row2_col20, #T_b3c21_row5_col8, #T_b3c21_row6_col18, #T_b3c21_row11_col15, #T_b3c21_row19_col1, #T_b3c21_row27_col2 {\n",
              "  background-color: #7b9ff9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col2, #T_b3c21_row1_col17, #T_b3c21_row3_col26, #T_b3c21_row5_col18, #T_b3c21_row6_col15, #T_b3c21_row8_col17, #T_b3c21_row17_col1, #T_b3c21_row18_col27 {\n",
              "  background-color: #7da0f9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col3, #T_b3c21_row1_col15, #T_b3c21_row13_col28, #T_b3c21_row14_col4, #T_b3c21_row14_col25, #T_b3c21_row21_col1, #T_b3c21_row21_col17, #T_b3c21_row26_col1, #T_b3c21_row27_col17, #T_b3c21_row29_col18 {\n",
              "  background-color: #81a4fb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col4, #T_b3c21_row2_col18, #T_b3c21_row7_col15, #T_b3c21_row8_col21, #T_b3c21_row8_col24, #T_b3c21_row28_col15 {\n",
              "  background-color: #7a9df8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col5, #T_b3c21_row3_col24, #T_b3c21_row11_col24, #T_b3c21_row11_col25, #T_b3c21_row13_col6, #T_b3c21_row13_col18, #T_b3c21_row15_col5, #T_b3c21_row17_col7, #T_b3c21_row18_col5, #T_b3c21_row23_col25, #T_b3c21_row27_col5 {\n",
              "  background-color: #5875e1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col6, #T_b3c21_row15_col17, #T_b3c21_row16_col5, #T_b3c21_row23_col27, #T_b3c21_row29_col9, #T_b3c21_row29_col19 {\n",
              "  background-color: #5977e3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col7, #T_b3c21_row13_col21, #T_b3c21_row15_col4, #T_b3c21_row15_col28, #T_b3c21_row17_col10, #T_b3c21_row23_col15, #T_b3c21_row24_col26, #T_b3c21_row26_col11, #T_b3c21_row26_col18 {\n",
              "  background-color: #7699f6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col8, #T_b3c21_row16_col18, #T_b3c21_row25_col29, #T_b3c21_row28_col9 {\n",
              "  background-color: #465ecf;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col9, #T_b3c21_row1_col26, #T_b3c21_row4_col25, #T_b3c21_row8_col18, #T_b3c21_row9_col1, #T_b3c21_row9_col26, #T_b3c21_row11_col18, #T_b3c21_row11_col27, #T_b3c21_row12_col2, #T_b3c21_row13_col23, #T_b3c21_row15_col20, #T_b3c21_row15_col25, #T_b3c21_row17_col29, #T_b3c21_row18_col1, #T_b3c21_row18_col24, #T_b3c21_row18_col25, #T_b3c21_row18_col28, #T_b3c21_row20_col15, #T_b3c21_row23_col3, #T_b3c21_row23_col16 {\n",
              "  background-color: #8caffe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col10, #T_b3c21_row6_col26, #T_b3c21_row15_col2, #T_b3c21_row15_col21, #T_b3c21_row17_col2, #T_b3c21_row17_col4, #T_b3c21_row19_col7, #T_b3c21_row21_col25, #T_b3c21_row23_col4, #T_b3c21_row28_col4 {\n",
              "  background-color: #7597f6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col11, #T_b3c21_row2_col21, #T_b3c21_row17_col8, #T_b3c21_row24_col6 {\n",
              "  background-color: #4055c8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col12, #T_b3c21_row3_col20, #T_b3c21_row6_col20, #T_b3c21_row10_col25, #T_b3c21_row11_col9, #T_b3c21_row12_col25, #T_b3c21_row17_col16, #T_b3c21_row18_col14, #T_b3c21_row23_col26, #T_b3c21_row26_col23 {\n",
              "  background-color: #5b7ae5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col13 {\n",
              "  background-color: #f7b093;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col14, #T_b3c21_row1_col14, #T_b3c21_row2_col11, #T_b3c21_row5_col6, #T_b3c21_row5_col7, #T_b3c21_row7_col19, #T_b3c21_row10_col14, #T_b3c21_row10_col27, #T_b3c21_row12_col14, #T_b3c21_row19_col16, #T_b3c21_row22_col11, #T_b3c21_row24_col21 {\n",
              "  background-color: #a3c2fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col15, #T_b3c21_row2_col10, #T_b3c21_row4_col28, #T_b3c21_row7_col18, #T_b3c21_row8_col25, #T_b3c21_row8_col27, #T_b3c21_row9_col2, #T_b3c21_row10_col17, #T_b3c21_row11_col17, #T_b3c21_row12_col17, #T_b3c21_row14_col7, #T_b3c21_row27_col15, #T_b3c21_row28_col2, #T_b3c21_row29_col17 {\n",
              "  background-color: #80a3fa;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col16, #T_b3c21_row4_col16, #T_b3c21_row6_col14, #T_b3c21_row7_col8, #T_b3c21_row8_col10, #T_b3c21_row8_col14, #T_b3c21_row11_col14, #T_b3c21_row13_col26, #T_b3c21_row16_col22, #T_b3c21_row17_col22, #T_b3c21_row22_col16, #T_b3c21_row27_col3, #T_b3c21_row29_col20 {\n",
              "  background-color: #a1c0ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col17, #T_b3c21_row4_col26, #T_b3c21_row8_col20, #T_b3c21_row8_col28, #T_b3c21_row16_col25, #T_b3c21_row18_col10, #T_b3c21_row22_col15, #T_b3c21_row25_col15, #T_b3c21_row29_col0 {\n",
              "  background-color: #88abfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col18, #T_b3c21_row2_col7, #T_b3c21_row11_col21, #T_b3c21_row11_col26, #T_b3c21_row18_col16, #T_b3c21_row20_col27, #T_b3c21_row21_col10, #T_b3c21_row24_col28, #T_b3c21_row25_col27, #T_b3c21_row26_col2, #T_b3c21_row26_col4 {\n",
              "  background-color: #688aef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col19, #T_b3c21_row9_col0, #T_b3c21_row9_col12, #T_b3c21_row16_col13, #T_b3c21_row18_col12 {\n",
              "  background-color: #c4d5f3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col20, #T_b3c21_row21_col20, #T_b3c21_row22_col18, #T_b3c21_row24_col9, #T_b3c21_row25_col9, #T_b3c21_row29_col8 {\n",
              "  background-color: #6687ed;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col21, #T_b3c21_row1_col2, #T_b3c21_row6_col21, #T_b3c21_row13_col10, #T_b3c21_row15_col8, #T_b3c21_row23_col8, #T_b3c21_row27_col21, #T_b3c21_row28_col29 {\n",
              "  background-color: #506bda;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col22, #T_b3c21_row1_col13, #T_b3c21_row3_col9, #T_b3c21_row3_col16, #T_b3c21_row13_col16, #T_b3c21_row14_col11, #T_b3c21_row18_col23, #T_b3c21_row20_col12 {\n",
              "  background-color: #a7c5fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col23, #T_b3c21_row0_col28, #T_b3c21_row5_col20, #T_b3c21_row9_col8, #T_b3c21_row12_col15 {\n",
              "  background-color: #779af7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col24, #T_b3c21_row4_col20, #T_b3c21_row9_col21, #T_b3c21_row12_col9, #T_b3c21_row12_col20, #T_b3c21_row16_col2, #T_b3c21_row17_col6, #T_b3c21_row18_col7, #T_b3c21_row19_col3, #T_b3c21_row25_col26, #T_b3c21_row27_col24 {\n",
              "  background-color: #6c8ff1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row0_col25, #T_b3c21_row12_col27, #T_b3c21_row13_col14, #T_b3c21_row18_col29, #T_b3c21_row21_col16, #T_b3c21_row29_col6, #T_b3c21_row29_col16 {\n",
              "  background-color: #9abbff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col26, #T_b3c21_row3_col6, #T_b3c21_row6_col13, #T_b3c21_row7_col14, #T_b3c21_row7_col29 {\n",
              "  background-color: #adc9fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row0_col27, #T_b3c21_row2_col23, #T_b3c21_row3_col5, #T_b3c21_row3_col22, #T_b3c21_row4_col22, #T_b3c21_row7_col13, #T_b3c21_row9_col14, #T_b3c21_row11_col5, #T_b3c21_row16_col0 {\n",
              "  background-color: #a6c4fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col0, #T_b3c21_row2_col25, #T_b3c21_row6_col0, #T_b3c21_row8_col19, #T_b3c21_row8_col22, #T_b3c21_row8_col26, #T_b3c21_row13_col25, #T_b3c21_row22_col1, #T_b3c21_row22_col25, #T_b3c21_row24_col15, #T_b3c21_row24_col16, #T_b3c21_row25_col12 {\n",
              "  background-color: #93b5fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col3, #T_b3c21_row1_col7, #T_b3c21_row2_col12, #T_b3c21_row12_col29 {\n",
              "  background-color: #cbd8ee;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col4, #T_b3c21_row3_col0, #T_b3c21_row10_col3, #T_b3c21_row20_col29, #T_b3c21_row21_col29, #T_b3c21_row27_col16, #T_b3c21_row29_col10 {\n",
              "  background-color: #afcafc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col5, #T_b3c21_row14_col13, #T_b3c21_row22_col27, #T_b3c21_row28_col13 {\n",
              "  background-color: #b9d0f9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col6 {\n",
              "  background-color: #e3d9d3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col8, #T_b3c21_row2_col27, #T_b3c21_row3_col19, #T_b3c21_row8_col0, #T_b3c21_row14_col23, #T_b3c21_row15_col11, #T_b3c21_row15_col19, #T_b3c21_row15_col24, #T_b3c21_row19_col14, #T_b3c21_row21_col14, #T_b3c21_row25_col16, #T_b3c21_row26_col12 {\n",
              "  background-color: #98b9ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col9, #T_b3c21_row4_col24, #T_b3c21_row15_col6, #T_b3c21_row15_col16, #T_b3c21_row20_col4, #T_b3c21_row20_col22, #T_b3c21_row26_col20, #T_b3c21_row27_col28 {\n",
              "  background-color: #5f7fe8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col10 {\n",
              "  background-color: #f2cbb7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col11 {\n",
              "  background-color: #f49a7b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col12 {\n",
              "  background-color: #f7af91;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col16, #T_b3c21_row4_col29, #T_b3c21_row5_col16, #T_b3c21_row7_col9, #T_b3c21_row11_col22, #T_b3c21_row15_col0, #T_b3c21_row17_col26, #T_b3c21_row20_col14, #T_b3c21_row27_col14 {\n",
              "  background-color: #9bbcff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col18, #T_b3c21_row2_col6, #T_b3c21_row6_col8, #T_b3c21_row10_col15, #T_b3c21_row14_col28, #T_b3c21_row16_col3, #T_b3c21_row16_col4, #T_b3c21_row16_col10, #T_b3c21_row16_col20, #T_b3c21_row17_col24, #T_b3c21_row20_col17, #T_b3c21_row21_col18, #T_b3c21_row22_col3, #T_b3c21_row24_col17, #T_b3c21_row24_col18, #T_b3c21_row25_col18, #T_b3c21_row28_col3, #T_b3c21_row29_col4 {\n",
              "  background-color: #7ea1fa;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col19, #T_b3c21_row3_col17, #T_b3c21_row4_col2, #T_b3c21_row9_col17, #T_b3c21_row12_col18, #T_b3c21_row16_col1, #T_b3c21_row29_col21 {\n",
              "  background-color: #8badfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col20, #T_b3c21_row2_col8, #T_b3c21_row16_col15, #T_b3c21_row16_col17 {\n",
              "  background-color: #4961d2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col21, #T_b3c21_row7_col21, #T_b3c21_row7_col25, #T_b3c21_row16_col6, #T_b3c21_row23_col24, #T_b3c21_row25_col28, #T_b3c21_row28_col19 {\n",
              "  background-color: #6282ea;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col22, #T_b3c21_row4_col0, #T_b3c21_row4_col14, #T_b3c21_row5_col4, #T_b3c21_row6_col4, #T_b3c21_row9_col22, #T_b3c21_row16_col19, #T_b3c21_row25_col22 {\n",
              "  background-color: #a2c1ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col23, #T_b3c21_row12_col6, #T_b3c21_row19_col26 {\n",
              "  background-color: #cdd9ec;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col24, #T_b3c21_row12_col0, #T_b3c21_row12_col13, #T_b3c21_row13_col2, #T_b3c21_row13_col4, #T_b3c21_row13_col8, #T_b3c21_row13_col11, #T_b3c21_row13_col12, #T_b3c21_row14_col15, #T_b3c21_row14_col16, #T_b3c21_row14_col17, #T_b3c21_row14_col18, #T_b3c21_row16_col14, #T_b3c21_row18_col9, #T_b3c21_row19_col20, #T_b3c21_row19_col21, #T_b3c21_row19_col22, #T_b3c21_row19_col23, #T_b3c21_row22_col19, #T_b3c21_row24_col1, #T_b3c21_row24_col3, #T_b3c21_row24_col5, #T_b3c21_row24_col7, #T_b3c21_row24_col10, #T_b3c21_row25_col5, #T_b3c21_row25_col6, #T_b3c21_row26_col29, #T_b3c21_row29_col25, #T_b3c21_row29_col26, #T_b3c21_row29_col27, #T_b3c21_row29_col28 {\n",
              "  background-color: #3b4cc0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col25, #T_b3c21_row19_col8, #T_b3c21_row19_col28, #T_b3c21_row22_col8, #T_b3c21_row22_col20, #T_b3c21_row25_col1 {\n",
              "  background-color: #485fd1;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row1_col27, #T_b3c21_row2_col15, #T_b3c21_row14_col10, #T_b3c21_row15_col27 {\n",
              "  background-color: #89acfd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col28, #T_b3c21_row2_col13, #T_b3c21_row2_col17, #T_b3c21_row2_col26, #T_b3c21_row6_col17, #T_b3c21_row9_col6, #T_b3c21_row10_col26, #T_b3c21_row14_col24, #T_b3c21_row18_col20, #T_b3c21_row21_col15, #T_b3c21_row22_col29, #T_b3c21_row27_col7, #T_b3c21_row28_col16 {\n",
              "  background-color: #8db0fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row1_col29 {\n",
              "  background-color: #e2dad5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col0, #T_b3c21_row2_col19, #T_b3c21_row7_col0, #T_b3c21_row8_col13, #T_b3c21_row20_col13 {\n",
              "  background-color: #aac7fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col1, #T_b3c21_row6_col27, #T_b3c21_row9_col28, #T_b3c21_row14_col2, #T_b3c21_row14_col9, #T_b3c21_row16_col21, #T_b3c21_row19_col9, #T_b3c21_row21_col28, #T_b3c21_row24_col2, #T_b3c21_row28_col22, #T_b3c21_row28_col25 {\n",
              "  background-color: #6b8df0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row2_col3, #T_b3c21_row3_col25, #T_b3c21_row7_col2, #T_b3c21_row13_col20, #T_b3c21_row21_col23, #T_b3c21_row24_col27 {\n",
              "  background-color: #7093f3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row2_col4, #T_b3c21_row4_col23, #T_b3c21_row9_col24, #T_b3c21_row9_col25, #T_b3c21_row9_col29, #T_b3c21_row10_col13, #T_b3c21_row11_col8, #T_b3c21_row17_col25, #T_b3c21_row18_col19, #T_b3c21_row22_col17, #T_b3c21_row23_col17, #T_b3c21_row25_col14, #T_b3c21_row29_col22 {\n",
              "  background-color: #92b4fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col5, #T_b3c21_row10_col21, #T_b3c21_row15_col18, #T_b3c21_row17_col15, #T_b3c21_row20_col8, #T_b3c21_row26_col3 {\n",
              "  background-color: #5470de;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row2_col9, #T_b3c21_row5_col2, #T_b3c21_row5_col24, #T_b3c21_row9_col10, #T_b3c21_row12_col26, #T_b3c21_row19_col11, #T_b3c21_row22_col7, #T_b3c21_row24_col23, #T_b3c21_row24_col25, #T_b3c21_row25_col24, #T_b3c21_row28_col7, #T_b3c21_row28_col27 {\n",
              "  background-color: #6e90f2;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row2_col14, #T_b3c21_row6_col5, #T_b3c21_row7_col5, #T_b3c21_row8_col3, #T_b3c21_row8_col6, #T_b3c21_row8_col23, #T_b3c21_row10_col0, #T_b3c21_row10_col5, #T_b3c21_row10_col28, #T_b3c21_row14_col22, #T_b3c21_row17_col19, #T_b3c21_row19_col12, #T_b3c21_row26_col16, #T_b3c21_row28_col1, #T_b3c21_row28_col10 {\n",
              "  background-color: #96b7ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col16, #T_b3c21_row5_col22, #T_b3c21_row7_col16, #T_b3c21_row10_col16, #T_b3c21_row11_col16, #T_b3c21_row11_col28, #T_b3c21_row12_col16, #T_b3c21_row14_col19, #T_b3c21_row14_col26, #T_b3c21_row14_col29, #T_b3c21_row17_col11, #T_b3c21_row22_col14, #T_b3c21_row27_col10, #T_b3c21_row28_col0, #T_b3c21_row28_col14 {\n",
              "  background-color: #97b8ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col22, #T_b3c21_row3_col28, #T_b3c21_row8_col16, #T_b3c21_row12_col8, #T_b3c21_row16_col26, #T_b3c21_row23_col18, #T_b3c21_row25_col17, #T_b3c21_row26_col17 {\n",
              "  background-color: #90b2fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col24, #T_b3c21_row4_col5, #T_b3c21_row5_col15, #T_b3c21_row6_col2, #T_b3c21_row7_col28, #T_b3c21_row13_col24, #T_b3c21_row14_col20, #T_b3c21_row15_col1, #T_b3c21_row17_col27, #T_b3c21_row18_col22, #T_b3c21_row20_col18, #T_b3c21_row23_col2, #T_b3c21_row24_col0, #T_b3c21_row26_col15, #T_b3c21_row27_col1, #T_b3c21_row29_col7, #T_b3c21_row29_col15 {\n",
              "  background-color: #85a8fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row2_col28, #T_b3c21_row5_col19, #T_b3c21_row5_col27, #T_b3c21_row14_col27, #T_b3c21_row18_col0, #T_b3c21_row18_col26 {\n",
              "  background-color: #8fb1fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row2_col29, #T_b3c21_row3_col15, #T_b3c21_row4_col13, #T_b3c21_row4_col17, #T_b3c21_row5_col28, #T_b3c21_row8_col15, #T_b3c21_row9_col15, #T_b3c21_row9_col20, #T_b3c21_row13_col15, #T_b3c21_row15_col23, #T_b3c21_row16_col23, #T_b3c21_row19_col17, #T_b3c21_row21_col0, #T_b3c21_row21_col26, #T_b3c21_row22_col4, #T_b3c21_row22_col10, #T_b3c21_row28_col18, #T_b3c21_row29_col3, #T_b3c21_row29_col5 {\n",
              "  background-color: #86a9fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row3_col1, #T_b3c21_row3_col11, #T_b3c21_row9_col4, #T_b3c21_row25_col19 {\n",
              "  background-color: #dadce0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col2, #T_b3c21_row10_col8, #T_b3c21_row11_col2, #T_b3c21_row13_col1, #T_b3c21_row13_col9, #T_b3c21_row14_col3, #T_b3c21_row16_col28, #T_b3c21_row19_col18, #T_b3c21_row21_col22, #T_b3c21_row21_col27 {\n",
              "  background-color: #7396f5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row3_col4, #T_b3c21_row4_col9, #T_b3c21_row28_col12 {\n",
              "  background-color: #ccd9ed;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col7, #T_b3c21_row3_col27, #T_b3c21_row5_col29, #T_b3c21_row10_col23 {\n",
              "  background-color: #bbd1f8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col8, #T_b3c21_row4_col8, #T_b3c21_row6_col22, #T_b3c21_row7_col17, #T_b3c21_row9_col23, #T_b3c21_row15_col10, #T_b3c21_row17_col20, #T_b3c21_row23_col5, #T_b3c21_row25_col2, #T_b3c21_row25_col4, #T_b3c21_row26_col10 {\n",
              "  background-color: #799cf8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row3_col10, #T_b3c21_row4_col7, #T_b3c21_row4_col10, #T_b3c21_row11_col3, #T_b3c21_row11_col4 {\n",
              "  background-color: #bcd2f7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col12 {\n",
              "  background-color: #e5d8d1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col13, #T_b3c21_row9_col13 {\n",
              "  background-color: #c7d7f0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col14, #T_b3c21_row5_col0, #T_b3c21_row9_col11, #T_b3c21_row9_col16, #T_b3c21_row10_col22, #T_b3c21_row12_col22, #T_b3c21_row27_col4, #T_b3c21_row27_col11 {\n",
              "  background-color: #9fbfff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col18, #T_b3c21_row7_col24, #T_b3c21_row12_col24, #T_b3c21_row13_col5, #T_b3c21_row20_col23, #T_b3c21_row25_col20, #T_b3c21_row26_col21, #T_b3c21_row26_col28, #T_b3c21_row28_col5 {\n",
              "  background-color: #5d7ce6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row3_col21, #T_b3c21_row6_col25, #T_b3c21_row15_col7, #T_b3c21_row15_col9, #T_b3c21_row17_col9, #T_b3c21_row18_col15, #T_b3c21_row20_col28, #T_b3c21_row21_col7, #T_b3c21_row21_col8, #T_b3c21_row21_col9, #T_b3c21_row27_col20 {\n",
              "  background-color: #5e7de7;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row3_col23, #T_b3c21_row7_col27, #T_b3c21_row13_col22, #T_b3c21_row15_col12, #T_b3c21_row18_col11, #T_b3c21_row22_col0, #T_b3c21_row22_col26, #T_b3c21_row25_col0 {\n",
              "  background-color: #aec9fc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row3_col29, #T_b3c21_row8_col29, #T_b3c21_row14_col0 {\n",
              "  background-color: #a9c6fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col1, #T_b3c21_row5_col13, #T_b3c21_row19_col27, #T_b3c21_row22_col12, #T_b3c21_row23_col29, #T_b3c21_row27_col13, #T_b3c21_row29_col23 {\n",
              "  background-color: #bed2f6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col3, #T_b3c21_row7_col4, #T_b3c21_row23_col1 {\n",
              "  background-color: #c6d6f1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col6, #T_b3c21_row6_col16, #T_b3c21_row7_col26, #T_b3c21_row12_col5, #T_b3c21_row13_col17, #T_b3c21_row13_col19, #T_b3c21_row13_col27, #T_b3c21_row14_col1, #T_b3c21_row15_col26, #T_b3c21_row15_col29, #T_b3c21_row16_col29, #T_b3c21_row17_col28, #T_b3c21_row19_col4, #T_b3c21_row20_col16, #T_b3c21_row24_col12 {\n",
              "  background-color: #94b6ff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col11, #T_b3c21_row5_col1 {\n",
              "  background-color: #d7dce3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col12, #T_b3c21_row6_col11 {\n",
              "  background-color: #f1cdba;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col15, #T_b3c21_row6_col9, #T_b3c21_row8_col5, #T_b3c21_row8_col9, #T_b3c21_row10_col18, #T_b3c21_row13_col3, #T_b3c21_row13_col29, #T_b3c21_row19_col2, #T_b3c21_row19_col10, #T_b3c21_row19_col15, #T_b3c21_row20_col0, #T_b3c21_row20_col11, #T_b3c21_row23_col0 {\n",
              "  background-color: #84a7fc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row4_col18, #T_b3c21_row18_col6, #T_b3c21_row20_col2, #T_b3c21_row22_col2, #T_b3c21_row22_col9, #T_b3c21_row24_col19, #T_b3c21_row26_col7 {\n",
              "  background-color: #6788ee;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row4_col19, #T_b3c21_row4_col27, #T_b3c21_row6_col3, #T_b3c21_row7_col6, #T_b3c21_row23_col13, #T_b3c21_row26_col22 {\n",
              "  background-color: #b2ccfb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row4_col21, #T_b3c21_row22_col21, #T_b3c21_row27_col6 {\n",
              "  background-color: #4358cb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row5_col3, #T_b3c21_row5_col10, #T_b3c21_row12_col3, #T_b3c21_row16_col12 {\n",
              "  background-color: #b7cff9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row5_col9, #T_b3c21_row5_col25, #T_b3c21_row10_col2, #T_b3c21_row12_col19, #T_b3c21_row14_col6, #T_b3c21_row15_col3, #T_b3c21_row17_col3, #T_b3c21_row18_col2, #T_b3c21_row18_col21, #T_b3c21_row27_col9 {\n",
              "  background-color: #6f92f3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row5_col11 {\n",
              "  background-color: #d8dce2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row5_col12, #T_b3c21_row29_col1 {\n",
              "  background-color: #dddcdc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row5_col14, #T_b3c21_row7_col23, #T_b3c21_row10_col19, #T_b3c21_row12_col28, #T_b3c21_row15_col22, #T_b3c21_row16_col11, #T_b3c21_row17_col23, #T_b3c21_row18_col13, #T_b3c21_row24_col14, #T_b3c21_row26_col14, #T_b3c21_row28_col17, #T_b3c21_row29_col14 {\n",
              "  background-color: #9dbdff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row5_col17, #T_b3c21_row5_col26, #T_b3c21_row16_col24 {\n",
              "  background-color: #82a6fb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row5_col21, #T_b3c21_row12_col21, #T_b3c21_row18_col8, #T_b3c21_row18_col17, #T_b3c21_row20_col9, #T_b3c21_row21_col3, #T_b3c21_row22_col24, #T_b3c21_row26_col25, #T_b3c21_row27_col23, #T_b3c21_row28_col20, #T_b3c21_row29_col2 {\n",
              "  background-color: #6180e9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row5_col23, #T_b3c21_row17_col12, #T_b3c21_row21_col12 {\n",
              "  background-color: #b1cbfc;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col1 {\n",
              "  background-color: #efcfbf;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col7, #T_b3c21_row28_col11 {\n",
              "  background-color: #b3cdfb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col10, #T_b3c21_row22_col13 {\n",
              "  background-color: #cad8ef;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col12 {\n",
              "  background-color: #f1ccb8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col19, #T_b3c21_row20_col26, #T_b3c21_row23_col7, #T_b3c21_row24_col11, #T_b3c21_row24_col22, #T_b3c21_row25_col11, #T_b3c21_row28_col24, #T_b3c21_row28_col26 {\n",
              "  background-color: #7295f4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row6_col23 {\n",
              "  background-color: #f5c2aa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col24, #T_b3c21_row11_col19, #T_b3c21_row11_col20, #T_b3c21_row16_col7, #T_b3c21_row27_col25 {\n",
              "  background-color: #6485ec;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row6_col28, #T_b3c21_row7_col10 {\n",
              "  background-color: #d6dce4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row6_col29, #T_b3c21_row7_col3, #T_b3c21_row25_col13 {\n",
              "  background-color: #bfd3f6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row7_col1, #T_b3c21_row11_col6 {\n",
              "  background-color: #dcdddd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row7_col11 {\n",
              "  background-color: #d9dce1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row7_col12 {\n",
              "  background-color: #eed0c0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row7_col20, #T_b3c21_row8_col2, #T_b3c21_row9_col5, #T_b3c21_row14_col21, #T_b3c21_row21_col19, #T_b3c21_row26_col24, #T_b3c21_row27_col18, #T_b3c21_row27_col26 {\n",
              "  background-color: #6a8bef;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row7_col22, #T_b3c21_row8_col4, #T_b3c21_row9_col27, #T_b3c21_row17_col0, #T_b3c21_row21_col11, #T_b3c21_row23_col14 {\n",
              "  background-color: #9ebeff;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row8_col1, #T_b3c21_row12_col7, #T_b3c21_row27_col19 {\n",
              "  background-color: #c5d6f2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row8_col7, #T_b3c21_row9_col3 {\n",
              "  background-color: #b5cdfa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row8_col11, #T_b3c21_row26_col19 {\n",
              "  background-color: #cfdaea;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row8_col12, #T_b3c21_row11_col23 {\n",
              "  background-color: #dedcdb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row9_col7, #T_b3c21_row9_col19, #T_b3c21_row16_col27 {\n",
              "  background-color: #a5c3fe;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row9_col18, #T_b3c21_row11_col13, #T_b3c21_row14_col5 {\n",
              "  background-color: #5a78e4;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row10_col1 {\n",
              "  background-color: #f3c8b2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col4, #T_b3c21_row11_col7, #T_b3c21_row19_col13, #T_b3c21_row24_col13, #T_b3c21_row26_col0, #T_b3c21_row27_col0 {\n",
              "  background-color: #b6cefa;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col6, #T_b3c21_row15_col13, #T_b3c21_row21_col24 {\n",
              "  background-color: #bad0f8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col7, #T_b3c21_row19_col0, #T_b3c21_row28_col6 {\n",
              "  background-color: #c9d7f0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col9, #T_b3c21_row20_col5, #T_b3c21_row22_col23, #T_b3c21_row29_col24 {\n",
              "  background-color: #4a63d3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row10_col11, #T_b3c21_row20_col24 {\n",
              "  background-color: #f3c7b1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col12 {\n",
              "  background-color: #f5c1a9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row10_col20, #T_b3c21_row14_col8, #T_b3c21_row19_col24, #T_b3c21_row24_col29, #T_b3c21_row28_col8, #T_b3c21_row28_col21 {\n",
              "  background-color: #5673e0;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row10_col24, #T_b3c21_row16_col8, #T_b3c21_row21_col2, #T_b3c21_row22_col6, #T_b3c21_row25_col8, #T_b3c21_row26_col5 {\n",
              "  background-color: #445acc;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row10_col29, #T_b3c21_row14_col12, #T_b3c21_row21_col13 {\n",
              "  background-color: #c0d4f5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row11_col0, #T_b3c21_row23_col19, #T_b3c21_row25_col7, #T_b3c21_row27_col8 {\n",
              "  background-color: #3f53c6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row11_col1 {\n",
              "  background-color: #f6a385;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row11_col10 {\n",
              "  background-color: #ebd3c6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row11_col12 {\n",
              "  background-color: #dc5d4a;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row11_col29 {\n",
              "  background-color: #dbdcde;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row12_col1 {\n",
              "  background-color: #f4c5ad;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row12_col4 {\n",
              "  background-color: #d4dbe6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row12_col10, #T_b3c21_row23_col12 {\n",
              "  background-color: #e6d7cf;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row12_col11 {\n",
              "  background-color: #e0654f;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row12_col23 {\n",
              "  background-color: #d1dae9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row13_col0 {\n",
              "  background-color: #f7bca1;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row13_col7, #T_b3c21_row17_col5, #T_b3c21_row18_col3, #T_b3c21_row20_col1, #T_b3c21_row21_col4, #T_b3c21_row23_col22 {\n",
              "  background-color: #4f69d9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row15_col14, #T_b3c21_row17_col18, #T_b3c21_row20_col19, #T_b3c21_row22_col28, #T_b3c21_row25_col10 {\n",
              "  background-color: #516ddb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row16_col9, #T_b3c21_row17_col21, #T_b3c21_row18_col4, #T_b3c21_row20_col25, #T_b3c21_row25_col23, #T_b3c21_row26_col27 {\n",
              "  background-color: #6384eb;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row17_col13, #T_b3c21_row27_col22 {\n",
              "  background-color: #c1d4f4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row17_col14, #T_b3c21_row19_col5, #T_b3c21_row21_col5, #T_b3c21_row21_col6, #T_b3c21_row26_col8 {\n",
              "  background-color: #4c66d6;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row19_col6 {\n",
              "  background-color: #3d50c3;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row19_col25 {\n",
              "  background-color: #d2dbe8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row19_col29, #T_b3c21_row22_col5, #T_b3c21_row25_col21 {\n",
              "  background-color: #5572df;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row20_col3, #T_b3c21_row23_col21, #T_b3c21_row26_col6 {\n",
              "  background-color: #455cce;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row20_col6, #T_b3c21_row23_col9, #T_b3c21_row24_col8 {\n",
              "  background-color: #3e51c5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row20_col7, #T_b3c21_row20_col21 {\n",
              "  background-color: #4e68d8;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row20_col10, #T_b3c21_row25_col3, #T_b3c21_row26_col9 {\n",
              "  background-color: #536edd;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row23_col6 {\n",
              "  background-color: #ecd3c5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row23_col10, #T_b3c21_row29_col13 {\n",
              "  background-color: #abc8fd;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row23_col11 {\n",
              "  background-color: #e4d9d2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row23_col20, #T_b3c21_row24_col4 {\n",
              "  background-color: #4b64d5;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row23_col28 {\n",
              "  background-color: #f7b497;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row24_col20 {\n",
              "  background-color: #f2c9b4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row26_col13, #T_b3c21_row27_col12 {\n",
              "  background-color: #c3d5f4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row27_col29 {\n",
              "  background-color: #4257c9;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_b3c21_row28_col23 {\n",
              "  background-color: #f7ac8e;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_b3c21_row29_col11, #T_b3c21_row29_col12 {\n",
              "  background-color: #e1dad6;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_b3c21\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_b3c21_level0_col0\" class=\"col_heading level0 col0\" >km</th>\n",
              "      <th id=\"T_b3c21_level0_col1\" class=\"col_heading level0 col1\" >potencia</th>\n",
              "      <th id=\"T_b3c21_level0_col2\" class=\"col_heading level0 col2\" >gas_diesel</th>\n",
              "      <th id=\"T_b3c21_level0_col3\" class=\"col_heading level0 col3\" >volante_regulable</th>\n",
              "      <th id=\"T_b3c21_level0_col4\" class=\"col_heading level0 col4\" >aire_acondicionado</th>\n",
              "      <th id=\"T_b3c21_level0_col5\" class=\"col_heading level0 col5\" >camara_trasera</th>\n",
              "      <th id=\"T_b3c21_level0_col6\" class=\"col_heading level0 col6\" >asientos_traseros_plegables</th>\n",
              "      <th id=\"T_b3c21_level0_col7\" class=\"col_heading level0 col7\" >elevalunas_electrico</th>\n",
              "      <th id=\"T_b3c21_level0_col8\" class=\"col_heading level0 col8\" >bluetooth</th>\n",
              "      <th id=\"T_b3c21_level0_col9\" class=\"col_heading level0 col9\" >gps</th>\n",
              "      <th id=\"T_b3c21_level0_col10\" class=\"col_heading level0 col10\" >alerta_lim_velocidad</th>\n",
              "      <th id=\"T_b3c21_level0_col11\" class=\"col_heading level0 col11\" >precio</th>\n",
              "      <th id=\"T_b3c21_level0_col12\" class=\"col_heading level0 col12\" >log_precio</th>\n",
              "      <th id=\"T_b3c21_level0_col13\" class=\"col_heading level0 col13\" >antiguedad_años</th>\n",
              "      <th id=\"T_b3c21_level0_col14\" class=\"col_heading level0 col14\" >color_black</th>\n",
              "      <th id=\"T_b3c21_level0_col15\" class=\"col_heading level0 col15\" >color_blue</th>\n",
              "      <th id=\"T_b3c21_level0_col16\" class=\"col_heading level0 col16\" >color_grey</th>\n",
              "      <th id=\"T_b3c21_level0_col17\" class=\"col_heading level0 col17\" >color_otro_color</th>\n",
              "      <th id=\"T_b3c21_level0_col18\" class=\"col_heading level0 col18\" >color_white</th>\n",
              "      <th id=\"T_b3c21_level0_col19\" class=\"col_heading level0 col19\" >tipo_coche_estate</th>\n",
              "      <th id=\"T_b3c21_level0_col20\" class=\"col_heading level0 col20\" >tipo_coche_hatchback</th>\n",
              "      <th id=\"T_b3c21_level0_col21\" class=\"col_heading level0 col21\" >tipo_coche_otro_tipo</th>\n",
              "      <th id=\"T_b3c21_level0_col22\" class=\"col_heading level0 col22\" >tipo_coche_sedan</th>\n",
              "      <th id=\"T_b3c21_level0_col23\" class=\"col_heading level0 col23\" >tipo_coche_suv</th>\n",
              "      <th id=\"T_b3c21_level0_col24\" class=\"col_heading level0 col24\" >modelo_116</th>\n",
              "      <th id=\"T_b3c21_level0_col25\" class=\"col_heading level0 col25\" >modelo_318</th>\n",
              "      <th id=\"T_b3c21_level0_col26\" class=\"col_heading level0 col26\" >modelo_320</th>\n",
              "      <th id=\"T_b3c21_level0_col27\" class=\"col_heading level0 col27\" >modelo_520</th>\n",
              "      <th id=\"T_b3c21_level0_col28\" class=\"col_heading level0 col28\" >modelo_X3</th>\n",
              "      <th id=\"T_b3c21_level0_col29\" class=\"col_heading level0 col29\" >modelo_otro_modelo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row0\" class=\"row_heading level0 row0\" >km</th>\n",
              "      <td id=\"T_b3c21_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row0_col1\" class=\"data row0 col1\" >-0.050307</td>\n",
              "      <td id=\"T_b3c21_row0_col2\" class=\"data row0 col2\" >0.047381</td>\n",
              "      <td id=\"T_b3c21_row0_col3\" class=\"data row0 col3\" >0.066859</td>\n",
              "      <td id=\"T_b3c21_row0_col4\" class=\"data row0 col4\" >0.009822</td>\n",
              "      <td id=\"T_b3c21_row0_col5\" class=\"data row0 col5\" >0.002320</td>\n",
              "      <td id=\"T_b3c21_row0_col6\" class=\"data row0 col6\" >-0.052414</td>\n",
              "      <td id=\"T_b3c21_row0_col7\" class=\"data row0 col7\" >0.046692</td>\n",
              "      <td id=\"T_b3c21_row0_col8\" class=\"data row0 col8\" >-0.029341</td>\n",
              "      <td id=\"T_b3c21_row0_col9\" class=\"data row0 col9\" >0.154783</td>\n",
              "      <td id=\"T_b3c21_row0_col10\" class=\"data row0 col10\" >-0.041193</td>\n",
              "      <td id=\"T_b3c21_row0_col11\" class=\"data row0 col11\" >-0.409663</td>\n",
              "      <td id=\"T_b3c21_row0_col12\" class=\"data row0 col12\" >-0.434255</td>\n",
              "      <td id=\"T_b3c21_row0_col13\" class=\"data row0 col13\" >0.503982</td>\n",
              "      <td id=\"T_b3c21_row0_col14\" class=\"data row0 col14\" >0.038626</td>\n",
              "      <td id=\"T_b3c21_row0_col15\" class=\"data row0 col15\" >-0.016510</td>\n",
              "      <td id=\"T_b3c21_row0_col16\" class=\"data row0 col16\" >0.026338</td>\n",
              "      <td id=\"T_b3c21_row0_col17\" class=\"data row0 col17\" >-0.007139</td>\n",
              "      <td id=\"T_b3c21_row0_col18\" class=\"data row0 col18\" >-0.067085</td>\n",
              "      <td id=\"T_b3c21_row0_col19\" class=\"data row0 col19\" >0.178331</td>\n",
              "      <td id=\"T_b3c21_row0_col20\" class=\"data row0 col20\" >-0.111280</td>\n",
              "      <td id=\"T_b3c21_row0_col21\" class=\"data row0 col21\" >-0.098125</td>\n",
              "      <td id=\"T_b3c21_row0_col22\" class=\"data row0 col22\" >0.060867</td>\n",
              "      <td id=\"T_b3c21_row0_col23\" class=\"data row0 col23\" >-0.112754</td>\n",
              "      <td id=\"T_b3c21_row0_col24\" class=\"data row0 col24\" >-0.107985</td>\n",
              "      <td id=\"T_b3c21_row0_col25\" class=\"data row0 col25\" >0.060903</td>\n",
              "      <td id=\"T_b3c21_row0_col26\" class=\"data row0 col26\" >0.097610</td>\n",
              "      <td id=\"T_b3c21_row0_col27\" class=\"data row0 col27\" >0.093736</td>\n",
              "      <td id=\"T_b3c21_row0_col28\" class=\"data row0 col28\" >-0.034629</td>\n",
              "      <td id=\"T_b3c21_row0_col29\" class=\"data row0 col29\" >-0.097446</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row1\" class=\"row_heading level0 row1\" >potencia</th>\n",
              "      <td id=\"T_b3c21_row1_col0\" class=\"data row1 col0\" >-0.050307</td>\n",
              "      <td id=\"T_b3c21_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row1_col2\" class=\"data row1 col2\" >-0.116195</td>\n",
              "      <td id=\"T_b3c21_row1_col3\" class=\"data row1 col3\" >0.328229</td>\n",
              "      <td id=\"T_b3c21_row1_col4\" class=\"data row1 col4\" >0.200201</td>\n",
              "      <td id=\"T_b3c21_row1_col5\" class=\"data row1 col5\" >0.313797</td>\n",
              "      <td id=\"T_b3c21_row1_col6\" class=\"data row1 col6\" >0.448041</td>\n",
              "      <td id=\"T_b3c21_row1_col7\" class=\"data row1 col7\" >0.340025</td>\n",
              "      <td id=\"T_b3c21_row1_col8\" class=\"data row1 col8\" >0.232297</td>\n",
              "      <td id=\"T_b3c21_row1_col9\" class=\"data row1 col9\" >0.008995</td>\n",
              "      <td id=\"T_b3c21_row1_col10\" class=\"data row1 col10\" >0.488737</td>\n",
              "      <td id=\"T_b3c21_row1_col11\" class=\"data row1 col11\" >0.639379</td>\n",
              "      <td id=\"T_b3c21_row1_col12\" class=\"data row1 col12\" >0.504766</td>\n",
              "      <td id=\"T_b3c21_row1_col13\" class=\"data row1 col13\" >-0.084304</td>\n",
              "      <td id=\"T_b3c21_row1_col14\" class=\"data row1 col14\" >0.037987</td>\n",
              "      <td id=\"T_b3c21_row1_col15\" class=\"data row1 col15\" >-0.015877</td>\n",
              "      <td id=\"T_b3c21_row1_col16\" class=\"data row1 col16\" >0.005025</td>\n",
              "      <td id=\"T_b3c21_row1_col17\" class=\"data row1 col17\" >-0.045551</td>\n",
              "      <td id=\"T_b3c21_row1_col18\" class=\"data row1 col18\" >0.007583</td>\n",
              "      <td id=\"T_b3c21_row1_col19\" class=\"data row1 col19\" >-0.053156</td>\n",
              "      <td id=\"T_b3c21_row1_col20\" class=\"data row1 col20\" >-0.225185</td>\n",
              "      <td id=\"T_b3c21_row1_col21\" class=\"data row1 col21\" >-0.033088</td>\n",
              "      <td id=\"T_b3c21_row1_col22\" class=\"data row1 col22\" >0.034830</td>\n",
              "      <td id=\"T_b3c21_row1_col23\" class=\"data row1 col23\" >0.235715</td>\n",
              "      <td id=\"T_b3c21_row1_col24\" class=\"data row1 col24\" >-0.317291</td>\n",
              "      <td id=\"T_b3c21_row1_col25\" class=\"data row1 col25\" >-0.259479</td>\n",
              "      <td id=\"T_b3c21_row1_col26\" class=\"data row1 col26\" >-0.031801</td>\n",
              "      <td id=\"T_b3c21_row1_col27\" class=\"data row1 col27\" >-0.014510</td>\n",
              "      <td id=\"T_b3c21_row1_col28\" class=\"data row1 col28\" >0.045235</td>\n",
              "      <td id=\"T_b3c21_row1_col29\" class=\"data row1 col29\" >0.343091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row2\" class=\"row_heading level0 row2\" >gas_diesel</th>\n",
              "      <td id=\"T_b3c21_row2_col0\" class=\"data row2 col0\" >0.047381</td>\n",
              "      <td id=\"T_b3c21_row2_col1\" class=\"data row2 col1\" >-0.116195</td>\n",
              "      <td id=\"T_b3c21_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row2_col3\" class=\"data row2 col3\" >0.010049</td>\n",
              "      <td id=\"T_b3c21_row2_col4\" class=\"data row2 col4\" >0.093727</td>\n",
              "      <td id=\"T_b3c21_row2_col5\" class=\"data row2 col5\" >-0.008432</td>\n",
              "      <td id=\"T_b3c21_row2_col6\" class=\"data row2 col6\" >0.074789</td>\n",
              "      <td id=\"T_b3c21_row2_col7\" class=\"data row2 col7\" >0.002655</td>\n",
              "      <td id=\"T_b3c21_row2_col8\" class=\"data row2 col8\" >-0.021482</td>\n",
              "      <td id=\"T_b3c21_row2_col9\" class=\"data row2 col9\" >0.056409</td>\n",
              "      <td id=\"T_b3c21_row2_col10\" class=\"data row2 col10\" >-0.002040</td>\n",
              "      <td id=\"T_b3c21_row2_col11\" class=\"data row2 col11\" >0.013146</td>\n",
              "      <td id=\"T_b3c21_row2_col12\" class=\"data row2 col12\" >0.095392</td>\n",
              "      <td id=\"T_b3c21_row2_col13\" class=\"data row2 col13\" >-0.201081</td>\n",
              "      <td id=\"T_b3c21_row2_col14\" class=\"data row2 col14\" >-0.015757</td>\n",
              "      <td id=\"T_b3c21_row2_col15\" class=\"data row2 col15\" >0.017746</td>\n",
              "      <td id=\"T_b3c21_row2_col16\" class=\"data row2 col16\" >-0.009227</td>\n",
              "      <td id=\"T_b3c21_row2_col17\" class=\"data row2 col17\" >0.016717</td>\n",
              "      <td id=\"T_b3c21_row2_col18\" class=\"data row2 col18\" >-0.003363</td>\n",
              "      <td id=\"T_b3c21_row2_col19\" class=\"data row2 col19\" >0.070297</td>\n",
              "      <td id=\"T_b3c21_row2_col20\" class=\"data row2 col20\" >-0.029198</td>\n",
              "      <td id=\"T_b3c21_row2_col21\" class=\"data row2 col21\" >-0.160234</td>\n",
              "      <td id=\"T_b3c21_row2_col22\" class=\"data row2 col22\" >-0.031034</td>\n",
              "      <td id=\"T_b3c21_row2_col23\" class=\"data row2 col23\" >0.072416</td>\n",
              "      <td id=\"T_b3c21_row2_col24\" class=\"data row2 col24\" >-0.014283</td>\n",
              "      <td id=\"T_b3c21_row2_col25\" class=\"data row2 col25\" >0.032583</td>\n",
              "      <td id=\"T_b3c21_row2_col26\" class=\"data row2 col26\" >-0.025287</td>\n",
              "      <td id=\"T_b3c21_row2_col27\" class=\"data row2 col27\" >0.039648</td>\n",
              "      <td id=\"T_b3c21_row2_col28\" class=\"data row2 col28\" >0.052569</td>\n",
              "      <td id=\"T_b3c21_row2_col29\" class=\"data row2 col29\" >-0.052591</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row3\" class=\"row_heading level0 row3\" >volante_regulable</th>\n",
              "      <td id=\"T_b3c21_row3_col0\" class=\"data row3 col0\" >0.066859</td>\n",
              "      <td id=\"T_b3c21_row3_col1\" class=\"data row3 col1\" >0.328229</td>\n",
              "      <td id=\"T_b3c21_row3_col2\" class=\"data row3 col2\" >0.010049</td>\n",
              "      <td id=\"T_b3c21_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row3_col4\" class=\"data row3 col4\" >0.307277</td>\n",
              "      <td id=\"T_b3c21_row3_col5\" class=\"data row3 col5\" >0.253836</td>\n",
              "      <td id=\"T_b3c21_row3_col6\" class=\"data row3 col6\" >0.231009</td>\n",
              "      <td id=\"T_b3c21_row3_col7\" class=\"data row3 col7\" >0.278297</td>\n",
              "      <td id=\"T_b3c21_row3_col8\" class=\"data row3 col8\" >0.134074</td>\n",
              "      <td id=\"T_b3c21_row3_col9\" class=\"data row3 col9\" >0.244475</td>\n",
              "      <td id=\"T_b3c21_row3_col10\" class=\"data row3 col10\" >0.224440</td>\n",
              "      <td id=\"T_b3c21_row3_col11\" class=\"data row3 col11\" >0.268538</td>\n",
              "      <td id=\"T_b3c21_row3_col12\" class=\"data row3 col12\" >0.250470</td>\n",
              "      <td id=\"T_b3c21_row3_col13\" class=\"data row3 col13\" >0.076686</td>\n",
              "      <td id=\"T_b3c21_row3_col14\" class=\"data row3 col14\" >0.019220</td>\n",
              "      <td id=\"T_b3c21_row3_col15\" class=\"data row3 col15\" >0.006150</td>\n",
              "      <td id=\"T_b3c21_row3_col16\" class=\"data row3 col16\" >0.053682</td>\n",
              "      <td id=\"T_b3c21_row3_col17\" class=\"data row3 col17\" >0.002911</td>\n",
              "      <td id=\"T_b3c21_row3_col18\" class=\"data row3 col18\" >-0.112487</td>\n",
              "      <td id=\"T_b3c21_row3_col19\" class=\"data row3 col19\" >-0.003153</td>\n",
              "      <td id=\"T_b3c21_row3_col20\" class=\"data row3 col20\" >-0.150910</td>\n",
              "      <td id=\"T_b3c21_row3_col21\" class=\"data row3 col21\" >-0.047688</td>\n",
              "      <td id=\"T_b3c21_row3_col22\" class=\"data row3 col22\" >0.055333</td>\n",
              "      <td id=\"T_b3c21_row3_col23\" class=\"data row3 col23\" >0.103103</td>\n",
              "      <td id=\"T_b3c21_row3_col24\" class=\"data row3 col24\" >-0.193751</td>\n",
              "      <td id=\"T_b3c21_row3_col25\" class=\"data row3 col25\" >-0.096272</td>\n",
              "      <td id=\"T_b3c21_row3_col26\" class=\"data row3 col26\" >-0.092649</td>\n",
              "      <td id=\"T_b3c21_row3_col27\" class=\"data row3 col27\" >0.174327</td>\n",
              "      <td id=\"T_b3c21_row3_col28\" class=\"data row3 col28\" >0.055088</td>\n",
              "      <td id=\"T_b3c21_row3_col29\" class=\"data row3 col29\" >0.082007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row4\" class=\"row_heading level0 row4\" >aire_acondicionado</th>\n",
              "      <td id=\"T_b3c21_row4_col0\" class=\"data row4 col0\" >0.009822</td>\n",
              "      <td id=\"T_b3c21_row4_col1\" class=\"data row4 col1\" >0.200201</td>\n",
              "      <td id=\"T_b3c21_row4_col2\" class=\"data row4 col2\" >0.093727</td>\n",
              "      <td id=\"T_b3c21_row4_col3\" class=\"data row4 col3\" >0.307277</td>\n",
              "      <td id=\"T_b3c21_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row4_col5\" class=\"data row4 col5\" >0.150842</td>\n",
              "      <td id=\"T_b3c21_row4_col6\" class=\"data row4 col6\" >0.149853</td>\n",
              "      <td id=\"T_b3c21_row4_col7\" class=\"data row4 col7\" >0.284307</td>\n",
              "      <td id=\"T_b3c21_row4_col8\" class=\"data row4 col8\" >0.135554</td>\n",
              "      <td id=\"T_b3c21_row4_col9\" class=\"data row4 col9\" >0.370928</td>\n",
              "      <td id=\"T_b3c21_row4_col10\" class=\"data row4 col10\" >0.223604</td>\n",
              "      <td id=\"T_b3c21_row4_col11\" class=\"data row4 col11\" >0.246620</td>\n",
              "      <td id=\"T_b3c21_row4_col12\" class=\"data row4 col12\" >0.341317</td>\n",
              "      <td id=\"T_b3c21_row4_col13\" class=\"data row4 col13\" >-0.232144</td>\n",
              "      <td id=\"T_b3c21_row4_col14\" class=\"data row4 col14\" >0.033278</td>\n",
              "      <td id=\"T_b3c21_row4_col15\" class=\"data row4 col15\" >-0.002146</td>\n",
              "      <td id=\"T_b3c21_row4_col16\" class=\"data row4 col16\" >0.025266</td>\n",
              "      <td id=\"T_b3c21_row4_col17\" class=\"data row4 col17\" >-0.008871</td>\n",
              "      <td id=\"T_b3c21_row4_col18\" class=\"data row4 col18\" >-0.071658</td>\n",
              "      <td id=\"T_b3c21_row4_col19\" class=\"data row4 col19\" >0.101210</td>\n",
              "      <td id=\"T_b3c21_row4_col20\" class=\"data row4 col20\" >-0.084684</td>\n",
              "      <td id=\"T_b3c21_row4_col21\" class=\"data row4 col21\" >-0.147801</td>\n",
              "      <td id=\"T_b3c21_row4_col22\" class=\"data row4 col22\" >0.053194</td>\n",
              "      <td id=\"T_b3c21_row4_col23\" class=\"data row4 col23\" >-0.010139</td>\n",
              "      <td id=\"T_b3c21_row4_col24\" class=\"data row4 col24\" >-0.161685</td>\n",
              "      <td id=\"T_b3c21_row4_col25\" class=\"data row4 col25\" >0.006609</td>\n",
              "      <td id=\"T_b3c21_row4_col26\" class=\"data row4 col26\" >-0.049667</td>\n",
              "      <td id=\"T_b3c21_row4_col27\" class=\"data row4 col27\" >0.142152</td>\n",
              "      <td id=\"T_b3c21_row4_col28\" class=\"data row4 col28\" >-0.005935</td>\n",
              "      <td id=\"T_b3c21_row4_col29\" class=\"data row4 col29\" >0.024148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row5\" class=\"row_heading level0 row5\" >camara_trasera</th>\n",
              "      <td id=\"T_b3c21_row5_col0\" class=\"data row5 col0\" >0.002320</td>\n",
              "      <td id=\"T_b3c21_row5_col1\" class=\"data row5 col1\" >0.313797</td>\n",
              "      <td id=\"T_b3c21_row5_col2\" class=\"data row5 col2\" >-0.008432</td>\n",
              "      <td id=\"T_b3c21_row5_col3\" class=\"data row5 col3\" >0.253836</td>\n",
              "      <td id=\"T_b3c21_row5_col4\" class=\"data row5 col4\" >0.150842</td>\n",
              "      <td id=\"T_b3c21_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row5_col6\" class=\"data row5 col6\" >0.200647</td>\n",
              "      <td id=\"T_b3c21_row5_col7\" class=\"data row5 col7\" >0.198893</td>\n",
              "      <td id=\"T_b3c21_row5_col8\" class=\"data row5 col8\" >0.144648</td>\n",
              "      <td id=\"T_b3c21_row5_col9\" class=\"data row5 col9\" >0.062003</td>\n",
              "      <td id=\"T_b3c21_row5_col10\" class=\"data row5 col10\" >0.201479</td>\n",
              "      <td id=\"T_b3c21_row5_col11\" class=\"data row5 col11\" >0.252135</td>\n",
              "      <td id=\"T_b3c21_row5_col12\" class=\"data row5 col12\" >0.198559</td>\n",
              "      <td id=\"T_b3c21_row5_col13\" class=\"data row5 col13\" >0.021224</td>\n",
              "      <td id=\"T_b3c21_row5_col14\" class=\"data row5 col14\" >0.011259</td>\n",
              "      <td id=\"T_b3c21_row5_col15\" class=\"data row5 col15\" >0.002065</td>\n",
              "      <td id=\"T_b3c21_row5_col16\" class=\"data row5 col16\" >0.005245</td>\n",
              "      <td id=\"T_b3c21_row5_col17\" class=\"data row5 col17\" >-0.025222</td>\n",
              "      <td id=\"T_b3c21_row5_col18\" class=\"data row5 col18\" >0.003362</td>\n",
              "      <td id=\"T_b3c21_row5_col19\" class=\"data row5 col19\" >-0.036487</td>\n",
              "      <td id=\"T_b3c21_row5_col20\" class=\"data row5 col20\" >-0.046632</td>\n",
              "      <td id=\"T_b3c21_row5_col21\" class=\"data row5 col21\" >-0.037827</td>\n",
              "      <td id=\"T_b3c21_row5_col22\" class=\"data row5 col22\" >-0.007286</td>\n",
              "      <td id=\"T_b3c21_row5_col23\" class=\"data row5 col23\" >0.111250</td>\n",
              "      <td id=\"T_b3c21_row5_col24\" class=\"data row5 col24\" >-0.102667</td>\n",
              "      <td id=\"T_b3c21_row5_col25\" class=\"data row5 col25\" >-0.099495</td>\n",
              "      <td id=\"T_b3c21_row5_col26\" class=\"data row5 col26\" >-0.067990</td>\n",
              "      <td id=\"T_b3c21_row5_col27\" class=\"data row5 col27\" >0.004149</td>\n",
              "      <td id=\"T_b3c21_row5_col28\" class=\"data row5 col28\" >0.021181</td>\n",
              "      <td id=\"T_b3c21_row5_col29\" class=\"data row5 col29\" >0.153419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row6\" class=\"row_heading level0 row6\" >asientos_traseros_plegables</th>\n",
              "      <td id=\"T_b3c21_row6_col0\" class=\"data row6 col0\" >-0.052414</td>\n",
              "      <td id=\"T_b3c21_row6_col1\" class=\"data row6 col1\" >0.448041</td>\n",
              "      <td id=\"T_b3c21_row6_col2\" class=\"data row6 col2\" >0.074789</td>\n",
              "      <td id=\"T_b3c21_row6_col3\" class=\"data row6 col3\" >0.231009</td>\n",
              "      <td id=\"T_b3c21_row6_col4\" class=\"data row6 col4\" >0.149853</td>\n",
              "      <td id=\"T_b3c21_row6_col5\" class=\"data row6 col5\" >0.200647</td>\n",
              "      <td id=\"T_b3c21_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row6_col7\" class=\"data row6 col7\" >0.250767</td>\n",
              "      <td id=\"T_b3c21_row6_col8\" class=\"data row6 col8\" >0.153328</td>\n",
              "      <td id=\"T_b3c21_row6_col9\" class=\"data row6 col9\" >0.126568</td>\n",
              "      <td id=\"T_b3c21_row6_col10\" class=\"data row6 col10\" >0.277183</td>\n",
              "      <td id=\"T_b3c21_row6_col11\" class=\"data row6 col11\" >0.414207</td>\n",
              "      <td id=\"T_b3c21_row6_col12\" class=\"data row6 col12\" >0.350416</td>\n",
              "      <td id=\"T_b3c21_row6_col13\" class=\"data row6 col13\" >-0.055221</td>\n",
              "      <td id=\"T_b3c21_row6_col14\" class=\"data row6 col14\" >0.026338</td>\n",
              "      <td id=\"T_b3c21_row6_col15\" class=\"data row6 col15\" >-0.029383</td>\n",
              "      <td id=\"T_b3c21_row6_col16\" class=\"data row6 col16\" >-0.019338</td>\n",
              "      <td id=\"T_b3c21_row6_col17\" class=\"data row6 col17\" >0.017742</td>\n",
              "      <td id=\"T_b3c21_row6_col18\" class=\"data row6 col18\" >-0.001211</td>\n",
              "      <td id=\"T_b3c21_row6_col19\" class=\"data row6 col19\" >-0.153884</td>\n",
              "      <td id=\"T_b3c21_row6_col20\" class=\"data row6 col20\" >-0.152047</td>\n",
              "      <td id=\"T_b3c21_row6_col21\" class=\"data row6 col21\" >-0.097554</td>\n",
              "      <td id=\"T_b3c21_row6_col22\" class=\"data row6 col22\" >-0.126409</td>\n",
              "      <td id=\"T_b3c21_row6_col23\" class=\"data row6 col23\" >0.493375</td>\n",
              "      <td id=\"T_b3c21_row6_col24\" class=\"data row6 col24\" >-0.141069</td>\n",
              "      <td id=\"T_b3c21_row6_col25\" class=\"data row6 col25\" >-0.167145</td>\n",
              "      <td id=\"T_b3c21_row6_col26\" class=\"data row6 col26\" >-0.121723</td>\n",
              "      <td id=\"T_b3c21_row6_col27\" class=\"data row6 col27\" >-0.131966</td>\n",
              "      <td id=\"T_b3c21_row6_col28\" class=\"data row6 col28\" >0.331767</td>\n",
              "      <td id=\"T_b3c21_row6_col29\" class=\"data row6 col29\" >0.169514</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row7\" class=\"row_heading level0 row7\" >elevalunas_electrico</th>\n",
              "      <td id=\"T_b3c21_row7_col0\" class=\"data row7 col0\" >0.046692</td>\n",
              "      <td id=\"T_b3c21_row7_col1\" class=\"data row7 col1\" >0.340025</td>\n",
              "      <td id=\"T_b3c21_row7_col2\" class=\"data row7 col2\" >0.002655</td>\n",
              "      <td id=\"T_b3c21_row7_col3\" class=\"data row7 col3\" >0.278297</td>\n",
              "      <td id=\"T_b3c21_row7_col4\" class=\"data row7 col4\" >0.284307</td>\n",
              "      <td id=\"T_b3c21_row7_col5\" class=\"data row7 col5\" >0.198893</td>\n",
              "      <td id=\"T_b3c21_row7_col6\" class=\"data row7 col6\" >0.250767</td>\n",
              "      <td id=\"T_b3c21_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row7_col8\" class=\"data row7 col8\" >0.255914</td>\n",
              "      <td id=\"T_b3c21_row7_col9\" class=\"data row7 col9\" >0.203526</td>\n",
              "      <td id=\"T_b3c21_row7_col10\" class=\"data row7 col10\" >0.331383</td>\n",
              "      <td id=\"T_b3c21_row7_col11\" class=\"data row7 col11\" >0.260522</td>\n",
              "      <td id=\"T_b3c21_row7_col12\" class=\"data row7 col12\" >0.317296</td>\n",
              "      <td id=\"T_b3c21_row7_col13\" class=\"data row7 col13\" >-0.090814</td>\n",
              "      <td id=\"T_b3c21_row7_col14\" class=\"data row7 col14\" >0.076445</td>\n",
              "      <td id=\"T_b3c21_row7_col15\" class=\"data row7 col15\" >-0.037256</td>\n",
              "      <td id=\"T_b3c21_row7_col16\" class=\"data row7 col16\" >-0.013205</td>\n",
              "      <td id=\"T_b3c21_row7_col17\" class=\"data row7 col17\" >-0.059348</td>\n",
              "      <td id=\"T_b3c21_row7_col18\" class=\"data row7 col18\" >0.014872</td>\n",
              "      <td id=\"T_b3c21_row7_col19\" class=\"data row7 col19\" >0.042147</td>\n",
              "      <td id=\"T_b3c21_row7_col20\" class=\"data row7 col20\" >-0.095378</td>\n",
              "      <td id=\"T_b3c21_row7_col21\" class=\"data row7 col21\" >-0.035587</td>\n",
              "      <td id=\"T_b3c21_row7_col22\" class=\"data row7 col22\" >0.020142</td>\n",
              "      <td id=\"T_b3c21_row7_col23\" class=\"data row7 col23\" >0.033550</td>\n",
              "      <td id=\"T_b3c21_row7_col24\" class=\"data row7 col24\" >-0.170928</td>\n",
              "      <td id=\"T_b3c21_row7_col25\" class=\"data row7 col25\" >-0.150520</td>\n",
              "      <td id=\"T_b3c21_row7_col26\" class=\"data row7 col26\" >-0.002697</td>\n",
              "      <td id=\"T_b3c21_row7_col27\" class=\"data row7 col27\" >0.121992</td>\n",
              "      <td id=\"T_b3c21_row7_col28\" class=\"data row7 col28\" >0.017880</td>\n",
              "      <td id=\"T_b3c21_row7_col29\" class=\"data row7 col29\" >0.096662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row8\" class=\"row_heading level0 row8\" >bluetooth</th>\n",
              "      <td id=\"T_b3c21_row8_col0\" class=\"data row8 col0\" >-0.029341</td>\n",
              "      <td id=\"T_b3c21_row8_col1\" class=\"data row8 col1\" >0.232297</td>\n",
              "      <td id=\"T_b3c21_row8_col2\" class=\"data row8 col2\" >-0.021482</td>\n",
              "      <td id=\"T_b3c21_row8_col3\" class=\"data row8 col3\" >0.134074</td>\n",
              "      <td id=\"T_b3c21_row8_col4\" class=\"data row8 col4\" >0.135554</td>\n",
              "      <td id=\"T_b3c21_row8_col5\" class=\"data row8 col5\" >0.144648</td>\n",
              "      <td id=\"T_b3c21_row8_col6\" class=\"data row8 col6\" >0.153328</td>\n",
              "      <td id=\"T_b3c21_row8_col7\" class=\"data row8 col7\" >0.255914</td>\n",
              "      <td id=\"T_b3c21_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row8_col9\" class=\"data row8 col9\" >0.129528</td>\n",
              "      <td id=\"T_b3c21_row8_col10\" class=\"data row8 col10\" >0.119903</td>\n",
              "      <td id=\"T_b3c21_row8_col11\" class=\"data row8 col11\" >0.210336</td>\n",
              "      <td id=\"T_b3c21_row8_col12\" class=\"data row8 col12\" >0.204552</td>\n",
              "      <td id=\"T_b3c21_row8_col13\" class=\"data row8 col13\" >-0.072126</td>\n",
              "      <td id=\"T_b3c21_row8_col14\" class=\"data row8 col14\" >0.026578</td>\n",
              "      <td id=\"T_b3c21_row8_col15\" class=\"data row8 col15\" >0.005732</td>\n",
              "      <td id=\"T_b3c21_row8_col16\" class=\"data row8 col16\" >-0.037964</td>\n",
              "      <td id=\"T_b3c21_row8_col17\" class=\"data row8 col17\" >-0.047011</td>\n",
              "      <td id=\"T_b3c21_row8_col18\" class=\"data row8 col18\" >0.060854</td>\n",
              "      <td id=\"T_b3c21_row8_col19\" class=\"data row8 col19\" >-0.023956</td>\n",
              "      <td id=\"T_b3c21_row8_col20\" class=\"data row8 col20\" >0.016697</td>\n",
              "      <td id=\"T_b3c21_row8_col21\" class=\"data row8 col21\" >0.049882</td>\n",
              "      <td id=\"T_b3c21_row8_col22\" class=\"data row8 col22\" >-0.022491</td>\n",
              "      <td id=\"T_b3c21_row8_col23\" class=\"data row8 col23\" >0.006628</td>\n",
              "      <td id=\"T_b3c21_row8_col24\" class=\"data row8 col24\" >-0.056273</td>\n",
              "      <td id=\"T_b3c21_row8_col25\" class=\"data row8 col25\" >-0.037180</td>\n",
              "      <td id=\"T_b3c21_row8_col26\" class=\"data row8 col26\" >-0.006271</td>\n",
              "      <td id=\"T_b3c21_row8_col27\" class=\"data row8 col27\" >-0.052589</td>\n",
              "      <td id=\"T_b3c21_row8_col28\" class=\"data row8 col28\" >0.027276</td>\n",
              "      <td id=\"T_b3c21_row8_col29\" class=\"data row8 col29\" >0.078455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row9\" class=\"row_heading level0 row9\" >gps</th>\n",
              "      <td id=\"T_b3c21_row9_col0\" class=\"data row9 col0\" >0.154783</td>\n",
              "      <td id=\"T_b3c21_row9_col1\" class=\"data row9 col1\" >0.008995</td>\n",
              "      <td id=\"T_b3c21_row9_col2\" class=\"data row9 col2\" >0.056409</td>\n",
              "      <td id=\"T_b3c21_row9_col3\" class=\"data row9 col3\" >0.244475</td>\n",
              "      <td id=\"T_b3c21_row9_col4\" class=\"data row9 col4\" >0.370928</td>\n",
              "      <td id=\"T_b3c21_row9_col5\" class=\"data row9 col5\" >0.062003</td>\n",
              "      <td id=\"T_b3c21_row9_col6\" class=\"data row9 col6\" >0.126568</td>\n",
              "      <td id=\"T_b3c21_row9_col7\" class=\"data row9 col7\" >0.203526</td>\n",
              "      <td id=\"T_b3c21_row9_col8\" class=\"data row9 col8\" >0.129528</td>\n",
              "      <td id=\"T_b3c21_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row9_col10\" class=\"data row9 col10\" >-0.064278</td>\n",
              "      <td id=\"T_b3c21_row9_col11\" class=\"data row9 col11\" >-0.005013</td>\n",
              "      <td id=\"T_b3c21_row9_col12\" class=\"data row9 col12\" >0.053728</td>\n",
              "      <td id=\"T_b3c21_row9_col13\" class=\"data row9 col13\" >0.076926</td>\n",
              "      <td id=\"T_b3c21_row9_col14\" class=\"data row9 col14\" >0.050074</td>\n",
              "      <td id=\"T_b3c21_row9_col15\" class=\"data row9 col15\" >0.006701</td>\n",
              "      <td id=\"T_b3c21_row9_col16\" class=\"data row9 col16\" >0.024318</td>\n",
              "      <td id=\"T_b3c21_row9_col17\" class=\"data row9 col17\" >0.006960</td>\n",
              "      <td id=\"T_b3c21_row9_col18\" class=\"data row9 col18\" >-0.124263</td>\n",
              "      <td id=\"T_b3c21_row9_col19\" class=\"data row9 col19\" >0.048263</td>\n",
              "      <td id=\"T_b3c21_row9_col20\" class=\"data row9 col20\" >0.013087</td>\n",
              "      <td id=\"T_b3c21_row9_col21\" class=\"data row9 col21\" >0.004392</td>\n",
              "      <td id=\"T_b3c21_row9_col22\" class=\"data row9 col22\" >0.037385</td>\n",
              "      <td id=\"T_b3c21_row9_col23\" class=\"data row9 col23\" >-0.107355</td>\n",
              "      <td id=\"T_b3c21_row9_col24\" class=\"data row9 col24\" >0.032562</td>\n",
              "      <td id=\"T_b3c21_row9_col25\" class=\"data row9 col25\" >0.032052</td>\n",
              "      <td id=\"T_b3c21_row9_col26\" class=\"data row9 col26\" >-0.034207</td>\n",
              "      <td id=\"T_b3c21_row9_col27\" class=\"data row9 col27\" >0.063453</td>\n",
              "      <td id=\"T_b3c21_row9_col28\" class=\"data row9 col28\" >-0.077755</td>\n",
              "      <td id=\"T_b3c21_row9_col29\" class=\"data row9 col29\" >-0.011171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row10\" class=\"row_heading level0 row10\" >alerta_lim_velocidad</th>\n",
              "      <td id=\"T_b3c21_row10_col0\" class=\"data row10 col0\" >-0.041193</td>\n",
              "      <td id=\"T_b3c21_row10_col1\" class=\"data row10 col1\" >0.488737</td>\n",
              "      <td id=\"T_b3c21_row10_col2\" class=\"data row10 col2\" >-0.002040</td>\n",
              "      <td id=\"T_b3c21_row10_col3\" class=\"data row10 col3\" >0.224440</td>\n",
              "      <td id=\"T_b3c21_row10_col4\" class=\"data row10 col4\" >0.223604</td>\n",
              "      <td id=\"T_b3c21_row10_col5\" class=\"data row10 col5\" >0.201479</td>\n",
              "      <td id=\"T_b3c21_row10_col6\" class=\"data row10 col6\" >0.277183</td>\n",
              "      <td id=\"T_b3c21_row10_col7\" class=\"data row10 col7\" >0.331383</td>\n",
              "      <td id=\"T_b3c21_row10_col8\" class=\"data row10 col8\" >0.119903</td>\n",
              "      <td id=\"T_b3c21_row10_col9\" class=\"data row10 col9\" >-0.064278</td>\n",
              "      <td id=\"T_b3c21_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row10_col11\" class=\"data row10 col11\" >0.443333</td>\n",
              "      <td id=\"T_b3c21_row10_col12\" class=\"data row10 col12\" >0.413246</td>\n",
              "      <td id=\"T_b3c21_row10_col13\" class=\"data row10 col13\" >-0.182571</td>\n",
              "      <td id=\"T_b3c21_row10_col14\" class=\"data row10 col14\" >0.035728</td>\n",
              "      <td id=\"T_b3c21_row10_col15\" class=\"data row10 col15\" >-0.025193</td>\n",
              "      <td id=\"T_b3c21_row10_col16\" class=\"data row10 col16\" >-0.008798</td>\n",
              "      <td id=\"T_b3c21_row10_col17\" class=\"data row10 col17\" >-0.036036</td>\n",
              "      <td id=\"T_b3c21_row10_col18\" class=\"data row10 col18\" >0.029067</td>\n",
              "      <td id=\"T_b3c21_row10_col19\" class=\"data row10 col19\" >0.013217</td>\n",
              "      <td id=\"T_b3c21_row10_col20\" class=\"data row10 col20\" >-0.171480</td>\n",
              "      <td id=\"T_b3c21_row10_col21\" class=\"data row10 col21\" >-0.084986</td>\n",
              "      <td id=\"T_b3c21_row10_col22\" class=\"data row10 col22\" >0.024795</td>\n",
              "      <td id=\"T_b3c21_row10_col23\" class=\"data row10 col23\" >0.155807</td>\n",
              "      <td id=\"T_b3c21_row10_col24\" class=\"data row10 col24\" >-0.272305</td>\n",
              "      <td id=\"T_b3c21_row10_col25\" class=\"data row10 col25\" >-0.174699</td>\n",
              "      <td id=\"T_b3c21_row10_col26\" class=\"data row10 col26\" >-0.024958</td>\n",
              "      <td id=\"T_b3c21_row10_col27\" class=\"data row10 col27\" >0.082576</td>\n",
              "      <td id=\"T_b3c21_row10_col28\" class=\"data row10 col28\" >0.076681</td>\n",
              "      <td id=\"T_b3c21_row10_col29\" class=\"data row10 col29\" >0.174964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row11\" class=\"row_heading level0 row11\" >precio</th>\n",
              "      <td id=\"T_b3c21_row11_col0\" class=\"data row11 col0\" >-0.409663</td>\n",
              "      <td id=\"T_b3c21_row11_col1\" class=\"data row11 col1\" >0.639379</td>\n",
              "      <td id=\"T_b3c21_row11_col2\" class=\"data row11 col2\" >0.013146</td>\n",
              "      <td id=\"T_b3c21_row11_col3\" class=\"data row11 col3\" >0.268538</td>\n",
              "      <td id=\"T_b3c21_row11_col4\" class=\"data row11 col4\" >0.246620</td>\n",
              "      <td id=\"T_b3c21_row11_col5\" class=\"data row11 col5\" >0.252135</td>\n",
              "      <td id=\"T_b3c21_row11_col6\" class=\"data row11 col6\" >0.414207</td>\n",
              "      <td id=\"T_b3c21_row11_col7\" class=\"data row11 col7\" >0.260522</td>\n",
              "      <td id=\"T_b3c21_row11_col8\" class=\"data row11 col8\" >0.210336</td>\n",
              "      <td id=\"T_b3c21_row11_col9\" class=\"data row11 col9\" >-0.005013</td>\n",
              "      <td id=\"T_b3c21_row11_col10\" class=\"data row11 col10\" >0.443333</td>\n",
              "      <td id=\"T_b3c21_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row11_col12\" class=\"data row11 col12\" >0.805862</td>\n",
              "      <td id=\"T_b3c21_row11_col13\" class=\"data row11 col13\" >-0.439656</td>\n",
              "      <td id=\"T_b3c21_row11_col14\" class=\"data row11 col14\" >0.027406</td>\n",
              "      <td id=\"T_b3c21_row11_col15\" class=\"data row11 col15\" >-0.031426</td>\n",
              "      <td id=\"T_b3c21_row11_col16\" class=\"data row11 col16\" >-0.013445</td>\n",
              "      <td id=\"T_b3c21_row11_col17\" class=\"data row11 col17\" >-0.037362</td>\n",
              "      <td id=\"T_b3c21_row11_col18\" class=\"data row11 col18\" >0.056492</td>\n",
              "      <td id=\"T_b3c21_row11_col19\" class=\"data row11 col19\" >-0.205670</td>\n",
              "      <td id=\"T_b3c21_row11_col20\" class=\"data row11 col20\" >-0.113697</td>\n",
              "      <td id=\"T_b3c21_row11_col21\" class=\"data row11 col21\" >-0.009536</td>\n",
              "      <td id=\"T_b3c21_row11_col22\" class=\"data row11 col22\" >0.011175</td>\n",
              "      <td id=\"T_b3c21_row11_col23\" class=\"data row11 col23\" >0.324800</td>\n",
              "      <td id=\"T_b3c21_row11_col24\" class=\"data row11 col24\" >-0.189706</td>\n",
              "      <td id=\"T_b3c21_row11_col25\" class=\"data row11 col25\" >-0.191816</td>\n",
              "      <td id=\"T_b3c21_row11_col26\" class=\"data row11 col26\" >-0.169830</td>\n",
              "      <td id=\"T_b3c21_row11_col27\" class=\"data row11 col27\" >-0.005299</td>\n",
              "      <td id=\"T_b3c21_row11_col28\" class=\"data row11 col28\" >0.079983</td>\n",
              "      <td id=\"T_b3c21_row11_col29\" class=\"data row11 col29\" >0.306086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row12\" class=\"row_heading level0 row12\" >log_precio</th>\n",
              "      <td id=\"T_b3c21_row12_col0\" class=\"data row12 col0\" >-0.434255</td>\n",
              "      <td id=\"T_b3c21_row12_col1\" class=\"data row12 col1\" >0.504766</td>\n",
              "      <td id=\"T_b3c21_row12_col2\" class=\"data row12 col2\" >0.095392</td>\n",
              "      <td id=\"T_b3c21_row12_col3\" class=\"data row12 col3\" >0.250470</td>\n",
              "      <td id=\"T_b3c21_row12_col4\" class=\"data row12 col4\" >0.341317</td>\n",
              "      <td id=\"T_b3c21_row12_col5\" class=\"data row12 col5\" >0.198559</td>\n",
              "      <td id=\"T_b3c21_row12_col6\" class=\"data row12 col6\" >0.350416</td>\n",
              "      <td id=\"T_b3c21_row12_col7\" class=\"data row12 col7\" >0.317296</td>\n",
              "      <td id=\"T_b3c21_row12_col8\" class=\"data row12 col8\" >0.204552</td>\n",
              "      <td id=\"T_b3c21_row12_col9\" class=\"data row12 col9\" >0.053728</td>\n",
              "      <td id=\"T_b3c21_row12_col10\" class=\"data row12 col10\" >0.413246</td>\n",
              "      <td id=\"T_b3c21_row12_col11\" class=\"data row12 col11\" >0.805862</td>\n",
              "      <td id=\"T_b3c21_row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row12_col13\" class=\"data row12 col13\" >-0.606822</td>\n",
              "      <td id=\"T_b3c21_row12_col14\" class=\"data row12 col14\" >0.036044</td>\n",
              "      <td id=\"T_b3c21_row12_col15\" class=\"data row12 col15\" >-0.049246</td>\n",
              "      <td id=\"T_b3c21_row12_col16\" class=\"data row12 col16\" >-0.009336</td>\n",
              "      <td id=\"T_b3c21_row12_col17\" class=\"data row12 col17\" >-0.035974</td>\n",
              "      <td id=\"T_b3c21_row12_col18\" class=\"data row12 col18\" >0.056258</td>\n",
              "      <td id=\"T_b3c21_row12_col19\" class=\"data row12 col19\" >-0.164362</td>\n",
              "      <td id=\"T_b3c21_row12_col20\" class=\"data row12 col20\" >-0.083304</td>\n",
              "      <td id=\"T_b3c21_row12_col21\" class=\"data row12 col21\" >-0.038984</td>\n",
              "      <td id=\"T_b3c21_row12_col22\" class=\"data row12 col22\" >0.025183</td>\n",
              "      <td id=\"T_b3c21_row12_col23\" class=\"data row12 col23\" >0.254982</td>\n",
              "      <td id=\"T_b3c21_row12_col24\" class=\"data row12 col24\" >-0.168541</td>\n",
              "      <td id=\"T_b3c21_row12_col25\" class=\"data row12 col25\" >-0.175952</td>\n",
              "      <td id=\"T_b3c21_row12_col26\" class=\"data row12 col26\" >-0.150280</td>\n",
              "      <td id=\"T_b3c21_row12_col27\" class=\"data row12 col27\" >0.047255</td>\n",
              "      <td id=\"T_b3c21_row12_col28\" class=\"data row12 col28\" >0.100747</td>\n",
              "      <td id=\"T_b3c21_row12_col29\" class=\"data row12 col29\" >0.222516</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row13\" class=\"row_heading level0 row13\" >antiguedad_años</th>\n",
              "      <td id=\"T_b3c21_row13_col0\" class=\"data row13 col0\" >0.503982</td>\n",
              "      <td id=\"T_b3c21_row13_col1\" class=\"data row13 col1\" >-0.084304</td>\n",
              "      <td id=\"T_b3c21_row13_col2\" class=\"data row13 col2\" >-0.201081</td>\n",
              "      <td id=\"T_b3c21_row13_col3\" class=\"data row13 col3\" >0.076686</td>\n",
              "      <td id=\"T_b3c21_row13_col4\" class=\"data row13 col4\" >-0.232144</td>\n",
              "      <td id=\"T_b3c21_row13_col5\" class=\"data row13 col5\" >0.021224</td>\n",
              "      <td id=\"T_b3c21_row13_col6\" class=\"data row13 col6\" >-0.055221</td>\n",
              "      <td id=\"T_b3c21_row13_col7\" class=\"data row13 col7\" >-0.090814</td>\n",
              "      <td id=\"T_b3c21_row13_col8\" class=\"data row13 col8\" >-0.072126</td>\n",
              "      <td id=\"T_b3c21_row13_col9\" class=\"data row13 col9\" >0.076926</td>\n",
              "      <td id=\"T_b3c21_row13_col10\" class=\"data row13 col10\" >-0.182571</td>\n",
              "      <td id=\"T_b3c21_row13_col11\" class=\"data row13 col11\" >-0.439656</td>\n",
              "      <td id=\"T_b3c21_row13_col12\" class=\"data row13 col12\" >-0.606822</td>\n",
              "      <td id=\"T_b3c21_row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row13_col14\" class=\"data row13 col14\" >-0.000402</td>\n",
              "      <td id=\"T_b3c21_row13_col15\" class=\"data row13 col15\" >0.005097</td>\n",
              "      <td id=\"T_b3c21_row13_col16\" class=\"data row13 col16\" >0.055655</td>\n",
              "      <td id=\"T_b3c21_row13_col17\" class=\"data row13 col17\" >0.042277</td>\n",
              "      <td id=\"T_b3c21_row13_col18\" class=\"data row13 col18\" >-0.130946</td>\n",
              "      <td id=\"T_b3c21_row13_col19\" class=\"data row13 col19\" >-0.016661</td>\n",
              "      <td id=\"T_b3c21_row13_col20\" class=\"data row13 col20\" >-0.071865</td>\n",
              "      <td id=\"T_b3c21_row13_col21\" class=\"data row13 col21\" >0.036408</td>\n",
              "      <td id=\"T_b3c21_row13_col22\" class=\"data row13 col22\" >0.087412</td>\n",
              "      <td id=\"T_b3c21_row13_col23\" class=\"data row13 col23\" >-0.032075</td>\n",
              "      <td id=\"T_b3c21_row13_col24\" class=\"data row13 col24\" >-0.015196</td>\n",
              "      <td id=\"T_b3c21_row13_col25\" class=\"data row13 col25\" >0.033335</td>\n",
              "      <td id=\"T_b3c21_row13_col26\" class=\"data row13 col26\" >0.049391</td>\n",
              "      <td id=\"T_b3c21_row13_col27\" class=\"data row13 col27\" >0.022984</td>\n",
              "      <td id=\"T_b3c21_row13_col28\" class=\"data row13 col28\" >0.001759</td>\n",
              "      <td id=\"T_b3c21_row13_col29\" class=\"data row13 col29\" >-0.066334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row14\" class=\"row_heading level0 row14\" >color_black</th>\n",
              "      <td id=\"T_b3c21_row14_col0\" class=\"data row14 col0\" >0.038626</td>\n",
              "      <td id=\"T_b3c21_row14_col1\" class=\"data row14 col1\" >0.037987</td>\n",
              "      <td id=\"T_b3c21_row14_col2\" class=\"data row14 col2\" >-0.015757</td>\n",
              "      <td id=\"T_b3c21_row14_col3\" class=\"data row14 col3\" >0.019220</td>\n",
              "      <td id=\"T_b3c21_row14_col4\" class=\"data row14 col4\" >0.033278</td>\n",
              "      <td id=\"T_b3c21_row14_col5\" class=\"data row14 col5\" >0.011259</td>\n",
              "      <td id=\"T_b3c21_row14_col6\" class=\"data row14 col6\" >0.026338</td>\n",
              "      <td id=\"T_b3c21_row14_col7\" class=\"data row14 col7\" >0.076445</td>\n",
              "      <td id=\"T_b3c21_row14_col8\" class=\"data row14 col8\" >0.026578</td>\n",
              "      <td id=\"T_b3c21_row14_col9\" class=\"data row14 col9\" >0.050074</td>\n",
              "      <td id=\"T_b3c21_row14_col10\" class=\"data row14 col10\" >0.035728</td>\n",
              "      <td id=\"T_b3c21_row14_col11\" class=\"data row14 col11\" >0.027406</td>\n",
              "      <td id=\"T_b3c21_row14_col12\" class=\"data row14 col12\" >0.036044</td>\n",
              "      <td id=\"T_b3c21_row14_col13\" class=\"data row14 col13\" >-0.000402</td>\n",
              "      <td id=\"T_b3c21_row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row14_col15\" class=\"data row14 col15\" >-0.294073</td>\n",
              "      <td id=\"T_b3c21_row14_col16\" class=\"data row14 col16\" >-0.402847</td>\n",
              "      <td id=\"T_b3c21_row14_col17\" class=\"data row14 col17\" >-0.316268</td>\n",
              "      <td id=\"T_b3c21_row14_col18\" class=\"data row14 col18\" >-0.251738</td>\n",
              "      <td id=\"T_b3c21_row14_col19\" class=\"data row14 col19\" >-0.004814</td>\n",
              "      <td id=\"T_b3c21_row14_col20\" class=\"data row14 col20\" >0.004468</td>\n",
              "      <td id=\"T_b3c21_row14_col21\" class=\"data row14 col21\" >-0.004294</td>\n",
              "      <td id=\"T_b3c21_row14_col22\" class=\"data row14 col22\" >-0.012306</td>\n",
              "      <td id=\"T_b3c21_row14_col23\" class=\"data row14 col23\" >0.016972</td>\n",
              "      <td id=\"T_b3c21_row14_col24\" class=\"data row14 col24\" >0.012426</td>\n",
              "      <td id=\"T_b3c21_row14_col25\" class=\"data row14 col25\" >-0.032166</td>\n",
              "      <td id=\"T_b3c21_row14_col26\" class=\"data row14 col26\" >0.008580</td>\n",
              "      <td id=\"T_b3c21_row14_col27\" class=\"data row14 col27\" >0.002796</td>\n",
              "      <td id=\"T_b3c21_row14_col28\" class=\"data row14 col28\" >-0.009932</td>\n",
              "      <td id=\"T_b3c21_row14_col29\" class=\"data row14 col29\" >0.011900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row15\" class=\"row_heading level0 row15\" >color_blue</th>\n",
              "      <td id=\"T_b3c21_row15_col0\" class=\"data row15 col0\" >-0.016510</td>\n",
              "      <td id=\"T_b3c21_row15_col1\" class=\"data row15 col1\" >-0.015877</td>\n",
              "      <td id=\"T_b3c21_row15_col2\" class=\"data row15 col2\" >0.017746</td>\n",
              "      <td id=\"T_b3c21_row15_col3\" class=\"data row15 col3\" >0.006150</td>\n",
              "      <td id=\"T_b3c21_row15_col4\" class=\"data row15 col4\" >-0.002146</td>\n",
              "      <td id=\"T_b3c21_row15_col5\" class=\"data row15 col5\" >0.002065</td>\n",
              "      <td id=\"T_b3c21_row15_col6\" class=\"data row15 col6\" >-0.029383</td>\n",
              "      <td id=\"T_b3c21_row15_col7\" class=\"data row15 col7\" >-0.037256</td>\n",
              "      <td id=\"T_b3c21_row15_col8\" class=\"data row15 col8\" >0.005732</td>\n",
              "      <td id=\"T_b3c21_row15_col9\" class=\"data row15 col9\" >0.006701</td>\n",
              "      <td id=\"T_b3c21_row15_col10\" class=\"data row15 col10\" >-0.025193</td>\n",
              "      <td id=\"T_b3c21_row15_col11\" class=\"data row15 col11\" >-0.031426</td>\n",
              "      <td id=\"T_b3c21_row15_col12\" class=\"data row15 col12\" >-0.049246</td>\n",
              "      <td id=\"T_b3c21_row15_col13\" class=\"data row15 col13\" >0.005097</td>\n",
              "      <td id=\"T_b3c21_row15_col14\" class=\"data row15 col14\" >-0.294073</td>\n",
              "      <td id=\"T_b3c21_row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row15_col16\" class=\"data row15 col16\" >-0.233293</td>\n",
              "      <td id=\"T_b3c21_row15_col17\" class=\"data row15 col17\" >-0.183154</td>\n",
              "      <td id=\"T_b3c21_row15_col18\" class=\"data row15 col18\" >-0.145784</td>\n",
              "      <td id=\"T_b3c21_row15_col19\" class=\"data row15 col19\" >-0.001376</td>\n",
              "      <td id=\"T_b3c21_row15_col20\" class=\"data row15 col20\" >0.028839</td>\n",
              "      <td id=\"T_b3c21_row15_col21\" class=\"data row15 col21\" >0.029697</td>\n",
              "      <td id=\"T_b3c21_row15_col22\" class=\"data row15 col22\" >0.013961</td>\n",
              "      <td id=\"T_b3c21_row15_col23\" class=\"data row15 col23\" >-0.055110</td>\n",
              "      <td id=\"T_b3c21_row15_col24\" class=\"data row15 col24\" >0.053571</td>\n",
              "      <td id=\"T_b3c21_row15_col25\" class=\"data row15 col25\" >0.010288</td>\n",
              "      <td id=\"T_b3c21_row15_col26\" class=\"data row15 col26\" >0.000247</td>\n",
              "      <td id=\"T_b3c21_row15_col27\" class=\"data row15 col27\" >-0.019093</td>\n",
              "      <td id=\"T_b3c21_row15_col28\" class=\"data row15 col28\" >-0.038307</td>\n",
              "      <td id=\"T_b3c21_row15_col29\" class=\"data row15 col29\" >0.000014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row16\" class=\"row_heading level0 row16\" >color_grey</th>\n",
              "      <td id=\"T_b3c21_row16_col0\" class=\"data row16 col0\" >0.026338</td>\n",
              "      <td id=\"T_b3c21_row16_col1\" class=\"data row16 col1\" >0.005025</td>\n",
              "      <td id=\"T_b3c21_row16_col2\" class=\"data row16 col2\" >-0.009227</td>\n",
              "      <td id=\"T_b3c21_row16_col3\" class=\"data row16 col3\" >0.053682</td>\n",
              "      <td id=\"T_b3c21_row16_col4\" class=\"data row16 col4\" >0.025266</td>\n",
              "      <td id=\"T_b3c21_row16_col5\" class=\"data row16 col5\" >0.005245</td>\n",
              "      <td id=\"T_b3c21_row16_col6\" class=\"data row16 col6\" >-0.019338</td>\n",
              "      <td id=\"T_b3c21_row16_col7\" class=\"data row16 col7\" >-0.013205</td>\n",
              "      <td id=\"T_b3c21_row16_col8\" class=\"data row16 col8\" >-0.037964</td>\n",
              "      <td id=\"T_b3c21_row16_col9\" class=\"data row16 col9\" >0.024318</td>\n",
              "      <td id=\"T_b3c21_row16_col10\" class=\"data row16 col10\" >-0.008798</td>\n",
              "      <td id=\"T_b3c21_row16_col11\" class=\"data row16 col11\" >-0.013445</td>\n",
              "      <td id=\"T_b3c21_row16_col12\" class=\"data row16 col12\" >-0.009336</td>\n",
              "      <td id=\"T_b3c21_row16_col13\" class=\"data row16 col13\" >0.055655</td>\n",
              "      <td id=\"T_b3c21_row16_col14\" class=\"data row16 col14\" >-0.402847</td>\n",
              "      <td id=\"T_b3c21_row16_col15\" class=\"data row16 col15\" >-0.233293</td>\n",
              "      <td id=\"T_b3c21_row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row16_col17\" class=\"data row16 col17\" >-0.250900</td>\n",
              "      <td id=\"T_b3c21_row16_col18\" class=\"data row16 col18\" >-0.199707</td>\n",
              "      <td id=\"T_b3c21_row16_col19\" class=\"data row16 col19\" >0.036694</td>\n",
              "      <td id=\"T_b3c21_row16_col20\" class=\"data row16 col20\" >-0.019624</td>\n",
              "      <td id=\"T_b3c21_row16_col21\" class=\"data row16 col21\" >-0.001579</td>\n",
              "      <td id=\"T_b3c21_row16_col22\" class=\"data row16 col22\" >0.029766</td>\n",
              "      <td id=\"T_b3c21_row16_col23\" class=\"data row16 col23\" >-0.054918</td>\n",
              "      <td id=\"T_b3c21_row16_col24\" class=\"data row16 col24\" >-0.028965</td>\n",
              "      <td id=\"T_b3c21_row16_col25\" class=\"data row16 col25\" >-0.004623</td>\n",
              "      <td id=\"T_b3c21_row16_col26\" class=\"data row16 col26\" >-0.017571</td>\n",
              "      <td id=\"T_b3c21_row16_col27\" class=\"data row16 col27\" >0.085885</td>\n",
              "      <td id=\"T_b3c21_row16_col28\" class=\"data row16 col28\" >-0.048931</td>\n",
              "      <td id=\"T_b3c21_row16_col29\" class=\"data row16 col29\" >0.001047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row17\" class=\"row_heading level0 row17\" >color_otro_color</th>\n",
              "      <td id=\"T_b3c21_row17_col0\" class=\"data row17 col0\" >-0.007139</td>\n",
              "      <td id=\"T_b3c21_row17_col1\" class=\"data row17 col1\" >-0.045551</td>\n",
              "      <td id=\"T_b3c21_row17_col2\" class=\"data row17 col2\" >0.016717</td>\n",
              "      <td id=\"T_b3c21_row17_col3\" class=\"data row17 col3\" >0.002911</td>\n",
              "      <td id=\"T_b3c21_row17_col4\" class=\"data row17 col4\" >-0.008871</td>\n",
              "      <td id=\"T_b3c21_row17_col5\" class=\"data row17 col5\" >-0.025222</td>\n",
              "      <td id=\"T_b3c21_row17_col6\" class=\"data row17 col6\" >0.017742</td>\n",
              "      <td id=\"T_b3c21_row17_col7\" class=\"data row17 col7\" >-0.059348</td>\n",
              "      <td id=\"T_b3c21_row17_col8\" class=\"data row17 col8\" >-0.047011</td>\n",
              "      <td id=\"T_b3c21_row17_col9\" class=\"data row17 col9\" >0.006960</td>\n",
              "      <td id=\"T_b3c21_row17_col10\" class=\"data row17 col10\" >-0.036036</td>\n",
              "      <td id=\"T_b3c21_row17_col11\" class=\"data row17 col11\" >-0.037362</td>\n",
              "      <td id=\"T_b3c21_row17_col12\" class=\"data row17 col12\" >-0.035974</td>\n",
              "      <td id=\"T_b3c21_row17_col13\" class=\"data row17 col13\" >0.042277</td>\n",
              "      <td id=\"T_b3c21_row17_col14\" class=\"data row17 col14\" >-0.316268</td>\n",
              "      <td id=\"T_b3c21_row17_col15\" class=\"data row17 col15\" >-0.183154</td>\n",
              "      <td id=\"T_b3c21_row17_col16\" class=\"data row17 col16\" >-0.250900</td>\n",
              "      <td id=\"T_b3c21_row17_col17\" class=\"data row17 col17\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row17_col18\" class=\"data row17 col18\" >-0.156787</td>\n",
              "      <td id=\"T_b3c21_row17_col19\" class=\"data row17 col19\" >-0.010063</td>\n",
              "      <td id=\"T_b3c21_row17_col20\" class=\"data row17 col20\" >-0.041306</td>\n",
              "      <td id=\"T_b3c21_row17_col21\" class=\"data row17 col21\" >-0.030635</td>\n",
              "      <td id=\"T_b3c21_row17_col22\" class=\"data row17 col22\" >0.032549</td>\n",
              "      <td id=\"T_b3c21_row17_col23\" class=\"data row17 col23\" >0.031136</td>\n",
              "      <td id=\"T_b3c21_row17_col24\" class=\"data row17 col24\" >-0.042440</td>\n",
              "      <td id=\"T_b3c21_row17_col25\" class=\"data row17 col25\" >0.027527</td>\n",
              "      <td id=\"T_b3c21_row17_col26\" class=\"data row17 col26\" >0.026093</td>\n",
              "      <td id=\"T_b3c21_row17_col27\" class=\"data row17 col27\" >-0.031461</td>\n",
              "      <td id=\"T_b3c21_row17_col28\" class=\"data row17 col28\" >0.071786</td>\n",
              "      <td id=\"T_b3c21_row17_col29\" class=\"data row17 col29\" >-0.034674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row18\" class=\"row_heading level0 row18\" >color_white</th>\n",
              "      <td id=\"T_b3c21_row18_col0\" class=\"data row18 col0\" >-0.067085</td>\n",
              "      <td id=\"T_b3c21_row18_col1\" class=\"data row18 col1\" >0.007583</td>\n",
              "      <td id=\"T_b3c21_row18_col2\" class=\"data row18 col2\" >-0.003363</td>\n",
              "      <td id=\"T_b3c21_row18_col3\" class=\"data row18 col3\" >-0.112487</td>\n",
              "      <td id=\"T_b3c21_row18_col4\" class=\"data row18 col4\" >-0.071658</td>\n",
              "      <td id=\"T_b3c21_row18_col5\" class=\"data row18 col5\" >0.003362</td>\n",
              "      <td id=\"T_b3c21_row18_col6\" class=\"data row18 col6\" >-0.001211</td>\n",
              "      <td id=\"T_b3c21_row18_col7\" class=\"data row18 col7\" >0.014872</td>\n",
              "      <td id=\"T_b3c21_row18_col8\" class=\"data row18 col8\" >0.060854</td>\n",
              "      <td id=\"T_b3c21_row18_col9\" class=\"data row18 col9\" >-0.124263</td>\n",
              "      <td id=\"T_b3c21_row18_col10\" class=\"data row18 col10\" >0.029067</td>\n",
              "      <td id=\"T_b3c21_row18_col11\" class=\"data row18 col11\" >0.056492</td>\n",
              "      <td id=\"T_b3c21_row18_col12\" class=\"data row18 col12\" >0.056258</td>\n",
              "      <td id=\"T_b3c21_row18_col13\" class=\"data row18 col13\" >-0.130946</td>\n",
              "      <td id=\"T_b3c21_row18_col14\" class=\"data row18 col14\" >-0.251738</td>\n",
              "      <td id=\"T_b3c21_row18_col15\" class=\"data row18 col15\" >-0.145784</td>\n",
              "      <td id=\"T_b3c21_row18_col16\" class=\"data row18 col16\" >-0.199707</td>\n",
              "      <td id=\"T_b3c21_row18_col17\" class=\"data row18 col17\" >-0.156787</td>\n",
              "      <td id=\"T_b3c21_row18_col18\" class=\"data row18 col18\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row18_col19\" class=\"data row18 col19\" >-0.029383</td>\n",
              "      <td id=\"T_b3c21_row18_col20\" class=\"data row18 col20\" >0.036432</td>\n",
              "      <td id=\"T_b3c21_row18_col21\" class=\"data row18 col21\" >0.011440</td>\n",
              "      <td id=\"T_b3c21_row18_col22\" class=\"data row18 col22\" >-0.076187</td>\n",
              "      <td id=\"T_b3c21_row18_col23\" class=\"data row18 col23\" >0.074489</td>\n",
              "      <td id=\"T_b3c21_row18_col24\" class=\"data row18 col24\" >0.010769</td>\n",
              "      <td id=\"T_b3c21_row18_col25\" class=\"data row18 col25\" >0.010661</td>\n",
              "      <td id=\"T_b3c21_row18_col26\" class=\"data row18 col26\" >-0.020024</td>\n",
              "      <td id=\"T_b3c21_row18_col27\" class=\"data row18 col27\" >-0.062780</td>\n",
              "      <td id=\"T_b3c21_row18_col28\" class=\"data row18 col28\" >0.039949</td>\n",
              "      <td id=\"T_b3c21_row18_col29\" class=\"data row18 col29\" >0.021585</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row19\" class=\"row_heading level0 row19\" >tipo_coche_estate</th>\n",
              "      <td id=\"T_b3c21_row19_col0\" class=\"data row19 col0\" >0.178331</td>\n",
              "      <td id=\"T_b3c21_row19_col1\" class=\"data row19 col1\" >-0.053156</td>\n",
              "      <td id=\"T_b3c21_row19_col2\" class=\"data row19 col2\" >0.070297</td>\n",
              "      <td id=\"T_b3c21_row19_col3\" class=\"data row19 col3\" >-0.003153</td>\n",
              "      <td id=\"T_b3c21_row19_col4\" class=\"data row19 col4\" >0.101210</td>\n",
              "      <td id=\"T_b3c21_row19_col5\" class=\"data row19 col5\" >-0.036487</td>\n",
              "      <td id=\"T_b3c21_row19_col6\" class=\"data row19 col6\" >-0.153884</td>\n",
              "      <td id=\"T_b3c21_row19_col7\" class=\"data row19 col7\" >0.042147</td>\n",
              "      <td id=\"T_b3c21_row19_col8\" class=\"data row19 col8\" >-0.023956</td>\n",
              "      <td id=\"T_b3c21_row19_col9\" class=\"data row19 col9\" >0.048263</td>\n",
              "      <td id=\"T_b3c21_row19_col10\" class=\"data row19 col10\" >0.013217</td>\n",
              "      <td id=\"T_b3c21_row19_col11\" class=\"data row19 col11\" >-0.205670</td>\n",
              "      <td id=\"T_b3c21_row19_col12\" class=\"data row19 col12\" >-0.164362</td>\n",
              "      <td id=\"T_b3c21_row19_col13\" class=\"data row19 col13\" >-0.016661</td>\n",
              "      <td id=\"T_b3c21_row19_col14\" class=\"data row19 col14\" >-0.004814</td>\n",
              "      <td id=\"T_b3c21_row19_col15\" class=\"data row19 col15\" >-0.001376</td>\n",
              "      <td id=\"T_b3c21_row19_col16\" class=\"data row19 col16\" >0.036694</td>\n",
              "      <td id=\"T_b3c21_row19_col17\" class=\"data row19 col17\" >-0.010063</td>\n",
              "      <td id=\"T_b3c21_row19_col18\" class=\"data row19 col18\" >-0.029383</td>\n",
              "      <td id=\"T_b3c21_row19_col19\" class=\"data row19 col19\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row19_col20\" class=\"data row19 col20\" >-0.288758</td>\n",
              "      <td id=\"T_b3c21_row19_col21\" class=\"data row19 col21\" >-0.184789</td>\n",
              "      <td id=\"T_b3c21_row19_col22\" class=\"data row19 col22\" >-0.396218</td>\n",
              "      <td id=\"T_b3c21_row19_col23\" class=\"data row19 col23\" >-0.371546</td>\n",
              "      <td id=\"T_b3c21_row19_col24\" class=\"data row19 col24\" >-0.195257</td>\n",
              "      <td id=\"T_b3c21_row19_col25\" class=\"data row19 col25\" >0.288958</td>\n",
              "      <td id=\"T_b3c21_row19_col26\" class=\"data row19 col26\" >0.234888</td>\n",
              "      <td id=\"T_b3c21_row19_col27\" class=\"data row19 col27\" >0.184495</td>\n",
              "      <td id=\"T_b3c21_row19_col28\" class=\"data row19 col28\" >-0.218617</td>\n",
              "      <td id=\"T_b3c21_row19_col29\" class=\"data row19 col29\" >-0.254731</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row20\" class=\"row_heading level0 row20\" >tipo_coche_hatchback</th>\n",
              "      <td id=\"T_b3c21_row20_col0\" class=\"data row20 col0\" >-0.111280</td>\n",
              "      <td id=\"T_b3c21_row20_col1\" class=\"data row20 col1\" >-0.225185</td>\n",
              "      <td id=\"T_b3c21_row20_col2\" class=\"data row20 col2\" >-0.029198</td>\n",
              "      <td id=\"T_b3c21_row20_col3\" class=\"data row20 col3\" >-0.150910</td>\n",
              "      <td id=\"T_b3c21_row20_col4\" class=\"data row20 col4\" >-0.084684</td>\n",
              "      <td id=\"T_b3c21_row20_col5\" class=\"data row20 col5\" >-0.046632</td>\n",
              "      <td id=\"T_b3c21_row20_col6\" class=\"data row20 col6\" >-0.152047</td>\n",
              "      <td id=\"T_b3c21_row20_col7\" class=\"data row20 col7\" >-0.095378</td>\n",
              "      <td id=\"T_b3c21_row20_col8\" class=\"data row20 col8\" >0.016697</td>\n",
              "      <td id=\"T_b3c21_row20_col9\" class=\"data row20 col9\" >0.013087</td>\n",
              "      <td id=\"T_b3c21_row20_col10\" class=\"data row20 col10\" >-0.171480</td>\n",
              "      <td id=\"T_b3c21_row20_col11\" class=\"data row20 col11\" >-0.113697</td>\n",
              "      <td id=\"T_b3c21_row20_col12\" class=\"data row20 col12\" >-0.083304</td>\n",
              "      <td id=\"T_b3c21_row20_col13\" class=\"data row20 col13\" >-0.071865</td>\n",
              "      <td id=\"T_b3c21_row20_col14\" class=\"data row20 col14\" >0.004468</td>\n",
              "      <td id=\"T_b3c21_row20_col15\" class=\"data row20 col15\" >0.028839</td>\n",
              "      <td id=\"T_b3c21_row20_col16\" class=\"data row20 col16\" >-0.019624</td>\n",
              "      <td id=\"T_b3c21_row20_col17\" class=\"data row20 col17\" >-0.041306</td>\n",
              "      <td id=\"T_b3c21_row20_col18\" class=\"data row20 col18\" >0.036432</td>\n",
              "      <td id=\"T_b3c21_row20_col19\" class=\"data row20 col19\" >-0.288758</td>\n",
              "      <td id=\"T_b3c21_row20_col20\" class=\"data row20 col20\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row20_col21\" class=\"data row20 col21\" >-0.108257</td>\n",
              "      <td id=\"T_b3c21_row20_col22\" class=\"data row20 col22\" >-0.232122</td>\n",
              "      <td id=\"T_b3c21_row20_col23\" class=\"data row20 col23\" >-0.217668</td>\n",
              "      <td id=\"T_b3c21_row20_col24\" class=\"data row20 col24\" >0.494648</td>\n",
              "      <td id=\"T_b3c21_row20_col25\" class=\"data row20 col25\" >-0.146174</td>\n",
              "      <td id=\"T_b3c21_row20_col26\" class=\"data row20 col26\" >-0.135379</td>\n",
              "      <td id=\"T_b3c21_row20_col27\" class=\"data row20 col27\" >-0.142118</td>\n",
              "      <td id=\"T_b3c21_row20_col28\" class=\"data row20 col28\" >-0.129872</td>\n",
              "      <td id=\"T_b3c21_row20_col29\" class=\"data row20 col29\" >0.104213</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row21\" class=\"row_heading level0 row21\" >tipo_coche_otro_tipo</th>\n",
              "      <td id=\"T_b3c21_row21_col0\" class=\"data row21 col0\" >-0.098125</td>\n",
              "      <td id=\"T_b3c21_row21_col1\" class=\"data row21 col1\" >-0.033088</td>\n",
              "      <td id=\"T_b3c21_row21_col2\" class=\"data row21 col2\" >-0.160234</td>\n",
              "      <td id=\"T_b3c21_row21_col3\" class=\"data row21 col3\" >-0.047688</td>\n",
              "      <td id=\"T_b3c21_row21_col4\" class=\"data row21 col4\" >-0.147801</td>\n",
              "      <td id=\"T_b3c21_row21_col5\" class=\"data row21 col5\" >-0.037827</td>\n",
              "      <td id=\"T_b3c21_row21_col6\" class=\"data row21 col6\" >-0.097554</td>\n",
              "      <td id=\"T_b3c21_row21_col7\" class=\"data row21 col7\" >-0.035587</td>\n",
              "      <td id=\"T_b3c21_row21_col8\" class=\"data row21 col8\" >0.049882</td>\n",
              "      <td id=\"T_b3c21_row21_col9\" class=\"data row21 col9\" >0.004392</td>\n",
              "      <td id=\"T_b3c21_row21_col10\" class=\"data row21 col10\" >-0.084986</td>\n",
              "      <td id=\"T_b3c21_row21_col11\" class=\"data row21 col11\" >-0.009536</td>\n",
              "      <td id=\"T_b3c21_row21_col12\" class=\"data row21 col12\" >-0.038984</td>\n",
              "      <td id=\"T_b3c21_row21_col13\" class=\"data row21 col13\" >0.036408</td>\n",
              "      <td id=\"T_b3c21_row21_col14\" class=\"data row21 col14\" >-0.004294</td>\n",
              "      <td id=\"T_b3c21_row21_col15\" class=\"data row21 col15\" >0.029697</td>\n",
              "      <td id=\"T_b3c21_row21_col16\" class=\"data row21 col16\" >-0.001579</td>\n",
              "      <td id=\"T_b3c21_row21_col17\" class=\"data row21 col17\" >-0.030635</td>\n",
              "      <td id=\"T_b3c21_row21_col18\" class=\"data row21 col18\" >0.011440</td>\n",
              "      <td id=\"T_b3c21_row21_col19\" class=\"data row21 col19\" >-0.184789</td>\n",
              "      <td id=\"T_b3c21_row21_col20\" class=\"data row21 col20\" >-0.108257</td>\n",
              "      <td id=\"T_b3c21_row21_col21\" class=\"data row21 col21\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row21_col22\" class=\"data row21 col22\" >-0.148545</td>\n",
              "      <td id=\"T_b3c21_row21_col23\" class=\"data row21 col23\" >-0.139295</td>\n",
              "      <td id=\"T_b3c21_row21_col24\" class=\"data row21 col24\" >0.185574</td>\n",
              "      <td id=\"T_b3c21_row21_col25\" class=\"data row21 col25\" >-0.080196</td>\n",
              "      <td id=\"T_b3c21_row21_col26\" class=\"data row21 col26\" >-0.054542</td>\n",
              "      <td id=\"T_b3c21_row21_col27\" class=\"data row21 col27\" >-0.099620</td>\n",
              "      <td id=\"T_b3c21_row21_col28\" class=\"data row21 col28\" >-0.077253</td>\n",
              "      <td id=\"T_b3c21_row21_col29\" class=\"data row21 col29\" >0.106350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row22\" class=\"row_heading level0 row22\" >tipo_coche_sedan</th>\n",
              "      <td id=\"T_b3c21_row22_col0\" class=\"data row22 col0\" >0.060867</td>\n",
              "      <td id=\"T_b3c21_row22_col1\" class=\"data row22 col1\" >0.034830</td>\n",
              "      <td id=\"T_b3c21_row22_col2\" class=\"data row22 col2\" >-0.031034</td>\n",
              "      <td id=\"T_b3c21_row22_col3\" class=\"data row22 col3\" >0.055333</td>\n",
              "      <td id=\"T_b3c21_row22_col4\" class=\"data row22 col4\" >0.053194</td>\n",
              "      <td id=\"T_b3c21_row22_col5\" class=\"data row22 col5\" >-0.007286</td>\n",
              "      <td id=\"T_b3c21_row22_col6\" class=\"data row22 col6\" >-0.126409</td>\n",
              "      <td id=\"T_b3c21_row22_col7\" class=\"data row22 col7\" >0.020142</td>\n",
              "      <td id=\"T_b3c21_row22_col8\" class=\"data row22 col8\" >-0.022491</td>\n",
              "      <td id=\"T_b3c21_row22_col9\" class=\"data row22 col9\" >0.037385</td>\n",
              "      <td id=\"T_b3c21_row22_col10\" class=\"data row22 col10\" >0.024795</td>\n",
              "      <td id=\"T_b3c21_row22_col11\" class=\"data row22 col11\" >0.011175</td>\n",
              "      <td id=\"T_b3c21_row22_col12\" class=\"data row22 col12\" >0.025183</td>\n",
              "      <td id=\"T_b3c21_row22_col13\" class=\"data row22 col13\" >0.087412</td>\n",
              "      <td id=\"T_b3c21_row22_col14\" class=\"data row22 col14\" >-0.012306</td>\n",
              "      <td id=\"T_b3c21_row22_col15\" class=\"data row22 col15\" >0.013961</td>\n",
              "      <td id=\"T_b3c21_row22_col16\" class=\"data row22 col16\" >0.029766</td>\n",
              "      <td id=\"T_b3c21_row22_col17\" class=\"data row22 col17\" >0.032549</td>\n",
              "      <td id=\"T_b3c21_row22_col18\" class=\"data row22 col18\" >-0.076187</td>\n",
              "      <td id=\"T_b3c21_row22_col19\" class=\"data row22 col19\" >-0.396218</td>\n",
              "      <td id=\"T_b3c21_row22_col20\" class=\"data row22 col20\" >-0.232122</td>\n",
              "      <td id=\"T_b3c21_row22_col21\" class=\"data row22 col21\" >-0.148545</td>\n",
              "      <td id=\"T_b3c21_row22_col22\" class=\"data row22 col22\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row22_col23\" class=\"data row22 col23\" >-0.298672</td>\n",
              "      <td id=\"T_b3c21_row22_col24\" class=\"data row22 col24\" >-0.154123</td>\n",
              "      <td id=\"T_b3c21_row22_col25\" class=\"data row22 col25\" >0.034997</td>\n",
              "      <td id=\"T_b3c21_row22_col26\" class=\"data row22 col26\" >0.103351</td>\n",
              "      <td id=\"T_b3c21_row22_col27\" class=\"data row22 col27\" >0.168269</td>\n",
              "      <td id=\"T_b3c21_row22_col28\" class=\"data row22 col28\" >-0.178203</td>\n",
              "      <td id=\"T_b3c21_row22_col29\" class=\"data row22 col29\" >-0.027947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row23\" class=\"row_heading level0 row23\" >tipo_coche_suv</th>\n",
              "      <td id=\"T_b3c21_row23_col0\" class=\"data row23 col0\" >-0.112754</td>\n",
              "      <td id=\"T_b3c21_row23_col1\" class=\"data row23 col1\" >0.235715</td>\n",
              "      <td id=\"T_b3c21_row23_col2\" class=\"data row23 col2\" >0.072416</td>\n",
              "      <td id=\"T_b3c21_row23_col3\" class=\"data row23 col3\" >0.103103</td>\n",
              "      <td id=\"T_b3c21_row23_col4\" class=\"data row23 col4\" >-0.010139</td>\n",
              "      <td id=\"T_b3c21_row23_col5\" class=\"data row23 col5\" >0.111250</td>\n",
              "      <td id=\"T_b3c21_row23_col6\" class=\"data row23 col6\" >0.493375</td>\n",
              "      <td id=\"T_b3c21_row23_col7\" class=\"data row23 col7\" >0.033550</td>\n",
              "      <td id=\"T_b3c21_row23_col8\" class=\"data row23 col8\" >0.006628</td>\n",
              "      <td id=\"T_b3c21_row23_col9\" class=\"data row23 col9\" >-0.107355</td>\n",
              "      <td id=\"T_b3c21_row23_col10\" class=\"data row23 col10\" >0.155807</td>\n",
              "      <td id=\"T_b3c21_row23_col11\" class=\"data row23 col11\" >0.324800</td>\n",
              "      <td id=\"T_b3c21_row23_col12\" class=\"data row23 col12\" >0.254982</td>\n",
              "      <td id=\"T_b3c21_row23_col13\" class=\"data row23 col13\" >-0.032075</td>\n",
              "      <td id=\"T_b3c21_row23_col14\" class=\"data row23 col14\" >0.016972</td>\n",
              "      <td id=\"T_b3c21_row23_col15\" class=\"data row23 col15\" >-0.055110</td>\n",
              "      <td id=\"T_b3c21_row23_col16\" class=\"data row23 col16\" >-0.054918</td>\n",
              "      <td id=\"T_b3c21_row23_col17\" class=\"data row23 col17\" >0.031136</td>\n",
              "      <td id=\"T_b3c21_row23_col18\" class=\"data row23 col18\" >0.074489</td>\n",
              "      <td id=\"T_b3c21_row23_col19\" class=\"data row23 col19\" >-0.371546</td>\n",
              "      <td id=\"T_b3c21_row23_col20\" class=\"data row23 col20\" >-0.217668</td>\n",
              "      <td id=\"T_b3c21_row23_col21\" class=\"data row23 col21\" >-0.139295</td>\n",
              "      <td id=\"T_b3c21_row23_col22\" class=\"data row23 col22\" >-0.298672</td>\n",
              "      <td id=\"T_b3c21_row23_col23\" class=\"data row23 col23\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row23_col24\" class=\"data row23 col24\" >-0.149720</td>\n",
              "      <td id=\"T_b3c21_row23_col25\" class=\"data row23 col25\" >-0.192790</td>\n",
              "      <td id=\"T_b3c21_row23_col26\" class=\"data row23 col26\" >-0.226515</td>\n",
              "      <td id=\"T_b3c21_row23_col27\" class=\"data row23 col27\" >-0.203831</td>\n",
              "      <td id=\"T_b3c21_row23_col28\" class=\"data row23 col28\" >0.589675</td>\n",
              "      <td id=\"T_b3c21_row23_col29\" class=\"data row23 col29\" >0.166691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row24\" class=\"row_heading level0 row24\" >modelo_116</th>\n",
              "      <td id=\"T_b3c21_row24_col0\" class=\"data row24 col0\" >-0.107985</td>\n",
              "      <td id=\"T_b3c21_row24_col1\" class=\"data row24 col1\" >-0.317291</td>\n",
              "      <td id=\"T_b3c21_row24_col2\" class=\"data row24 col2\" >-0.014283</td>\n",
              "      <td id=\"T_b3c21_row24_col3\" class=\"data row24 col3\" >-0.193751</td>\n",
              "      <td id=\"T_b3c21_row24_col4\" class=\"data row24 col4\" >-0.161685</td>\n",
              "      <td id=\"T_b3c21_row24_col5\" class=\"data row24 col5\" >-0.102667</td>\n",
              "      <td id=\"T_b3c21_row24_col6\" class=\"data row24 col6\" >-0.141069</td>\n",
              "      <td id=\"T_b3c21_row24_col7\" class=\"data row24 col7\" >-0.170928</td>\n",
              "      <td id=\"T_b3c21_row24_col8\" class=\"data row24 col8\" >-0.056273</td>\n",
              "      <td id=\"T_b3c21_row24_col9\" class=\"data row24 col9\" >0.032562</td>\n",
              "      <td id=\"T_b3c21_row24_col10\" class=\"data row24 col10\" >-0.272305</td>\n",
              "      <td id=\"T_b3c21_row24_col11\" class=\"data row24 col11\" >-0.189706</td>\n",
              "      <td id=\"T_b3c21_row24_col12\" class=\"data row24 col12\" >-0.168541</td>\n",
              "      <td id=\"T_b3c21_row24_col13\" class=\"data row24 col13\" >-0.015196</td>\n",
              "      <td id=\"T_b3c21_row24_col14\" class=\"data row24 col14\" >0.012426</td>\n",
              "      <td id=\"T_b3c21_row24_col15\" class=\"data row24 col15\" >0.053571</td>\n",
              "      <td id=\"T_b3c21_row24_col16\" class=\"data row24 col16\" >-0.028965</td>\n",
              "      <td id=\"T_b3c21_row24_col17\" class=\"data row24 col17\" >-0.042440</td>\n",
              "      <td id=\"T_b3c21_row24_col18\" class=\"data row24 col18\" >0.010769</td>\n",
              "      <td id=\"T_b3c21_row24_col19\" class=\"data row24 col19\" >-0.195257</td>\n",
              "      <td id=\"T_b3c21_row24_col20\" class=\"data row24 col20\" >0.494648</td>\n",
              "      <td id=\"T_b3c21_row24_col21\" class=\"data row24 col21\" >0.185574</td>\n",
              "      <td id=\"T_b3c21_row24_col22\" class=\"data row24 col22\" >-0.154123</td>\n",
              "      <td id=\"T_b3c21_row24_col23\" class=\"data row24 col23\" >-0.149720</td>\n",
              "      <td id=\"T_b3c21_row24_col24\" class=\"data row24 col24\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row24_col25\" class=\"data row24 col25\" >-0.103060</td>\n",
              "      <td id=\"T_b3c21_row24_col26\" class=\"data row24 col26\" >-0.121089</td>\n",
              "      <td id=\"T_b3c21_row24_col27\" class=\"data row24 col27\" >-0.109756</td>\n",
              "      <td id=\"T_b3c21_row24_col28\" class=\"data row24 col28\" >-0.089330</td>\n",
              "      <td id=\"T_b3c21_row24_col29\" class=\"data row24 col29\" >-0.246932</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row25\" class=\"row_heading level0 row25\" >modelo_318</th>\n",
              "      <td id=\"T_b3c21_row25_col0\" class=\"data row25 col0\" >0.060903</td>\n",
              "      <td id=\"T_b3c21_row25_col1\" class=\"data row25 col1\" >-0.259479</td>\n",
              "      <td id=\"T_b3c21_row25_col2\" class=\"data row25 col2\" >0.032583</td>\n",
              "      <td id=\"T_b3c21_row25_col3\" class=\"data row25 col3\" >-0.096272</td>\n",
              "      <td id=\"T_b3c21_row25_col4\" class=\"data row25 col4\" >0.006609</td>\n",
              "      <td id=\"T_b3c21_row25_col5\" class=\"data row25 col5\" >-0.099495</td>\n",
              "      <td id=\"T_b3c21_row25_col6\" class=\"data row25 col6\" >-0.167145</td>\n",
              "      <td id=\"T_b3c21_row25_col7\" class=\"data row25 col7\" >-0.150520</td>\n",
              "      <td id=\"T_b3c21_row25_col8\" class=\"data row25 col8\" >-0.037180</td>\n",
              "      <td id=\"T_b3c21_row25_col9\" class=\"data row25 col9\" >0.032052</td>\n",
              "      <td id=\"T_b3c21_row25_col10\" class=\"data row25 col10\" >-0.174699</td>\n",
              "      <td id=\"T_b3c21_row25_col11\" class=\"data row25 col11\" >-0.191816</td>\n",
              "      <td id=\"T_b3c21_row25_col12\" class=\"data row25 col12\" >-0.175952</td>\n",
              "      <td id=\"T_b3c21_row25_col13\" class=\"data row25 col13\" >0.033335</td>\n",
              "      <td id=\"T_b3c21_row25_col14\" class=\"data row25 col14\" >-0.032166</td>\n",
              "      <td id=\"T_b3c21_row25_col15\" class=\"data row25 col15\" >0.010288</td>\n",
              "      <td id=\"T_b3c21_row25_col16\" class=\"data row25 col16\" >-0.004623</td>\n",
              "      <td id=\"T_b3c21_row25_col17\" class=\"data row25 col17\" >0.027527</td>\n",
              "      <td id=\"T_b3c21_row25_col18\" class=\"data row25 col18\" >0.010661</td>\n",
              "      <td id=\"T_b3c21_row25_col19\" class=\"data row25 col19\" >0.288958</td>\n",
              "      <td id=\"T_b3c21_row25_col20\" class=\"data row25 col20\" >-0.146174</td>\n",
              "      <td id=\"T_b3c21_row25_col21\" class=\"data row25 col21\" >-0.080196</td>\n",
              "      <td id=\"T_b3c21_row25_col22\" class=\"data row25 col22\" >0.034997</td>\n",
              "      <td id=\"T_b3c21_row25_col23\" class=\"data row25 col23\" >-0.192790</td>\n",
              "      <td id=\"T_b3c21_row25_col24\" class=\"data row25 col24\" >-0.103060</td>\n",
              "      <td id=\"T_b3c21_row25_col25\" class=\"data row25 col25\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row25_col26\" class=\"data row25 col26\" >-0.155923</td>\n",
              "      <td id=\"T_b3c21_row25_col27\" class=\"data row25 col27\" >-0.141330</td>\n",
              "      <td id=\"T_b3c21_row25_col28\" class=\"data row25 col28\" >-0.115028</td>\n",
              "      <td id=\"T_b3c21_row25_col29\" class=\"data row25 col29\" >-0.317969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row26\" class=\"row_heading level0 row26\" >modelo_320</th>\n",
              "      <td id=\"T_b3c21_row26_col0\" class=\"data row26 col0\" >0.097610</td>\n",
              "      <td id=\"T_b3c21_row26_col1\" class=\"data row26 col1\" >-0.031801</td>\n",
              "      <td id=\"T_b3c21_row26_col2\" class=\"data row26 col2\" >-0.025287</td>\n",
              "      <td id=\"T_b3c21_row26_col3\" class=\"data row26 col3\" >-0.092649</td>\n",
              "      <td id=\"T_b3c21_row26_col4\" class=\"data row26 col4\" >-0.049667</td>\n",
              "      <td id=\"T_b3c21_row26_col5\" class=\"data row26 col5\" >-0.067990</td>\n",
              "      <td id=\"T_b3c21_row26_col6\" class=\"data row26 col6\" >-0.121723</td>\n",
              "      <td id=\"T_b3c21_row26_col7\" class=\"data row26 col7\" >-0.002697</td>\n",
              "      <td id=\"T_b3c21_row26_col8\" class=\"data row26 col8\" >-0.006271</td>\n",
              "      <td id=\"T_b3c21_row26_col9\" class=\"data row26 col9\" >-0.034207</td>\n",
              "      <td id=\"T_b3c21_row26_col10\" class=\"data row26 col10\" >-0.024958</td>\n",
              "      <td id=\"T_b3c21_row26_col11\" class=\"data row26 col11\" >-0.169830</td>\n",
              "      <td id=\"T_b3c21_row26_col12\" class=\"data row26 col12\" >-0.150280</td>\n",
              "      <td id=\"T_b3c21_row26_col13\" class=\"data row26 col13\" >0.049391</td>\n",
              "      <td id=\"T_b3c21_row26_col14\" class=\"data row26 col14\" >0.008580</td>\n",
              "      <td id=\"T_b3c21_row26_col15\" class=\"data row26 col15\" >0.000247</td>\n",
              "      <td id=\"T_b3c21_row26_col16\" class=\"data row26 col16\" >-0.017571</td>\n",
              "      <td id=\"T_b3c21_row26_col17\" class=\"data row26 col17\" >0.026093</td>\n",
              "      <td id=\"T_b3c21_row26_col18\" class=\"data row26 col18\" >-0.020024</td>\n",
              "      <td id=\"T_b3c21_row26_col19\" class=\"data row26 col19\" >0.234888</td>\n",
              "      <td id=\"T_b3c21_row26_col20\" class=\"data row26 col20\" >-0.135379</td>\n",
              "      <td id=\"T_b3c21_row26_col21\" class=\"data row26 col21\" >-0.054542</td>\n",
              "      <td id=\"T_b3c21_row26_col22\" class=\"data row26 col22\" >0.103351</td>\n",
              "      <td id=\"T_b3c21_row26_col23\" class=\"data row26 col23\" >-0.226515</td>\n",
              "      <td id=\"T_b3c21_row26_col24\" class=\"data row26 col24\" >-0.121089</td>\n",
              "      <td id=\"T_b3c21_row26_col25\" class=\"data row26 col25\" >-0.155923</td>\n",
              "      <td id=\"T_b3c21_row26_col26\" class=\"data row26 col26\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row26_col27\" class=\"data row26 col27\" >-0.166053</td>\n",
              "      <td id=\"T_b3c21_row26_col28\" class=\"data row26 col28\" >-0.135150</td>\n",
              "      <td id=\"T_b3c21_row26_col29\" class=\"data row26 col29\" >-0.373591</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row27\" class=\"row_heading level0 row27\" >modelo_520</th>\n",
              "      <td id=\"T_b3c21_row27_col0\" class=\"data row27 col0\" >0.093736</td>\n",
              "      <td id=\"T_b3c21_row27_col1\" class=\"data row27 col1\" >-0.014510</td>\n",
              "      <td id=\"T_b3c21_row27_col2\" class=\"data row27 col2\" >0.039648</td>\n",
              "      <td id=\"T_b3c21_row27_col3\" class=\"data row27 col3\" >0.174327</td>\n",
              "      <td id=\"T_b3c21_row27_col4\" class=\"data row27 col4\" >0.142152</td>\n",
              "      <td id=\"T_b3c21_row27_col5\" class=\"data row27 col5\" >0.004149</td>\n",
              "      <td id=\"T_b3c21_row27_col6\" class=\"data row27 col6\" >-0.131966</td>\n",
              "      <td id=\"T_b3c21_row27_col7\" class=\"data row27 col7\" >0.121992</td>\n",
              "      <td id=\"T_b3c21_row27_col8\" class=\"data row27 col8\" >-0.052589</td>\n",
              "      <td id=\"T_b3c21_row27_col9\" class=\"data row27 col9\" >0.063453</td>\n",
              "      <td id=\"T_b3c21_row27_col10\" class=\"data row27 col10\" >0.082576</td>\n",
              "      <td id=\"T_b3c21_row27_col11\" class=\"data row27 col11\" >-0.005299</td>\n",
              "      <td id=\"T_b3c21_row27_col12\" class=\"data row27 col12\" >0.047255</td>\n",
              "      <td id=\"T_b3c21_row27_col13\" class=\"data row27 col13\" >0.022984</td>\n",
              "      <td id=\"T_b3c21_row27_col14\" class=\"data row27 col14\" >0.002796</td>\n",
              "      <td id=\"T_b3c21_row27_col15\" class=\"data row27 col15\" >-0.019093</td>\n",
              "      <td id=\"T_b3c21_row27_col16\" class=\"data row27 col16\" >0.085885</td>\n",
              "      <td id=\"T_b3c21_row27_col17\" class=\"data row27 col17\" >-0.031461</td>\n",
              "      <td id=\"T_b3c21_row27_col18\" class=\"data row27 col18\" >-0.062780</td>\n",
              "      <td id=\"T_b3c21_row27_col19\" class=\"data row27 col19\" >0.184495</td>\n",
              "      <td id=\"T_b3c21_row27_col20\" class=\"data row27 col20\" >-0.142118</td>\n",
              "      <td id=\"T_b3c21_row27_col21\" class=\"data row27 col21\" >-0.099620</td>\n",
              "      <td id=\"T_b3c21_row27_col22\" class=\"data row27 col22\" >0.168269</td>\n",
              "      <td id=\"T_b3c21_row27_col23\" class=\"data row27 col23\" >-0.203831</td>\n",
              "      <td id=\"T_b3c21_row27_col24\" class=\"data row27 col24\" >-0.109756</td>\n",
              "      <td id=\"T_b3c21_row27_col25\" class=\"data row27 col25\" >-0.141330</td>\n",
              "      <td id=\"T_b3c21_row27_col26\" class=\"data row27 col26\" >-0.166053</td>\n",
              "      <td id=\"T_b3c21_row27_col27\" class=\"data row27 col27\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row27_col28\" class=\"data row27 col28\" >-0.122502</td>\n",
              "      <td id=\"T_b3c21_row27_col29\" class=\"data row27 col29\" >-0.338627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row28\" class=\"row_heading level0 row28\" >modelo_X3</th>\n",
              "      <td id=\"T_b3c21_row28_col0\" class=\"data row28 col0\" >-0.034629</td>\n",
              "      <td id=\"T_b3c21_row28_col1\" class=\"data row28 col1\" >0.045235</td>\n",
              "      <td id=\"T_b3c21_row28_col2\" class=\"data row28 col2\" >0.052569</td>\n",
              "      <td id=\"T_b3c21_row28_col3\" class=\"data row28 col3\" >0.055088</td>\n",
              "      <td id=\"T_b3c21_row28_col4\" class=\"data row28 col4\" >-0.005935</td>\n",
              "      <td id=\"T_b3c21_row28_col5\" class=\"data row28 col5\" >0.021181</td>\n",
              "      <td id=\"T_b3c21_row28_col6\" class=\"data row28 col6\" >0.331767</td>\n",
              "      <td id=\"T_b3c21_row28_col7\" class=\"data row28 col7\" >0.017880</td>\n",
              "      <td id=\"T_b3c21_row28_col8\" class=\"data row28 col8\" >0.027276</td>\n",
              "      <td id=\"T_b3c21_row28_col9\" class=\"data row28 col9\" >-0.077755</td>\n",
              "      <td id=\"T_b3c21_row28_col10\" class=\"data row28 col10\" >0.076681</td>\n",
              "      <td id=\"T_b3c21_row28_col11\" class=\"data row28 col11\" >0.079983</td>\n",
              "      <td id=\"T_b3c21_row28_col12\" class=\"data row28 col12\" >0.100747</td>\n",
              "      <td id=\"T_b3c21_row28_col13\" class=\"data row28 col13\" >0.001759</td>\n",
              "      <td id=\"T_b3c21_row28_col14\" class=\"data row28 col14\" >-0.009932</td>\n",
              "      <td id=\"T_b3c21_row28_col15\" class=\"data row28 col15\" >-0.038307</td>\n",
              "      <td id=\"T_b3c21_row28_col16\" class=\"data row28 col16\" >-0.048931</td>\n",
              "      <td id=\"T_b3c21_row28_col17\" class=\"data row28 col17\" >0.071786</td>\n",
              "      <td id=\"T_b3c21_row28_col18\" class=\"data row28 col18\" >0.039949</td>\n",
              "      <td id=\"T_b3c21_row28_col19\" class=\"data row28 col19\" >-0.218617</td>\n",
              "      <td id=\"T_b3c21_row28_col20\" class=\"data row28 col20\" >-0.129872</td>\n",
              "      <td id=\"T_b3c21_row28_col21\" class=\"data row28 col21\" >-0.077253</td>\n",
              "      <td id=\"T_b3c21_row28_col22\" class=\"data row28 col22\" >-0.178203</td>\n",
              "      <td id=\"T_b3c21_row28_col23\" class=\"data row28 col23\" >0.589675</td>\n",
              "      <td id=\"T_b3c21_row28_col24\" class=\"data row28 col24\" >-0.089330</td>\n",
              "      <td id=\"T_b3c21_row28_col25\" class=\"data row28 col25\" >-0.115028</td>\n",
              "      <td id=\"T_b3c21_row28_col26\" class=\"data row28 col26\" >-0.135150</td>\n",
              "      <td id=\"T_b3c21_row28_col27\" class=\"data row28 col27\" >-0.122502</td>\n",
              "      <td id=\"T_b3c21_row28_col28\" class=\"data row28 col28\" >1.000000</td>\n",
              "      <td id=\"T_b3c21_row28_col29\" class=\"data row28 col29\" >-0.275608</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_b3c21_level0_row29\" class=\"row_heading level0 row29\" >modelo_otro_modelo</th>\n",
              "      <td id=\"T_b3c21_row29_col0\" class=\"data row29 col0\" >-0.097446</td>\n",
              "      <td id=\"T_b3c21_row29_col1\" class=\"data row29 col1\" >0.343091</td>\n",
              "      <td id=\"T_b3c21_row29_col2\" class=\"data row29 col2\" >-0.052591</td>\n",
              "      <td id=\"T_b3c21_row29_col3\" class=\"data row29 col3\" >0.082007</td>\n",
              "      <td id=\"T_b3c21_row29_col4\" class=\"data row29 col4\" >0.024148</td>\n",
              "      <td id=\"T_b3c21_row29_col5\" class=\"data row29 col5\" >0.153419</td>\n",
              "      <td id=\"T_b3c21_row29_col6\" class=\"data row29 col6\" >0.169514</td>\n",
              "      <td id=\"T_b3c21_row29_col7\" class=\"data row29 col7\" >0.096662</td>\n",
              "      <td id=\"T_b3c21_row29_col8\" class=\"data row29 col8\" >0.078455</td>\n",
              "      <td id=\"T_b3c21_row29_col9\" class=\"data row29 col9\" >-0.011171</td>\n",
              "      <td id=\"T_b3c21_row29_col10\" class=\"data row29 col10\" >0.174964</td>\n",
              "      <td id=\"T_b3c21_row29_col11\" class=\"data row29 col11\" >0.306086</td>\n",
              "      <td id=\"T_b3c21_row29_col12\" class=\"data row29 col12\" >0.222516</td>\n",
              "      <td id=\"T_b3c21_row29_col13\" class=\"data row29 col13\" >-0.066334</td>\n",
              "      <td id=\"T_b3c21_row29_col14\" class=\"data row29 col14\" >0.011900</td>\n",
              "      <td id=\"T_b3c21_row29_col15\" class=\"data row29 col15\" >0.000014</td>\n",
              "      <td id=\"T_b3c21_row29_col16\" class=\"data row29 col16\" >0.001047</td>\n",
              "      <td id=\"T_b3c21_row29_col17\" class=\"data row29 col17\" >-0.034674</td>\n",
              "      <td id=\"T_b3c21_row29_col18\" class=\"data row29 col18\" >0.021585</td>\n",
              "      <td id=\"T_b3c21_row29_col19\" class=\"data row29 col19\" >-0.254731</td>\n",
              "      <td id=\"T_b3c21_row29_col20\" class=\"data row29 col20\" >0.104213</td>\n",
              "      <td id=\"T_b3c21_row29_col21\" class=\"data row29 col21\" >0.106350</td>\n",
              "      <td id=\"T_b3c21_row29_col22\" class=\"data row29 col22\" >-0.027947</td>\n",
              "      <td id=\"T_b3c21_row29_col23\" class=\"data row29 col23\" >0.166691</td>\n",
              "      <td id=\"T_b3c21_row29_col24\" class=\"data row29 col24\" >-0.246932</td>\n",
              "      <td id=\"T_b3c21_row29_col25\" class=\"data row29 col25\" >-0.317969</td>\n",
              "      <td id=\"T_b3c21_row29_col26\" class=\"data row29 col26\" >-0.373591</td>\n",
              "      <td id=\"T_b3c21_row29_col27\" class=\"data row29 col27\" >-0.338627</td>\n",
              "      <td id=\"T_b3c21_row29_col28\" class=\"data row29 col28\" >-0.275608</td>\n",
              "      <td id=\"T_b3c21_row29_col29\" class=\"data row29 col29\" >1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Comienzo viendo la correlación que tienen ciertas variables con el target (precio). Se puede ver que existe alta correlación entre precio y potencia (0.6393), es decir, a medida que aumenta la potencia, lo suele hacer también el precio. Destaca también la correlación entre precio con alerta_lim_velocidad (0.443333), precio con asientos_traseros_plegables (0.414207) y precio con tipo_coche_suv (0.324800), lo que se interpreta que los coches que tengan esas características, tendrán un precio más elevado.\n",
        "En cuanto a correlación negativa con el target (precio), se puede observar que destacan: precio con antiguedad_años (-0.439656) y con km (-0.409663), lo que se interpreta que, a medida que el coche es más antiguo y tiene más km, el precio del vehículo desciende."
      ],
      "metadata": {
        "id": "Sf1DemSn83gK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "También se puede ver como hay relación entre variables que no son el target. Por ejemplo, entre antiguedad_años y km (0.503982), lo cual tiene sentido ya que un coche más antiguo es más probable que tenga más km.\n",
        "\n",
        "Hay otras variables que relacionan el tipo de coche con alguna característica o modelo, lo que indica que en este tipo de coches son las especificaciones más comunes. Son: tipo_coche_suv con modelo x_3 (0.589675), tipo_coche_hatchback con modelo_116 (0.494648) y tipo_coche_suv con asientos traseros plegables (0.493375). Otra relación que destaca es alerta_lim_velocidad y potencia (0.488737) que debe indicar que los coches más potentes suelen tener éste indicador de alerta de velocidad.\n",
        "\n",
        "En cuanto a variables que correlacionen de manera negativa, hay tipo_coche_hatchback y potencia (-0.225185), seguramente éste tipo de coches sean menos potentes en comparación con el resto.\n"
      ],
      "metadata": {
        "id": "TZmS9XB3BE6j"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Para finalizar, guardo en pickle :)"
      ],
      "metadata": {
        "id": "MVPluBczjNnH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "bmw_clean2.to_pickle('/content/drive/MyDrive/DataScience/Entregas/df_bmw_guardar')"
      ],
      "metadata": {
        "id": "IhfMUzcRjTu_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_bmw_recuperar = pd.read_pickle('/content/drive/MyDrive/DataScience/Entregas/df_bmw_guardar')"
      ],
      "metadata": {
        "id": "L7R6e9xWSctj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_bmw_recuperar.head()"
      ],
      "metadata": {
        "id": "Hgx2gpXSSrd8",
        "outputId": "0d9974f2-8268-434d-c8c2-e6a17c06aa03",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         km  potencia  gas_diesel  volante_regulable  aire_acondicionado  \\\n",
              "0  0.140413  0.236407           1                  1                   1   \n",
              "1  0.013987  0.749409           0                  1                   1   \n",
              "2  0.183280  0.283688           1                  0                   0   \n",
              "3  0.128043  0.319149           1                  1                   1   \n",
              "4  0.097118  0.378251           1                  1                   1   \n",
              "\n",
              "   camara_trasera  asientos_traseros_plegables  elevalunas_electrico  \\\n",
              "0               0                            0                     1   \n",
              "1               0                            0                     0   \n",
              "2               0                            0                     1   \n",
              "3               0                            0                     1   \n",
              "4               0                            0                     0   \n",
              "\n",
              "   bluetooth  gps  ...  tipo_coche_hatchback  tipo_coche_otro_tipo  \\\n",
              "0          1    1  ...                     0                     1   \n",
              "1          1    1  ...                     0                     1   \n",
              "2          0    1  ...                     0                     1   \n",
              "3          1    1  ...                     0                     1   \n",
              "4          1    1  ...                     0                     1   \n",
              "\n",
              "   tipo_coche_sedan  tipo_coche_suv  modelo_116  modelo_318  modelo_320  \\\n",
              "0                 0               0           0           0           0   \n",
              "1                 0               0           0           0           0   \n",
              "2                 0               0           0           0           1   \n",
              "3                 0               0           0           0           0   \n",
              "4                 0               0           0           0           0   \n",
              "\n",
              "   modelo_520  modelo_X3  modelo_otro_modelo  \n",
              "0           0          0                   1  \n",
              "1           0          0                   1  \n",
              "2           0          0                   0  \n",
              "3           0          0                   1  \n",
              "4           0          0                   1  \n",
              "\n",
              "[5 rows x 30 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1aa3ed88-76ba-46af-af80-3edb9545be82\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>km</th>\n",
              "      <th>potencia</th>\n",
              "      <th>gas_diesel</th>\n",
              "      <th>volante_regulable</th>\n",
              "      <th>aire_acondicionado</th>\n",
              "      <th>camara_trasera</th>\n",
              "      <th>asientos_traseros_plegables</th>\n",
              "      <th>elevalunas_electrico</th>\n",
              "      <th>bluetooth</th>\n",
              "      <th>gps</th>\n",
              "      <th>...</th>\n",
              "      <th>tipo_coche_hatchback</th>\n",
              "      <th>tipo_coche_otro_tipo</th>\n",
              "      <th>tipo_coche_sedan</th>\n",
              "      <th>tipo_coche_suv</th>\n",
              "      <th>modelo_116</th>\n",
              "      <th>modelo_318</th>\n",
              "      <th>modelo_320</th>\n",
              "      <th>modelo_520</th>\n",
              "      <th>modelo_X3</th>\n",
              "      <th>modelo_otro_modelo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.140413</td>\n",
              "      <td>0.236407</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.013987</td>\n",
              "      <td>0.749409</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.183280</td>\n",
              "      <td>0.283688</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.128043</td>\n",
              "      <td>0.319149</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.097118</td>\n",
              "      <td>0.378251</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 30 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aa3ed88-76ba-46af-af80-3edb9545be82')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1aa3ed88-76ba-46af-af80-3edb9545be82 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1aa3ed88-76ba-46af-af80-3edb9545be82');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('/content/drive/MyDrive/DataScience/Entregas/Laura_Lopez - Entrega_1 - Data_Engineering.ipynb')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "13WKZTacWDy0",
        "outputId": "5bb7e2fc-a48a-4de4-fa2f-8b9bc3829f94"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_cfd51c29-406c-4db4-b6fd-723994a87c37\", \"Laura_Lopez - Entrega_1 - Data_Engineering.ipynb\", 795001)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "YbRhCAP6RJ8t"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}